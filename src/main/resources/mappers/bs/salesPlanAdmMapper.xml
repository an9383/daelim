<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  	
<mapper namespace="mes.mappers.bs.salesPlanAdmMapper">

	<resultMap id="MonSalesPlanAdmVo" type="mes.domain.bs.MonSalesPlanAdmVo">
		<result property="salesYear"			column="SALES_YEAR"				/>
		<result property="salesMon"		    	column="SALES_MON"				/>
		<result property="itemSeq"				column="ITEM_SEQ"				/>			
		<result property="salesAvgQty"			column="SALES_AVG_QTY"			/>		
		<result property="salesTmQty"		    column="SALES_TM_QTY"			/>
		<result property="salesPlanQty"		    column="SALES_PLAN_QTY"			/>
		<result property="confirmYn"		    column="CONFIRM_YN"			    />
		<result property="confirmYnNm"		    column="CONFIRM_YN_NM"			/>
		
		<result property="accCd"		    	column="ACC_CD"					/>
		<result property="accNm"		   	 	column="ACC_NM"			   		/>
		<result property="itemCd"				column="ITEM_CD"				/>		
		<result property="itemModel"		    column="ITEM_MODEL"				/>
		<result property="itemGubun"		    column="ITEM_GUBUN"				/>
		<result property="itemGubunNm"		    column="ITEM_GUBUN_NM"			/>
		<result property="itemNm"		    	column="ITEM_NM"			    />
		<result property="m3"		   			column="M3"			    		/>
		<result property="m2"		    		column="M2"			    		/>
		<result property="m1"		    		column="M1"			    		/>
		
		<result property="regId"				column="REG_ID"					/>
		<result property="regDate"				column="REG_DATE"				/>
		<result property="updId"				column="UPD_ID"					/>				
		<result property="updDate"				column="UPD_DATE"				/>
		
<!-- 		추가사항 -->
		<result property="itemCus"				column="ITEM_CUS"				/>
		<result property="itemCusNm"			column="ITEM_CUS_NM"			/>
		<result property="mainGubun"			column="MAIN_GUBUN"				/>
		<result property="mainGubunNm"			column="MAIN_GUBUN_NM"			/>
		<result property="tmQty"				column="TM_QTY"					/>
		<result property="exportCost"			column="EXPORT_COST"			/>
		<result property="salesPlanCost"		column="SALES_PLAN_COST"		/>
	</resultMap>
	
	<resultMap id="DaySalesPlanAdmVo" type="mes.domain.bs.DaySalesPlanAdmVo">
		<result property="salesYear"			column="SALES_YEAR"				/>
		<result property="salesMon"		    	column="SALES_MON"				/>
		<result property="itemSeq"				column="ITEM_SEQ"				/>			
			
		<result property="salesDay"		    	column="SALES_DAY"				/>
		
		<result property="salesDayQty"		    column="SALES_DAY_QTY"			/>
		<result property="salesSumQty"		    column="SALES_SUM_QTY"			/>
		<result property="salesMonQty"		    column="SALES_MON_QTY"			/>
		<result property="confirmYn"		    column="CONFIRM_YN"			    />
		<result property="monConfirmYn"		    column="MON_CONFIRM_YN"			/>
		<result property="dayConfirmYn"		    column="DAY_CONFIRM_YN"			/>
		<result property="dayConfirmYnNm"		column="DAY_CONFIRM_YN_NM"		/>
	
		<result property="accCd"		    	column="ACC_CD"					/>
		<result property="accNm"		   	 	column="ACC_NM"			   		/>
		<result property="itemCd"				column="ITEM_CD"				/>		
		<result property="itemModel"		    column="ITEM_MODEL"				/>
		<result property="itemNm"		    	column="ITEM_NM"			    />
		<result property="itemColor"			column="ITEM_COLOR"				/>	
		
		<result property="d01"			        column="01"				        />	
		<result property="d02"			        column="02"				        />	
		<result property="d03"			        column="03"				        />	
		<result property="d04"			        column="04"				        />	
		<result property="d05"			        column="05"				        />	
		<result property="d06"			        column="06"				        />	
		<result property="d07"			        column="07"				        />	
		<result property="d08"			        column="08"				        />	
		<result property="d09"			        column="09"				        />	
		<result property="d10"			        column="10"				        />	
		<result property="d11"			        column="11"				        />	
		<result property="d12"			        column="12"				        />	
		<result property="d13"			        column="13"				        />	
		<result property="d14"			        column="14"				        />	
		<result property="d15"			        column="15"				        />	
		<result property="d16"			        column="16"				        />	
		<result property="d17"			        column="17"				        />	
		<result property="d18"			        column="18"				        />	
		<result property="d19"			        column="19"				        />	
		<result property="d20"			        column="20"				        />	
		<result property="d21"			        column="21"				        />	
		<result property="d22"			        column="22"				        />	
		<result property="d23"			        column="23"				        />	
		<result property="d24"			        column="24"				        />	
		<result property="d25"			        column="25"				        />	
		<result property="d26"			        column="26"				        />	
		<result property="d27"			        column="27"				        />	
		<result property="d28"			        column="28"				        />	
		<result property="d29"			        column="29"				        />	
		<result property="d30"			        column="30"				        />	
		<result property="d31"			        column="31"				        />	
		                                                                        
		<result property="regId"		        column="REG_ID"			        />
		<result property="regDate"		        column="REG_DATE"		        />
		<result property="updId"		        column="UPD_ID"			        />				
		<result property="updDate"		        column="UPD_DATE"		        />
		
		<!-- 		추가사항 -->
		<result property="mainGubun"			column="MAIN_GUBUN"				/>
		<result property="mainGubunNm"			column="MAIN_GUBUN_NM"			/>
		<result property="itemCus"				column="ITEM_CUS"				/>
		<result property="itemCusNm"			column="ITEM_CUS_NM"			/>
		
	</resultMap>


	<!-- 월 판매계획관리 목록조회 -->
	<select id="monSalesPlanAdmList" resultMap="MonSalesPlanAdmVo">
		SELECT 
			ITEM_INFO_ADM.ITEM_SEQ
			, ITEM_INFO_ADM.ITEM_CD
		 	, ITEM_INFO_ADM.ITEM_NM
		 	, ITEM_INFO_ADM.ITEM_GUBUN
		 	, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=ITEM_INFO_ADM.ITEM_GUBUN AND X.BASE_GROUP_CD='079')ITEM_GUBUN_NM
			, ITEM_INFO_ADM.MAIN_GUBUN
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=ITEM_INFO_ADM.MAIN_GUBUN AND X.BASE_GROUP_CD='112')MAIN_GUBUN_NM
		  	, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=ITEM_INFO_ADM.ITEM_MODEL AND X.BASE_GROUP_CD='099')ITEM_MODEL
		 	, ITEM_INFO_ADM.ITEM_CUS
		 	, (SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM X WHERE X.DEAL_CORP_CD=ITEM_INFO_ADM.ITEM_CUS) ITEM_CUS_NM
			, ISNULL(M3_TB.M3, 0) M3
			, ISNULL(M2_TB.M2, 0) M2
			, ISNULL(M1_TB.M1, 0) M1
			, ISNULL(ROUND(CONVERT(FLOAT, (CONVERT(FLOAT, ISNULL(M3_TB.M3, 0)) + CONVERT(FLOAT, ISNULL(M2_TB.M2, 0)) + CONVERT(FLOAT, ISNULL(M1_TB.M1, 0)))/3),2),0) SALES_AVG_QTY
		 	, 0 SALES_TM_QTY
		 	, ISNULL(MSP_ADM.SALES_PLAN_QTY,0) SALES_PLAN_QTY
			, MSP_ADM.CONFIRM_YN
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=MSP_ADM.CONFIRM_YN AND X.BASE_GROUP_CD='046') CONFIRM_YN_NM
			, X.TM_QTY
			, (CASE WHEN MAKE_LOC_CD IS NULL THEN (SELECT EQUIP_STR_IN_OUT FROM TB_EQUIP_CODE_ADM Z WHERE Z.EQUIP_CD=MOLD_CD) ELSE MAKE_LOC_CD END) MAKE_LOC_CD
			, FORMAT(CONVERT(FLOAT, ISNULL(
				(SELECT TOP(1) X.EXPORT_COST FROM TB_ITEM_COST_LIST X WHERE X.ITEM_SEQ = ITEM_INFO_ADM.ITEM_SEQ AND X.EXPORT_DATE <![CDATA[<=]]> (SUBSTRING(#{salesMon}, 1, 6)+'31') ORDER BY X.EXPORT_DATE DESC, X.REG_DATE DESC)
				, 0)), '#,##0.##') EXPORT_COST
			, FORMAT((ISNULL(MSP_ADM.SALES_PLAN_QTY, 0) * ISNULL(
				(SELECT TOP(1) X.EXPORT_COST FROM TB_ITEM_COST_LIST X WHERE X.ITEM_SEQ = ITEM_INFO_ADM.ITEM_SEQ AND X.EXPORT_DATE <![CDATA[<=]]> (SUBSTRING(#{salesMon}, 1, 6)+'31') ORDER BY X.EXPORT_DATE DESC, X.REG_DATE DESC)
				, 0)), '#,##0.##') SALES_PLAN_COST
		FROM TB_ITEM_INFO_ADM ITEM_INFO_ADM
		LEFT OUTER JOIN (
			SELECT ITEM_SEQ,
				   SALES_PLAN_QTY,
			       CONFIRM_YN
			FROM TB_MON_SALES_PLAN_ADM 
			WHERE 1=1 
			AND SALES_YEAR = #{salesYear}
			AND SALES_MON=SUBSTRING(#{salesMon}, 5, 2)
			GROUP BY ITEM_SEQ,SALES_PLAN_QTY,CONFIRM_YN
		) MSP_ADM
		ON ITEM_INFO_ADM.ITEM_SEQ = MSP_ADM.ITEM_SEQ
		LEFT OUTER JOIN (
			SELECT DOD_TB.ITEM_SEQ, SUM(DOD_TB.OUTPUT_QTY) M1
			FROM TB_DELIVERY_ORDER_DTL DOD_TB
			WHERE 1=1
			<if test="m1Date != null and !m1Date.equals('')">
			AND DOD_TB.OUTPUT_DATE BETWEEN #{m1Date} + '01' AND #{m1Date} + '31'
			</if>
			AND DOD_TB.DO_STATUS = '003'
			GROUP BY DOD_TB.ITEM_SEQ
		) M1_TB
		ON ITEM_INFO_ADM.ITEM_SEQ = M1_TB.ITEM_SEQ
		LEFT OUTER JOIN (
			SELECT DOD_TB.ITEM_SEQ, SUM(DOD_TB.OUTPUT_QTY) M2
			FROM TB_DELIVERY_ORDER_DTL DOD_TB
			WHERE 1=1
			<if test="m2Date != null and !m2Date.equals('')">
			AND DOD_TB.OUTPUT_DATE BETWEEN #{m2Date} + '01' AND #{m2Date} + '31'
			</if>
			AND DOD_TB.DO_STATUS = '003'
			GROUP BY DOD_TB.ITEM_SEQ
		) M2_TB
		ON ITEM_INFO_ADM.ITEM_SEQ = M2_TB.ITEM_SEQ
		LEFT OUTER JOIN (
			SELECT DOD_TB.ITEM_SEQ, SUM(DOD_TB.OUTPUT_QTY) M3
			FROM TB_DELIVERY_ORDER_DTL DOD_TB
			WHERE 1=1
			<if test="m3Date != null and !m3Date.equals('')">
			AND DOD_TB.OUTPUT_DATE BETWEEN #{m3Date} + '01' AND #{m3Date} + '31'
			</if>
			AND DOD_TB.DO_STATUS = '003'
			GROUP BY DOD_TB.ITEM_SEQ
		) M3_TB
		ON ITEM_INFO_ADM.ITEM_SEQ = M3_TB.ITEM_SEQ
		LEFT JOIN (
			SELECT	
				Z.ITEM_SEQ,
				ISNULL(A.QTY,0) A_QTY,
				ISNULL(B.QTY,0) B_QTY,
				ISNULL(C.QTY,0) C_QTY,
				ISNULL(D.QTY,0) D_QTY,
				(ISNULL(A.QTY,0)+ISNULL(C.QTY,0)) IN_QTY,
				(ISNULL(B.QTY,0)+ISNULL(D.QTY,0)) OUT_QTY,
				(ISNULL(A.QTY,0)+ISNULL(C.QTY,0) - ISNULL(B.QTY,0)+ISNULL(D.QTY,0)) TM_QTY
			FROM TB_ITEM_INFO_ADM Z
			LEFT JOIN TB_STOCK_PAYMENT_ADM S
			ON Z.ITEM_SEQ = S.SP_CD
			LEFT OUTER JOIN
				(
				SELECT 
				    SP_CD,
					SUM(SP_QTY) QTY
				FROM TB_STOCK_PAYMENT_ADM
				WHERE SP_GUBUN = '001'
				<if test="mainGubun != null">
					<if test="mainGubun.equals('001')">
						AND LOCATION_CD IN ('001', '002')
					</if>
					<if test="mainGubun.equals('002')">
						AND LOCATION_CD IN ('006', '007')
					</if>
				</if>
				GROUP BY SP_CD
			) A
			ON S.SP_CD = A.SP_CD
			LEFT OUTER JOIN
			(
				SELECT 
				    SP_CD,
					SUM(SP_QTY) QTY
				FROM TB_STOCK_PAYMENT_ADM
				WHERE SP_GUBUN = '002'
				<if test="mainGubun != null">
					<if test="mainGubun.equals('001')">
						AND LOCATION_CD IN ('001', '002')
					</if>
					<if test="mainGubun.equals('002')">
						AND LOCATION_CD IN ('006', '007')
					</if>
				</if>
				GROUP BY SP_CD
			) B
			ON S.SP_CD = B.SP_CD
			LEFT OUTER JOIN
			(
				SELECT 
				    SP_CD,
					SUM(SP_QTY) QTY
				FROM TB_STOCK_PAYMENT_ADM
				WHERE SP_GUBUN = '003'
				<if test="mainGubun != null">
					<if test="mainGubun.equals('001')">
						AND LOCATION_CD IN ('001', '002')
					</if>
					<if test="mainGubun.equals('002')">
						AND LOCATION_CD IN ('006', '007')
					</if>
				</if>
				GROUP BY SP_CD
			) C
			ON S.SP_CD = C.SP_CD
			LEFT OUTER JOIN
			(
				SELECT 
				    SP_CD,
					SUM(SP_QTY) QTY
				FROM TB_STOCK_PAYMENT_ADM
				WHERE SP_GUBUN = '004'
				<if test="mainGubun != null">
					<if test="mainGubun.equals('001')">
						AND LOCATION_CD IN ('001', '002')
					</if>
					<if test="mainGubun.equals('002')">
						AND LOCATION_CD IN ('006', '007')
					</if>
				</if>
				GROUP BY SP_CD
			) D
			ON S.SP_CD = D.SP_CD
			WHERE 1=1
			GROUP BY Z.ITEM_SEQ, A.QTY, B.QTY, C.QTY, D.QTY
		) X
		ON ITEM_INFO_ADM.ITEM_SEQ = X.ITEM_SEQ
		WHERE 1=1
		<if test="bongjaeCheck != null and !bongjaeCheck.equals('')">
		AND (CASE ITEM_INFO_ADM.ITEM_GUBUN WHEN '003' THEN (CASE ITEM_INFO_ADM.PROD_GUBUN WHEN '001' THEN 'X' WHEN '003' THEN 'X' ELSE 'O' END) ELSE 'O' END) = 'O'
		</if>
		
		GROUP BY ITEM_INFO_ADM.MAIN_GUBUN,ITEM_INFO_ADM.ITEM_CUS,ITEM_INFO_ADM.ITEM_GUBUN,ITEM_INFO_ADM.ITEM_MODEL,ITEM_INFO_ADM.ITEM_SEQ,ITEM_INFO_ADM.ITEM_CD,ITEM_NM,MSP_ADM.SALES_PLAN_QTY,MSP_ADM.CONFIRM_YN,X.TM_QTY,MAKE_LOC_CD,MOLD_CD,M3_TB.M3,M2_TB.M2,M1_TB.M1,ITEM_INFO_ADM.EXPORT_COST
		
		HAVING 1=1
		AND ITEM_INFO_ADM.ITEM_GUBUN IN ('001','002','003')
		AND (CASE WHEN MAKE_LOC_CD IS NULL THEN (SELECT EQUIP_STR_IN_OUT FROM TB_EQUIP_CODE_ADM Z WHERE Z.EQUIP_CD=MOLD_CD) ELSE MAKE_LOC_CD END) = '001'
		<if test="mainGubun != null and mainGubun != ''">
		AND ITEM_INFO_ADM.MAIN_GUBUN = #{mainGubun}
		</if>
		<if test="confirmYn!=null and confirmYn.equals('001')">
		AND MSP_ADM.CONFIRM_YN=#{confirmYn}
		</if>
		<if test="confirmYn!=null and confirmYn.equals('002')">
		AND (MSP_ADM.CONFIRM_YN=#{confirmYn} OR MSP_ADM.CONFIRM_YN IS NULL)
		</if>
		
	</select>
	
	<!-- 소요량분석 - 월 생산계획관리 목록조회 -->
	<select id="bsMonProdPlanAdmList" resultMap="MonSalesPlanAdmVo">
		SELECT 
			ITEM_INFO_ADM.ITEM_SEQ,
			ITEM_INFO_ADM.ITEM_CD,
		 	ITEM_INFO_ADM.ITEM_NM,
		 	ITEM_INFO_ADM.ITEM_GUBUN,
		 	(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=ITEM_INFO_ADM.ITEM_GUBUN AND X.BASE_GROUP_CD='079')ITEM_GUBUN_NM,
			ITEM_INFO_ADM.MAIN_GUBUN,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=ITEM_INFO_ADM.MAIN_GUBUN AND X.BASE_GROUP_CD='112')MAIN_GUBUN_NM,
		  	(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=ITEM_INFO_ADM.ITEM_MODEL AND X.BASE_GROUP_CD='099')ITEM_MODEL,
		 	ITEM_INFO_ADM.ITEM_CUS,
		 	(SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM X WHERE X.DEAL_CORP_CD=ITEM_INFO_ADM.ITEM_CUS) ITEM_CUS_NM,
			'0' M3,
			'0' M2,
			'0' M1,
			ISNULL(ROUND(CONVERT(FLOAT,(0)/3),2),0) SALES_AVG_QTY,
		 	0 SALES_TM_QTY,
		 	ISNULL(MSP_ADM.PROD_TOTAL_QTY,0) SALES_PLAN_QTY,
			MSP_ADM.CONFIRM_YN,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=MSP_ADM.CONFIRM_YN AND X.BASE_GROUP_CD = '046') CONFIRM_YN_NM
		FROM TB_ITEM_INFO_ADM ITEM_INFO_ADM
		LEFT OUTER JOIN 
		(
			SELECT ITEM_SEQ,
				   PROD_TOTAL_QTY,
			       CONFIRM_YN
			FROM TB_MON_PROD_PLAN_ADM 
			WHERE 1=1 
			AND PROD_YEAR = #{salesYear}
			AND PROD_MON = SUBSTRING(#{salesMon}, 5, 2)
			GROUP BY ITEM_SEQ, PROD_TOTAL_QTY, CONFIRM_YN
		)MSP_ADM
		ON ITEM_INFO_ADM.ITEM_SEQ = MSP_ADM.ITEM_SEQ
		
		WHERE 1=1
		<if test="bongjaeCheck != null and !bongjaeCheck.equals('')">
		AND (CASE ITEM_INFO_ADM.ITEM_GUBUN WHEN '003' THEN (CASE ITEM_INFO_ADM.PROD_GUBUN WHEN '001' THEN 'X' WHEN '003' THEN 'X' ELSE 'O' END) ELSE 'O' END) = 'O'
		</if>
		GROUP BY  ITEM_INFO_ADM.MAIN_GUBUN,ITEM_INFO_ADM.ITEM_CUS,ITEM_INFO_ADM.ITEM_GUBUN,ITEM_INFO_ADM.ITEM_MODEL,ITEM_INFO_ADM.ITEM_SEQ,ITEM_INFO_ADM.ITEM_CD,ITEM_NM,MSP_ADM.PROD_TOTAL_QTY,MSP_ADM.CONFIRM_YN
		
		HAVING 1=1
		AND MSP_ADM.PROD_TOTAL_QTY != '0.0'
		AND ITEM_INFO_ADM.ITEM_GUBUN IN ('001','002','003')
		
		<if test="mainGubun != null and mainGubun != ''">
		AND ITEM_INFO_ADM.MAIN_GUBUN = #{mainGubun}
		</if>
		<if test="confirmYn!=null and confirmYn.equals('001')">
		AND MSP_ADM.CONFIRM_YN = #{confirmYn}
		</if>
		<if test="confirmYn!=null and confirmYn.equals('002')">
		AND (MSP_ADM.CONFIRM_YN = #{confirmYn} OR MSP_ADM.CONFIRM_YN IS NULL)
		</if>
		
	</select>
	
	<!-- 월 판매계획관리 상세조회 -->
	<select id="monSalesPlanAdmRead" resultType="int">
		SELECT COUNT(*)
		FROM TB_MON_SALES_PLAN_ADM
		WHERE 1=1
		AND SALES_YEAR = #{salesYear}
		AND SALES_MON = #{salesMon}
		AND ITEM_SEQ = #{itemSeq}
	</select>
	
	<!-- 월 판매계획관리 등록 -->
	<insert id="monSalesPlanAdmCreate">
		INSERT INTO TB_MON_SALES_PLAN_ADM		(
			SALES_YEAR,
			SALES_MON,
			ITEM_SEQ,
			SALES_AVG_QTY,
			SALES_TM_QTY,
			SALES_PLAN_QTY,
			CONFIRM_YN,
			REG_ID,
			REG_DATE
		) 
		VALUES(
			#{salesYear},
			#{salesMon},
			#{itemSeq},
			#{salesAvgQty},
			#{salesTmQty},
			#{salesPlanQty},
			#{confirmYn},
			#{regId},
			GETDATE()
		)
	
	</insert>
	
	
	<!-- 월 판매계획관리 수정 -->
	<update id="monSalesPlanAdmUpdate">
		UPDATE	TB_MON_SALES_PLAN_ADM
		<set>
			<if test="salesAvgQty!=null and !salesAvgQty.equals('')">
				SALES_AVG_QTY = #{salesAvgQty},
			</if>
			<if test="salesTmQty!=null and !salesTmQty.equals('')">
				SALES_TM_QTY = #{salesTmQty},
			</if>
			<if test="salesPlanQty!=null and !salesPlanQty.equals('')">
				SALES_PLAN_QTY = #{salesPlanQty},
			</if>
			<if test="confirmYn!=null and !confirmYn.equals('')">
				CONFIRM_YN = #{confirmYn},
			</if>
			UPD_ID = #{updId},
			UPD_DATE = GETDATE()
		</set> 
		WHERE 1=1
		AND	SALES_YEAR = #{salesYear}
		AND	SALES_MON = #{salesMon}
		AND ITEM_SEQ=#{itemSeq}
	
	</update>
	
	<!-- 월생산계획관리 삭제 -->
	<delete id="monSalesPlanAdmListDelete">
		DELETE FROM TB_MON_SALES_PLAN_ADM
		WHERE 1=1
		AND SALES_YEAR = #{list[0].salesYear}
		AND SALES_MON = #{list[0].salesMon}
		AND ITEM_SEQ IN 
		(
			<foreach item="item" index="index" collection="list" separator=",">
			#{item.itemSeq}
			</foreach>
		)
	</delete>
	
	<!-- 월 판매계획관리 등록 -->
	<insert id="monSalesPlanAdmListCreate">
		INSERT INTO TB_MON_SALES_PLAN_ADM		(
			SALES_YEAR,
			SALES_MON,
			ITEM_SEQ,
			SALES_AVG_QTY,
			SALES_TM_QTY,
			SALES_PLAN_QTY,
			CONFIRM_YN,
			REG_ID,
			REG_DATE
		) 
		VALUES
		<foreach item="item" index="index" collection="list" separator=",">
		(
			#{item.salesYear},
			#{item.salesMon},
			#{item.itemSeq},
			#{item.salesAvgQty},
			#{item.salesTmQty},
			#{item.salesPlanQty},
			#{item.confirmYn},
			#{item.regId},
			GETDATE()
		)
		</foreach>
	</insert>
	
	<!-- 월 판매계획관리 리스트 수정 -->
	<update id="monSalesPlanAdmListUpdate">
		<foreach item="item" index="index" collection="list" separator=";">
			UPDATE	TB_MON_SALES_PLAN_ADM
			<set>
				CONFIRM_YN = #{item.confirmYn},
				UPD_ID = #{item.updId},
				UPD_DATE = GETDATE()
			</set>
			WHERE 1=1
			AND	SALES_YEAR = #{item.salesYear}
			AND	SALES_MON = #{item.salesMon}
			AND ITEM_SEQ = #{item.itemSeq}
		</foreach>
	</update>
	
	<!-- 일 판매계획관리 목록조회 -->
	<select id="daySalesPlanAdmList" resultMap="DaySalesPlanAdmVo">
		SELECT 
			A.ITEM_SEQ,
			C.MAIN_GUBUN,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=C.MAIN_GUBUN AND X.BASE_GROUP_CD='112')MAIN_GUBUN_NM,
			C.ITEM_CD,
			C.ITEM_NM,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=C.ITEM_MODEL AND X.BASE_GROUP_CD='099')ITEM_MODEL,
			C.ITEM_CUS,
			(SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM X WHERE X.DEAL_CORP_CD=C.ITEM_CUS) ITEM_CUS_NM,
			C.ITEM_COLOR,
			A.SALES_YEAR,
			A.SALES_MON,
			A.CONFIRM_YN MON_CONFIRM_YN,
			B.DAY_CONFIRM_YN,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=B.DAY_CONFIRM_YN AND X.BASE_GROUP_CD='046') DAY_CONFIRM_YN_NM,
			ISNULL(A.SALES_PLAN_QTY,0)SALES_MON_QTY,
			D.SALES_SUM_QTY,
			B.[01],B.[02],B.[03],B.[04],B.[05],B.[06],B.[07],B.[08],B.[09],B.[10],
			B.[11],B.[12],B.[13],B.[14],B.[15],B.[16],B.[17],B.[18],B.[19],B.[20],
			B.[21],B.[22],B.[23],B.[24],B.[25],B.[26],B.[27],B.[28],B.[29],B.[30],B.[31],
			(CASE WHEN C.MAKE_LOC_CD IS NULL THEN (SELECT EQUIP_STR_IN_OUT FROM TB_EQUIP_CODE_ADM Z WHERE Z.EQUIP_CD=C.MOLD_CD) ELSE MAKE_LOC_CD END) MAKE_LOC_CD
		FROM TB_MON_SALES_PLAN_ADM A
		LEFT OUTER JOIN
		(
			SELECT *
			FROM (
				SELECT 
					B.SALES_YEAR,
					B.SALES_MON,
					B.SALES_DAY,
					B.ITEM_SEQ ITEM_SEQ2,
					B.CONFIRM_YN DAY_CONFIRM_YN, 
					ISNULL(SALES_DAY_QTY,0) SALES_DAY_QTY
				FROM TB_DAY_SALES_PLAN_ADM B
				WHERE 1=1
			) AS RESULT
			PIVOT (
				SUM(SALES_DAY_QTY) FOR SALES_DAY IN ([01],[02],[03],[04],[05],[06],[07],[08],[09],
													[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],
													[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],
													[30],[31])
					
			) AS PIVOT_RESULT
		)B
		ON A.SALES_YEAR=B.SALES_YEAR
		AND A.SALES_MON=B.SALES_MON
		AND A.ITEM_SEQ=B.ITEM_SEQ2
		LEFT OUTER JOIN 
		(
			SELECT 
				DISTINCT(X.SALES_SUM_QTY) SALES_SUM_QTY,
				X.SALES_YEAR,
				X.SALES_MON,
				X.ITEM_SEQ
			FROM TB_DAY_SALES_PLAN_ADM X
			GROUP BY X.SALES_YEAR,SALES_MON,ITEM_SEQ,X.SALES_SUM_QTY
		)D
		ON A.SALES_YEAR = D.SALES_YEAR
		AND A.SALES_MON = D.SALES_MON
		AND A.ITEM_SEQ = D.ITEM_SEQ
		LEFT OUTER JOIN TB_ITEM_INFO_ADM C
		ON A.ITEM_SEQ = C.ITEM_SEQ
		WHERE A.CONFIRM_YN = '001'
		AND A.SALES_YEAR = #{salesYear}
		AND A.SALES_MON = #{salesMon}
		AND A.ITEM_SEQ = C.ITEM_SEQ
		AND (CASE WHEN C.MAKE_LOC_CD IS NULL THEN (SELECT EQUIP_STR_IN_OUT FROM TB_EQUIP_CODE_ADM Z WHERE Z.EQUIP_CD=C.MOLD_CD) ELSE MAKE_LOC_CD END) = '001'
		<if test="mainGubun != null and mainGubun != ''">
		AND (SELECT Z.MAIN_GUBUN FROM TB_ITEM_INFO_ADM Z WHERE Z.ITEM_SEQ = A.ITEM_SEQ) = #{mainGubun}
		</if>
		<if test="confirmYn!=null and confirmYn.equals('001')">
		AND B.DAY_CONFIRM_YN = #{confirmYn}
		</if>
		<if test="confirmYn!=null and confirmYn.equals('002')">
		AND (B.DAY_CONFIRM_YN = #{confirmYn} OR B.DAY_CONFIRM_YN IS NULL)
		</if>
		<if test="bongjaeCheck != null and !bongjaeCheck.equals('')">
		AND (CASE C.ITEM_GUBUN WHEN '003' THEN (CASE C.PROD_GUBUN WHEN '001' THEN 'X' WHEN '003' THEN 'X' ELSE 'O' END) ELSE 'O' END) = 'O'
		</if>
	</select>
	
	
	<!-- 일 판매계획관리 상세조회 -->
	<select id="daySalesPlanAdmRead" resultType="int">
		SELECT COUNT(*)
		FROM TB_DAY_SALES_PLAN_ADM
		WHERE 1=1
		AND SALES_YEAR=#{salesYear}
		AND SALES_MON=#{salesMon}
		AND SALES_DAY=#{salesDay}
		AND ITEM_SEQ=#{itemSeq}
	
	</select>
	
	<!-- 일 판매계획관리 상세조회2 -->
	<select id="daySalesPlanAdmRead2" resultMap="DaySalesPlanAdmVo">
		SELECT	
			A.SALES_YEAR,
			A.SALES_MON,
			A.ITEM_SEQ,
			A.SALES_DAY,
			SALES_DAY_QTY,
			SALES_SUM_QTY,
			B.CONFIRM_YN,
			(SELECT SALES_ORDER_QTY FROM TB_MON_PROD_PLAN_ADM X WHERE 1=1 AND X.PROD_YEAR=A.SALES_YEAR AND X.PROD_MON=A.SALES_MON AND X.ITEM_SEQ=A.ITEM_SEQ) SALES_MON_QTY
		FROM TB_DAY_SALES_PLAN_ADM A
		LEFT OUTER JOIN 
		(SELECT 
			SALES_YEAR,
			SALES_DAY,
			ITEM_SEQ,
			CONFIRM_YN
		FROM TB_DAY_SALES_PLAN_ADM
		GROUP BY SALES_YEAR, SALES_DAY,ITEM_SEQ,CONFIRM_YN
		) B
		ON A.SALES_YEAR=B.SALES_YEAR
		AND A.SALES_DAY=B.SALES_DAY
		AND A.ITEM_SEQ=B.ITEM_SEQ
		WHERE 1=1
		AND A.SALES_YEAR=#{salesYear}
		AND A.SALES_MON=#{salesMon}
		AND A.ITEM_SEQ=#{itemSeq}
		
		ORDER BY SALES_DAY
	</select>

	
	<!-- 일 판매계획관리 등록-->
	<insert id="daySalesPlanAdmCreate">
		INSERT INTO TB_DAY_SALES_PLAN_ADM(
			SALES_YEAR,
			SALES_MON,
			ITEM_SEQ,
			SALES_DAY,
			SALES_DAY_QTY,
			SALES_SUM_QTY,
			SALES_MON_QTY,
			CONFIRM_YN,
			REG_ID,
			REG_DATE
		) 
		VALUES(
			#{salesYear},
			#{salesMon},
			#{itemSeq},
			#{salesDay},
			#{salesDayQty},
			#{salesSumQty},
			#{salesMonQty},
			#{confirmYn},
			#{regId},
			GETDATE()
		)
	</insert>
	
	
	<!-- 일 판매계획관리 수정 -->
	<update id="daySalesPlanAdmUpdate">
		UPDATE	TB_DAY_SALES_PLAN_ADM 
		<set>
			<if test="salesDayQty!=null and !salesDayQty.equals('')">
				SALES_DAY_QTY = #{salesDayQty},
			</if>
			<if test="salesSumQty!=null and !salesSumQty.equals('')">
				SALES_SUM_QTY = #{salesSumQty},
			</if>
			<if test="salesMonQty!=null and !salesMonQty.equals('')">
				SALES_MON_QTY = #{salesMonQty},
			</if>
			<if test="confirmYn!=null and !confirmYn.equals('')">
				CONFIRM_YN = #{confirmYn},
			</if>
			UPD_ID = #{updId},
			UPD_DATE = GETDATE()
		</set>
		WHERE 1=1
		AND SALES_YEAR = #{salesYear}
		AND	SALES_MON = #{salesMon}
		AND ITEM_SEQ=#{itemSeq}
		<if test="salesDay!=null and !salesDay.equals('')">
		AND	SALES_DAY = #{salesDay}
		</if>
	</update>
	
	<!-- 월판매계획 값 조회 -->
	<select id="getSalesMonQty" resultType="int">
		SELECT 
		ISNULL((
				SELECT 
					ISNULL(SALES_PLAN_QTY,0) SALES_PLAN_QTY
				FROM TB_MON_SALES_PLAN_ADM X 
				WHERE 1=1 
				AND X.SALES_YEAR = #{salesYear}
				AND X.SALES_MON = #{salesMon}
				AND X.ITEM_SEQ = #{itemSeq}
			),0)SALES_PLAN_QTY
	</select>
	
	
</mapper>