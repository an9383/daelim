<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  	
<mapper namespace="mes.mappers.po.workOrderMapper">

	<!-- 작업지시 -->
	<resultMap id="WorkOrderVo" type="mes.domain.po.WorkOrderVo">
	
		<result property="workOrdNo"     			column="WORK_ORD_NO"			/>
		<result property="upperWorkOrdNo"           column="UPPER_WORK_ORD_NO"		/>
		<result property="preWorkOrdNo"          	column="PRE_WORK_ORD_NO"		/>
		<result property="contDtlNo"                column="CONT_DTL_NO"			/>
		<result property="barcodeNo"                column="BARCODE_NO"				/>
		<result property="ordLotNo"                 column="ORD_LOT_NO"				/>
		<result property="dtlOrdCnt"                column="DTL_ORD_CNT"			/>
		<result property="itemSeq"                  column="ITEM_SEQ"				/>
		<result property="itemRev"                  column="ITEM_REV"				/>
		<result property="itemGubun"                column="ITEM_GUBUN"				/>
		<result property="itemGubunNm"              column="ITEM_GUBUN_NM"			/>
		<result property="ordDate"                  column="ORD_DATE"				/>
		
		
		<result property="mainWorkChargr"           column="MAIN_WORK_CHARGR"       />
		<result property="mainWorkChargrNm"         column="MAIN_WORK_CHARGR_NM"    />
		<result property="subWorkChargr"            column="SUB_WORK_CHARGR"        />
		<result property="subWorkChargrNm"          column="SUB_WORK_CHARGR_NM"     />
		
		<result property="userNumber"				column="USER_NUMBER"			/>
		<result property="userNm"					column="USER_NM"				/>
		<result property="departmentNm"				column="DEPARTMENT_NM"			/>
		<result property="postNm"					column="POST_NM"				/>
		<result property="chargeDutyNm"				column="CHARGE_DUTY_NM"			/>
		
		<result property="workEndTime"              column="WORK_END_TIME"			/>
		<result property="workGubun"             	column="WORK_GUBUN"				/>
		<result property="workGubunNm"              column="WORK_GUBUN_NM"			/>
		<result property="workStatusCd"             column="WORK_STATUS_CD"			/>
		<result property="workStatusNm"             column="WORK_STATUS_NM"			/>
		<result property="dtlOrdQty"                column="DTL_ORD_QTY"			/>
		<result property="workOrdQty"               column="WORK_ORD_QTY"			/>
		<result property="outputQty"                column="OUTPUT_QTY"				/>
		<result property="faultyQty"                column="FAULTY_QTY"				/>
		<result property="initFaultyQty"            column="INIT_FAULTY_QTY"		/>
		<result property="fuzzQty"            		column="FUZZ_QTY"				/>
		<result property="runnerQty"            	column="RUNNER_QTY"				/>
		<result property="fairQty"                  column="FAIR_QTY"				/>
		<result property="outputDate"               column="OUTPUT_DATE"			/>
		<result property="dlvDate"                  column="DLV_DATE"				/>
		<result property="lastYn"                   column="LAST_YN"				/>
		<result property="lastYnNm"                 column="LAST_YN_NM"				/>
		<result property="reworkYn"                 column="REWORK_YN"				/>
		<result property="reworkYnNm"               column="REWORK_YN_NM"			/>
		<result property="regId"                    column="REG_ID"					/>
		<result property="regDate"                  column="REG_DATE"				/>
		<result property="updId"                    column="UPD_ID"					/>
		<result property="updDate"                  column="UPD_DATE"				/>
		<result property="etcDate"                  column="ETC_DATE"				/>
		<result property="ordDesc"                  column="ORD_DESC"				/>
		
		<result property="itemCd"					column="ITEM_CD"				/>	
		<result property="itemNm"					column="ITEM_NM"				/>
		<result property="itemUnit"					column="ITEM_UNIT"				/>
		<result property="itemSeries"				column="ITEM_SERIES"			/>
		<result property="itemCapa"					column="ITEM_CAPA"				/>
		<result property="itemCable"				column="ITEM_CABLE"				/>
		<result property="pairQty"					column="PAIR_QTY"				/>
		<result property="inLoc"					column="IN_LOC"					/>
		<result property="inspectDate"				column="INSPECT_DATE"			/>
		<result property="completeStatusCd"			column="COMPLETE_STATUS_CD"		/>
		<result property="boxCount"                  column="BOX_COUNT"				/>
		
		<result property="locNo"					column="LOC_NO"					/>
		<result property="locCd"					column="LOC_CD"					/>
		<result property="areaCd"					column="AREA_CD"				/>
		<result property="areaNm"					column="AREA_NM"				/>
		<result property="floorNm"					column="FLOOR_NM"				/>
		
		<result property="outLocNo"					column="OUT_LOC_NO"					/>
		<result property="outLocCd"					column="OUT_LOC_CD"					/>
		<result property="outLocNm"					column="OUT_LOC_NM"					/>
		<result property="outAreaCd"				column="OUT_AREA_CD"				/>
		<result property="outFloorNm"				column="OUT_FLOOR_NM"				/>
		
		<result property="bomCd"                    column="BOM_CD"					/>
		<result property="bomNm"                    column="BOM_NM"					/>
		<result property="prcssCd"                  column="PRCSS_CD"				/>
		<result property="prcssNm"                  column="PRCSS_NM"				/>
		<result property="lowerPrcssCd" 			column="LOWER_PRCSS_CD"			/>	
		<result property="lowerPrcssNm" 			column="LOWER_PRCSS_NM"			/>
		
		<result property="partUnitNm"               column="PART_UNIT_NM"			/>
		<result property="partUnit"                 column="PART_UNIT"				/>
		<result property="partCd"                   column="PART_CD"				/>
		<result property="partNm"                   column="PART_NM"				/>
		<result property="partSeq"      			column="PART_SEQ"				/>	
		<result property="partConsumpt" 			column="PART_CONSUMPT"			/>
		<result property="partRev" 					column="PART_REV"				/>
		
		<result property="equipCd"                 	column="EQUIP_CD"           	/>
		<result property="equipNm"                 	column="EQUIP_NM"           	/>
		<result property="workMethod"               column="WORK_METHOD"           	/>
		<result property="workMethodNm"             column="WORK_METHOD_NM"           />
		<result property="equipCd1"                 column="EQUIP_CD1"           	/>
		<result property="equipCd2"                 column="EQUIP_CD2"           	/>
		<result property="equipCd3"                 column="EQUIP_CD3"           	/>
		<result property="equipCd4"                 column="EQUIP_CD4"           	/>
		<result property="equipCd5"                 column="EQUIP_CD5"           	/>
		<result property="equipNm1"                 column="EQUIP_NM1"           	/>
		<result property="equipNm2"                 column="EQUIP_NM2"           	/>
		<result property="equipNm3"                 column="EQUIP_NM3"           	/>
		<result property="equipNm4"                 column="EQUIP_NM4"           	/>
		<result property="equipNm5"                 column="EQUIP_NM5"           	/>
		
		<result property="workOrdDate"              column="WORK_ORD_DATE"       	/>
		<result property="workEmerYn"               column="WORK_EMER_YN"        	/>
		<result property="workEmerYnNm"             column="WORK_EMER_YN_NM"     	/>
		
		<result property="contNo"                  	column="CONT_NO"     		 	/>
		<result property="prdcRate"                 column="PRDC_RATE"       	 	/>
		<result property="outRate"                  column="OUT_RATE"       	 	/>
		<result property="progress"                	column="PROGRESS"     		 	/>

		<result property="poStatus"                 column="PO_STATUS"     		 	/>
		<result property="inStatus"                 column="IN_STATUS"       	 	/>
		<result property="preOutStatus"             column="PRE_OUT_STATUS"      	/>
		<result property="outStatus"                column="OUT_STATUS"     	 	/>
		<result property="minorPrcssCd"             column="MINOR_PRCSS_CD"      	/>
		<result property="itemInspectStatus"        column="ITEM_INSPECT_STATUS" 	/>

		<result property="doDtlDate"     			column="DO_DTL_DATE"			/>
		<result property="dealCorpNm"     			column="DEAL_CORP_NM"			/>
		<result property="dtlRegDate"     			column="DTL_REG_DATE"			/>
		
		<result property="selStartDate"     		column="SEL_START_DATE"			/>
		<result property="selEndDate"     			column="SEL_END_DATE"			/>
		
		<result property="rcvDate"     				column="RCV_DATE"				/>
		<result property="shipReqDate"     			column="SHIP_REQ_DATE"			/>
		<result property="ordCorpCd"     			column="ORD_CORP_CD"			/>
		<result property="ordCorpNm"     			column="ORD_CORP_NM"			/>
		<result property="confirmYn"				column="CONFIRM_YN" 			/>
		<result property="value"					column="VALUE" 					/>
		
		<!-- 		추가사항 -->
		<result property="itemModel" 				column="ITEM_MODEL"				/>
		<result property="itemModelNm" 				column="ITEM_MODEL_NM"			/>
		<result property="itemCus" 					column="ITEM_CUS"				/>
		<result property="itemCusNm" 				column="ITEM_CUS_NM"			/>
		<result property="moldCd" 					column="MOLD_CD"				/>
		<result property="moldNo" 					column="MOLD_NO"				/>
		<result property="mainGubun"				column="MAIN_GUBUN"				/>
		<result property="mainGubunNm"				column="MAIN_GUBUN_NM"			/>	
		<result property="equipCavity"				column="EQUIP_CAVITY"			/>			
		<result property="moldLocation"				column="MOLD_LOCATION"			/>			
		<result property="tmQty"					column="TM_QTY"					/>			
		<result property="ebomItemNm"				column="EBOM_ITEM_NM"			/>
		<result property="mdInspectYn"				column="MD_INSPECT_YN"			/>	
		
		<result property="workStartDate"			column="WORK_START_DATE"		/>			
		<result property="cavityCnt"				column="CAVITY_CNT"				/>	
		
		<result property="outCorpCd"     			column="OUT_CORP_CD"			/>
		<result property="outCorpNm"     			column="OUT_CORP_NM"			/>		
		<result property="workChargr"     			column="WORK_CHARGR"			/>	
		<result property="workChargrNm"     		column="WORK_CHARGR_NM"			/>	
		<result property="workStatus"     			column="WORK_STATUS"			/>
		<result property="inLocNo"     				column="IN_LOC_NO"				/>
		<result property="inLocCd"     				column="IN_LOC_CD"				/>
		<result property="inAreaCd"     			column="IN_AREA_CD"				/>
		<result property="inFloorNm"     			column="IN_FLOOR_NM"			/>
		<result property="sampleCnt"     			column="SAMPLE_CNT"				/>
		<result property="jajuInspectYn"     		column="JAJU_INSPECT_YN"		/>
		
		<!-- workOrderProgress테이블  -->
		<result property="workProgNo"     			column="WORK_PROG_NO"			/>	
		<result property="workProgDate"     		column="WORK_PROG_DATE"			/>		
		<result property="workProgQty"     			column="WORK_PROG_QTY"			/>	
		<result property="workProgOrd"     			column="WORK_PROG_ORD"			/>		
		<result property="workProgCorp"     		column="WORK_PROG_CORP"			/>	
		<result property="workProgDesc"     		column="WORK_PROG_DESC"			/>	
		
		<result property="tmMon"     				column="TM_MON"					/>			
	</resultMap>
	
	
	<!-- 작업지시서 목록조회 -->
	<select id="listAll" resultMap="WorkOrderVo">
		SELECT	
	   		A.WORK_ORD_NO
			,A.UPPER_WORK_ORD_NO
			,A.CONT_DTL_NO 
			,A.ORD_LOT_NO
			,A.DTL_ORD_CNT
			,A.WORK_ORD_DATE
			,A.WORK_EMER_YN
			,(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=A.WORK_EMER_YN AND BASE_GROUP_CD='060') WORK_EMER_YN_NM						
			,A.ITEM_SEQ
			,A.ITEM_GUBUN
			,(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=A.ITEM_GUBUN AND BASE_GROUP_CD='045') ITEM_GUBUN_NM
			,A.ORD_DATE 
			,A.WORK_STATUS_CD
			,(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE A.WORK_STATUS_CD = X.BASE_CD AND BASE_GROUP_CD='063') WORK_STATUS_NM
			,A.DTL_ORD_QTY
			,A.WORK_ORD_QTY 
			,A.OUTPUT_QTY 
			,A.FAULTY_QTY 
			,A.OUTPUT_DATE 
			,A.DLV_DATE 
			,A.LAST_YN 
			,A.REWORK_YN
			,(SELECT MAX(ETC_DATE) FROM TB_BIZ_ORDER_ETC X WHERE X.CONT_DTL_NO = A.CONT_DTL_NO) ETC_DATE		
			,(SELECT ITEM_NM FROM TB_ITEM_MOTOR_ADM X WHERE X.ITEM_CD = B.ITEM_CD AND X.ITEM_REV = B.ITEM_REV) ITEM_NM
			,A.ORD_DESC
			,A.MAIN_WORK_CHARGR
			,(SELECT USER_NM FROM TB_USER WHERE USER_NUMBER=A.MAIN_WORK_CHARGR) MAIN_WORK_CHARGR_NM
			,A.SUB_WORK_CHARGR
			,(SELECT USER_NM FROM TB_USER WHERE USER_NUMBER=A.SUB_WORK_CHARGR) SUB_WORK_CHARGR_NM
		FROM	TB_WORK_ORDER A, TB_BIZ_ORDER_DTL B
		WHERE	A.CONT_DTL_NO = #{contDtlNo}
		AND A.CONT_DTL_NO = B.CONT_DTL_NO
	</select>	
	
	<!-- 작업지시서 조회 -->
	<select id="workOrdRead" resultMap="WorkOrderVo">
	 	SELECT	
			WO_TB.WORK_ORD_NO
			,WO_TB.UPPER_WORK_ORD_NO
			,WO_TB.ORD_LOT_NO
			,WO_TB.DTL_ORD_CNT
			,WO_TB.WORK_ORD_DATE
			,WO_TB.WORK_EMER_YN
			,(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=WO_TB.WORK_EMER_YN AND BASE_GROUP_CD='060') WORK_EMER_YN_NM		
			,WO_TB.ITEM_SEQ
			,IIA_TB.ITEM_CD
			,IIA_TB.ITEM_NM
			,IIA_TB.ITEM_GUBUN
			,(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=IIA_TB.ITEM_GUBUN AND BASE_GROUP_CD='079') ITEM_GUBUN_NM		
			,IIA_TB.ITEM_MODEL
			,(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=IIA_TB.ITEM_MODEL AND BASE_GROUP_CD='099') ITEM_MODEL_NM		
			,WO_TB.ORD_DATE 
			,WO_TB.WORK_STATUS_CD
			,(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE WO_TB.WORK_STATUS_CD = X.BASE_CD AND BASE_GROUP_CD='063') WORK_STATUS_NM
			,WO_TB.EQUIP_CD
			,(SELECT EQUIP_NM FROM TB_EQUIP_CODE_ADM X WHERE X.EQUIP_CD=WO_TB.EQUIP_CD)EQUIP_NM
			,WO_TB.WORK_METHOD
			,(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=WO_TB.WORK_METHOD AND BASE_GROUP_CD='114') WORK_METHOD_NM		
			,WO_TB.DTL_ORD_QTY
			,WO_TB.WORK_ORD_QTY 
			,WO_TB.OUTPUT_QTY 
			,WO_TB.INIT_FAULTY_QTY
			,ISNULL(WO_TB.FAULTY_QTY,0) FAULTY_QTY
			,WO_TB.OUTPUT_DATE 
			,WO_TB.DLV_DATE 
			,WO_TB.LAST_YN 
			,WO_TB.ORD_DESC
			,WO_TB.SUB_WORK_CHARGR
		FROM	TB_WORK_ORDER WO_TB
		LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA_TB
		ON WO_TB.ITEM_SEQ=IIA_TB.ITEM_SEQ
		WHERE 1=1
		AND WO_TB.WORK_ORD_NO = #{workOrdNo}
	</select>
	
	<!-- 작업지시서 기간 목록조회 -->
	<select id="workOrdListAll" resultMap="WorkOrderVo">
	     SELECT	
	      	WO_TB.WORK_ORD_NO
			,WO_TB.UPPER_WORK_ORD_NO
			,WO_TB.ORD_LOT_NO
			,WO_TB.DTL_ORD_CNT
			,WO_TB.WORK_ORD_DATE
			,WO_TB.WORK_EMER_YN
			,(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = WO_TB.WORK_EMER_YN AND X.BASE_GROUP_CD = '060') WORK_EMER_YN_NM	
			,WO_TB.ITEM_SEQ
			,IIA_TB.ITEM_CD
			,IIA_TB.ITEM_NM
			,IIA_TB.ITEM_MODEL
			,(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA_TB.ITEM_MODEL AND X.BASE_GROUP_CD = '099') ITEM_MODEL_NM
			,IIA_TB.MAIN_GUBUN
			,(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA_TB.MAIN_GUBUN AND X.BASE_GROUP_CD = '112') MAIN_GUBUN_NM
			,WO_TB.ITEM_GUBUN
			,(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = WO_TB.ITEM_GUBUN AND X.BASE_GROUP_CD = '079') ITEM_GUBUN_NM
			,WO_TB.EQUIP_CD
			,(SELECT EQUIP_NM FROM TB_EQUIP_CODE_ADM EQ_TB WHERE EQ_TB.EQUIP_CD = WO_TB.EQUIP_CD) EQUIP_NM
			,(SELECT EQUIP_CAVITY FROM TB_EQUIP_CODE_ADM EQ_TB WHERE EQ_TB.EQUIP_CD = IIA_TB.MOLD_CD) EQUIP_CAVITY
			,WO_TB.MAIN_WORK_CHARGR
			,(SELECT USER_NM FROM TB_USER WHERE USER_NUMBER=WO_TB.MAIN_WORK_CHARGR) MAIN_WORK_CHARGR_NM
			,WO_TB.SUB_WORK_CHARGR
			,(SELECT USER_NM FROM TB_USER WHERE USER_NUMBER=WO_TB.SUB_WORK_CHARGR) SUB_WORK_CHARGR_NM
			,WO_TB.ORD_DATE 
			,WO_TB.WORK_STATUS_CD		
			,(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE WO_TB.WORK_STATUS_CD = X.BASE_CD AND X.BASE_GROUP_CD = '063') WORK_STATUS_NM
			,WO_TB.DTL_ORD_QTY
			,WO_TB.WORK_ORD_QTY 
			,WO_TB.OUTPUT_QTY 
			,WO_TB.FAULTY_QTY 
			,WO_TB.OUTPUT_DATE 
			,WO_TB.DLV_DATE 
			,WO_TB.LAST_YN 
			,WO_TB.REWORK_YN   		
			,WO_TB.ORD_DESC
			,IIA_TB.ITEM_CUS
			,(SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM DCA_TB WHERE DCA_TB.DEAL_CORP_CD = IIA_TB.ITEM_CUS) ITEM_CUS_NM
			,X.TM_QTY
			,WO_TB.FUZZ_QTY
			,WO_TB.RUNNER_QTY
		FROM	TB_WORK_ORDER WO_TB
		LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA_TB
		ON WO_TB.ITEM_SEQ = IIA_TB.ITEM_SEQ
		LEFT JOIN (
			SELECT
				DD.ITEM_SEQ
				,SUM(REAL_QTY) TM_QTY
			FROM TB_ITEM_INFO_ADM DD LEFT OUTER JOIN (
				SELECT 
					SP_TYPE
					,SP_CD
					,LOCATION_CD
					,SUM(INPUT) IN_QTY
					,SUM(OUTPUT) OUT_QTY
					,SUM(INPUT)-SUM(OUTPUT) REAL_QTY
				FROM
				(
					SELECT
						SP_TYPE
						, SP_CD
						, BARCODE_NO
						, LOCATION_NO
						, LOCATION_CD
						, SUM(CASE WHEN SP_GUBUN = '001' THEN SP_QTY ELSE 0 END) INPUT
						, SUM(CASE WHEN SP_GUBUN = '002' THEN SP_QTY ELSE 0 END) OUTPUT
					FROM (
						SELECT
							SP_NO
							, SP_SEQ
							, SP_TYPE
							, SP_CD
							, SP_GUBUN
							, SP_DATE
							, SP_QTY
							, SP_BOM_QTY
							, BARCODE_NO
							, SOURCE_NO
							, LOCATION_CD
							, AREA_CD
							, FLOOR_CD
							, LOCATION_NO
						FROM TB_STOCK_PAYMENT_ADM
						WHERE 1=1			
						AND LOCATION_CD NOT IN ('017','018','023')
					) AA
					GROUP BY
						SP_TYPE
						, SP_CD
						, BARCODE_NO
						, LOCATION_NO
						, LOCATION_CD
				)TT
				GROUP BY SP_TYPE, SP_CD,BARCODE_NO,LOCATION_NO,LOCATION_CD
				HAVING ROUND(SUM(INPUT)-SUM(OUTPUT),0) > 0
			) EE
			ON DD.ITEM_SEQ = EE.SP_CD
			WHERE 1=1
			GROUP BY DD.ITEM_SEQ
			HAVING 1=1
		) X
		ON WO_TB.ITEM_SEQ = X.ITEM_SEQ
		WHERE 1=1
		AND WO_TB.ITEM_SEQ = IIA_TB.ITEM_SEQ
		<if test="mainGubun!=null and !mainGubun.equals('')">
			AND MAIN_GUBUN = #{mainGubun}
		</if>
		<if test="itemGubun!=null and !itemGubun.equals('')">
			AND IIA_TB.ITEM_GUBUN = #{itemGubun}
		</if>
		<if test="workEmerYn!=null and !workEmerYn.equals('')">
			AND WORK_EMER_YN = #{workEmerYn}
		</if>
		<if test="reworkYn!=null and !reworkYn.equals('')">
			AND REWORK_YN = #{reworkYn}
		</if>
		AND WO_TB.WORK_ORD_DATE BETWEEN  #{startDate} AND #{endDate}
	</select>	
	
	<!-- 생산지시현황(사출) 기간조회 -->
	<select id="workOrdListAllBybomList" resultMap="WorkOrderVo">
	     SELECT	
	      	WO_TB.WORK_ORD_NO
			, WO_TB.UPPER_WORK_ORD_NO
			, WO_TB.ORD_LOT_NO
			, WO_TB.DTL_ORD_CNT
			, WO_TB.WORK_ORD_DATE
			, WO_TB.WORK_EMER_YN
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = WO_TB.WORK_EMER_YN AND X.BASE_GROUP_CD = '060') WORK_EMER_YN_NM	
			, WO_TB.ITEM_SEQ
			, IIA_TB.ITEM_CD
			, IIA_TB.ITEM_NM
			, IIA_TB.ITEM_MODEL
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA_TB.ITEM_MODEL AND X.BASE_GROUP_CD = '099') ITEM_MODEL_NM
			, IIA_TB.MAIN_GUBUN
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA_TB.MAIN_GUBUN AND X.BASE_GROUP_CD = '112') MAIN_GUBUN_NM
			, WO_TB.ITEM_GUBUN
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = WO_TB.ITEM_GUBUN AND X.BASE_GROUP_CD = '079') ITEM_GUBUN_NM
			, WO_TB.EQUIP_CD
			, (SELECT EQ_TB.EQUIP_NM FROM TB_EQUIP_CODE_ADM EQ_TB WHERE EQ_TB.EQUIP_CD = WO_TB.EQUIP_CD) EQUIP_NM
			, (SELECT EQ_TB.EQUIP_CAVITY FROM TB_EQUIP_CODE_ADM EQ_TB WHERE EQ_TB.EQUIP_CD = IIA_TB.MOLD_CD) EQUIP_CAVITY
			, WO_TB.MAIN_WORK_CHARGR
			, (SELECT X.USER_NM FROM TB_USER X WHERE X.USER_NUMBER = WO_TB.MAIN_WORK_CHARGR) MAIN_WORK_CHARGR_NM
			, WO_TB.SUB_WORK_CHARGR
			, (SELECT X.USER_NM FROM TB_USER X WHERE X.USER_NUMBER = WO_TB.SUB_WORK_CHARGR) SUB_WORK_CHARGR_NM
			, WO_TB.ORD_DATE
			, WO_TB.WORK_STATUS_CD
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE WO_TB.WORK_STATUS_CD = X.BASE_CD AND X.BASE_GROUP_CD = '063') WORK_STATUS_NM
			, WO_TB.DTL_ORD_QTY
			, WO_TB.WORK_ORD_QTY
			, WO_TB.OUTPUT_QTY
			, WO_TB.FAULTY_QTY
			, WO_TB.OUTPUT_DATE
			, WO_TB.DLV_DATE
			, WO_TB.LAST_YN
			, WO_TB.REWORK_YN
			, WO_TB.ORD_DESC
			, IIA_TB.ITEM_CUS
			, (SELECT DCA_TB.DEAL_CORP_NM FROM TB_DEAL_CORP_ADM DCA_TB WHERE DCA_TB.DEAL_CORP_CD = IIA_TB.ITEM_CUS) ITEM_CUS_NM
			, X.TM_QTY
			, WO_TB.FUZZ_QTY
			, WO_TB.RUNNER_QTY
			, (SELECT TOP(1) I.ITEM_NM FROM TB_ITEM_INFO_ADM I WHERE I.ITEM_SEQ = MT_TB.ITEM_SEQ) EBOM_ITEM_NM
		FROM TB_WORK_ORDER WO_TB
		LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA_TB
		ON WO_TB.ITEM_SEQ = IIA_TB.ITEM_SEQ
		LEFT OUTER JOIN (
			SELECT
				DD.ITEM_SEQ
				, SUM(ISNULL(EE.REAL_QTY, 0)) TM_QTY
			FROM TB_ITEM_INFO_ADM DD LEFT OUTER JOIN (
			SELECT
				SP_TYPE
				, SP_CD
				, BARCODE_NO
				, LOCATION_NO
				, LOCATION_CD
				, SUM(BINPUT) TM_QTY
				, SUM(AINPUT) IN_QTY
				, SUM(AOUTPUT) OUT_QTY
				, SUM(BINPUT)+SUM(AINPUT)-SUM(AOUTPUT) REAL_QTY
			FROM (
				SELECT
					SP_TYPE
					, SP_CD
					, BARCODE_NO
					, LOCATION_NO
					, LOCATION_CD
					, ISNULL(CASE WHEN DATE_GUBUN = 'BEFORE' THEN SUM(INPUT-OUTPUT) END, 0) BINPUT
					, ISNULL(CASE WHEN DATE_GUBUN = 'AFTER' THEN SUM(INPUT) END, 0) AINPUT
					, ISNULL(CASE WHEN DATE_GUBUN = 'AFTER' THEN SUM(OUTPUT) END, 0) AOUTPUT
				FROM (
					SELECT
						SP_TYPE
						, SP_CD
						, SP_DATE
						, BARCODE_NO
						, LOCATION_NO
						, LOCATION_CD
						, (
							CASE WHEN AA.SP_DATE <![CDATA[<]]> #{tmMon} + '01' 
							THEN 'BEFORE'
							WHEN  AA.SP_DATE <![CDATA[>=]]> #{tmMon} + '01' AND SP_DATE <![CDATA[<=]]> #{tmMon} + '31'
							THEN 'AFTER'
							END
						) DATE_GUBUN
						, SUM(CASE WHEN SP_GUBUN = '001' THEN SP_QTY ELSE 0 END) INPUT
						, SUM(CASE WHEN SP_GUBUN = '002' THEN SP_QTY ELSE 0 END) OUTPUT
					FROM (
						SELECT
							SP_NO
							, SP_SEQ
							, SP_TYPE
							, SP_CD
							, SP_GUBUN
							, SP_DATE
							, SP_QTY
							, SP_BOM_QTY
							, BARCODE_NO
							, SOURCE_NO
							, LOCATION_CD
							, AREA_CD
							, FLOOR_CD
							, LOCATION_NO
						FROM TB_STOCK_PAYMENT_ADM
						WHERE 1=1
						AND LOCATION_CD NOT IN ('017','018')
						AND SP_DATE BETWEEN LEFT(#{tmMon},4)+'0101' AND #{tmMon} + '31'
					) AA
					GROUP BY
						SP_TYPE
						, SP_CD
						, SP_DATE
						, BARCODE_NO
						, LOCATION_NO
						, LOCATION_CD
						, (
							CASE WHEN  AA.SP_DATE <![CDATA[<]]> #{tmMon} + '01'
							THEN 'BEFORE'
							WHEN AA.SP_DATE <![CDATA[>=]]> #{tmMon} + '01' AND AA.SP_DATE <![CDATA[<=]]> #{tmMon} + '31'
							THEN 'AFTER'
							END
						)
					) BB
					GROUP BY SP_TYPE, SP_CD,BARCODE_NO,LOCATION_NO,LOCATION_CD,DATE_GUBUN
				) CC
				GROUP BY SP_TYPE, SP_CD,BARCODE_NO,LOCATION_NO,LOCATION_CD
			) EE
			ON DD.ITEM_SEQ = EE.SP_CD
			LEFT OUTER JOIN TB_LOCATION_ADM L
			ON DD.LOC_NO = L.LOC_NO
			WHERE 1=1
			AND ROUND(REAL_QTY,0) > 0
			GROUP BY DD.ITEM_SEQ
		) X
		ON WO_TB.ITEM_SEQ = X.ITEM_SEQ
		LEFT JOIN TB_ITEM_MOTOR_EBOM MT_TB
		ON WO_TB.ITEM_SEQ = MT_TB.UPPER_ITEM_SEQ
		WHERE 1=1
		AND WO_TB.ITEM_SEQ = IIA_TB.ITEM_SEQ
		AND WO_TB.WORK_ORD_DATE BETWEEN  #{startDate} AND #{endDate}
		<if test="mainGubun != null and !mainGubun.equals('')">
		AND MAIN_GUBUN = #{mainGubun}
		</if>
		<if test="itemGubun != null and !itemGubun.equals('')">
		AND IIA_TB.ITEM_GUBUN = #{itemGubun}
		</if>
		<if test="workEmerYn != null and !workEmerYn.equals('')">
		AND WORK_EMER_YN = #{workEmerYn}
		</if>
		<if test="reworkYn!=null and !reworkYn.equals('')">
		AND REWORK_YN = #{reworkYn}
		</if>
	</select>
	
	<!-- 생산지시현황(봉제) 기간조회 -->
	<select id="workOrdListSewingList" resultMap="WorkOrderVo">
		SELECT	
			(SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE IIA.ITEM_GUBUN = X.BASE_CD AND X.BASE_GROUP_CD = '091') ITEM_GUBUN
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE WOPG.WORK_STATUS = X.BASE_CD AND X.BASE_GROUP_CD = '063') WORK_STATUS
			, WO.WORK_ORD_NO
			, WOPG.WORK_PROG_NO
			, WOPG.WORK_PROG_DATE
			, (SELECT X.USER_NM FROM TB_USER X WHERE X.USER_NUMBER = WO.SUB_WORK_CHARGR) SUB_WORK_CHARGR
			, (SELECT X.EQUIP_NM FROM TB_EQUIP_CODE_ADM X WHERE X.EQUIP_CD = WO.EQUIP_CD) EQUIP_NM
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = WO.WORK_EMER_YN AND X.BASE_GROUP_CD = '060') WORK_EMER_YN
			, (SELECT X.DEAL_CORP_NM FROM TB_DEAL_CORP_ADM X WHERE X.DEAL_CORP_CD = WOPG.WORK_PROG_CORP) ITEM_CUS
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA.ITEM_MODEL AND X.BASE_GROUP_CD = '099') ITEM_MODEL
			, IIA.ITEM_CD
			, IIA.ITEM_NM
			, (SELECT X.PRCSS_NM FROM TB_PRCSS_CODE_ADM X WHERE X.PRCSS_CD = WOPG.MINOR_PRCSS_CD AND X.PRCSS_TYPE = '001' AND X.LOWER_PRCSS_CD = WOPG.MINOR_PRCSS_CD) MINOR_PRCSS_CD
			, WOPG.WORK_PROG_QTY
			, MAX(WOP.WORK_END_TIME) WORK_END_TIME
			, SUM(WOP.OUTPUT_QTY) OUTPUT_QTY
			, (SELECT SUM(OUTPUT_QTY) FROM TB_WORK_ORDER_PRCSS X WHERE X.WORK_ORD_NO=WOPG.WORK_ORD_NO AND X.MIDDLE_PRCSS_CD=WOPG.WORK_PROG_NO AND X.WORK_STATUS='003') FAULTY_QTY
			, X.TM_QTY
		FROM TB_WORK_ORDER WO
		LEFT OUTER JOIN TB_WORK_ORDER_PROGRESS WOPG
		ON WO.WORK_ORD_NO = WOPG.WORK_ORD_NO
		LEFT OUTER JOIN TB_WORK_ORDER_PRCSS WOP
		ON WOPG.WORK_ORD_NO = WOP.WORK_ORD_NO
		AND WOPG.WORK_PROG_NO = WOP.MIDDLE_PRCSS_CD
		AND WOP.WORK_STATUS!='003'
		LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA
		ON WOPG.ITEM_SEQ = IIA.ITEM_SEQ
		LEFT OUTER JOIN (
			SELECT
				DD.ITEM_SEQ
				, SUM(ISNULL(EE.REAL_QTY, 0)) TM_QTY
			FROM TB_ITEM_INFO_ADM DD LEFT OUTER JOIN (
			SELECT
				SP_TYPE
				, SP_CD
				, BARCODE_NO
				, LOCATION_NO
				, LOCATION_CD
				, SUM(BINPUT) TM_QTY
				, SUM(AINPUT) IN_QTY
				, SUM(AOUTPUT) OUT_QTY
				, SUM(BINPUT)+SUM(AINPUT)-SUM(AOUTPUT) REAL_QTY
			FROM (
				SELECT
					SP_TYPE
					, SP_CD
					, BARCODE_NO
					, LOCATION_NO
					, LOCATION_CD
					, ISNULL(CASE WHEN DATE_GUBUN = 'BEFORE' THEN SUM(INPUT-OUTPUT) END, 0) BINPUT
					, ISNULL(CASE WHEN DATE_GUBUN = 'AFTER' THEN SUM(INPUT) END, 0) AINPUT
					, ISNULL(CASE WHEN DATE_GUBUN = 'AFTER' THEN SUM(OUTPUT) END, 0) AOUTPUT
				FROM (
					SELECT
						SP_TYPE
						, SP_CD
						, SP_DATE
						, BARCODE_NO
						, LOCATION_NO
						, LOCATION_CD
						, (
							CASE WHEN AA.SP_DATE <![CDATA[<]]> #{tmMon} + '01' 
							THEN 'BEFORE'
							WHEN  AA.SP_DATE <![CDATA[>=]]> #{tmMon} + '01' AND SP_DATE <![CDATA[<=]]> #{tmMon} + '31'
							THEN 'AFTER'
							END
						) DATE_GUBUN
						, SUM(CASE WHEN SP_GUBUN = '001' THEN SP_QTY ELSE 0 END) INPUT
						, SUM(CASE WHEN SP_GUBUN = '002' THEN SP_QTY ELSE 0 END) OUTPUT
					FROM (
						SELECT
							SP_NO
							, SP_SEQ
							, SP_TYPE
							, SP_CD
							, SP_GUBUN
							, SP_DATE
							, SP_QTY
							, SP_BOM_QTY
							, BARCODE_NO
							, SOURCE_NO
							, LOCATION_CD
							, AREA_CD
							, FLOOR_CD
							, LOCATION_NO
						FROM TB_STOCK_PAYMENT_ADM
						WHERE 1=1
						AND LOCATION_CD NOT IN ('017','018')
						AND SP_DATE BETWEEN LEFT(#{tmMon},4)+'0101' AND #{tmMon} + '31'
					) AA
					GROUP BY
						SP_TYPE
						, SP_CD
						, SP_DATE
						, BARCODE_NO
						, LOCATION_NO
						, LOCATION_CD
						, (
							CASE WHEN  AA.SP_DATE <![CDATA[<]]> #{tmMon} + '01'
							THEN 'BEFORE'
							WHEN AA.SP_DATE <![CDATA[>=]]> #{tmMon} + '01' AND AA.SP_DATE <![CDATA[<=]]> #{tmMon} + '31'
							THEN 'AFTER'
							END
						)
					) BB
					GROUP BY SP_TYPE, SP_CD,BARCODE_NO,LOCATION_NO,LOCATION_CD,DATE_GUBUN
				) CC
				GROUP BY SP_TYPE, SP_CD,BARCODE_NO,LOCATION_NO,LOCATION_CD
			) EE
			ON DD.ITEM_SEQ = EE.SP_CD
			LEFT OUTER JOIN TB_LOCATION_ADM L
			ON DD.LOC_NO = L.LOC_NO
			WHERE 1=1
			AND ROUND(REAL_QTY,0) > 0
			GROUP BY DD.ITEM_SEQ
		) X
		ON WOPG.ITEM_SEQ = X.ITEM_SEQ
		WHERE 1=1
		AND WOPG.WORK_PROG_DATE BETWEEN #{startDate} AND #{endDate}
		<if test="mainGubun != null and !mainGubun.equals('')">
		AND IIA.MAIN_GUBUN = #{mainGubun}
		</if>
		<if test="itemGubun != null and !itemGubun.equals('')">
		AND IIA.ITEM_GUBUN = #{itemGubun}
		</if>
		<if test="workEmerYn != null and !workEmerYn.equals('')">
		AND WO.WORK_EMER_YN = #{workEmerYn}
		</if>
		<if test="workStatusWe != null and !workStatusWe.equals('')">
		AND WOPG.WORK_STATUS != 'WE'
		</if>
		<if test="workStatus != null and !workStatus.equals('')">
		AND WOPG.WORK_STATUS = #{workStatus}
		</if>
		<if test="minorPrcssCd != null and !minorPrcssCd.equals('')">
		AND WOPG.MINOR_PRCSS_CD = #{minorPrcssCd}
		</if>
		GROUP BY 
			IIA.ITEM_GUBUN
			, WOPG.WORK_STATUS
			, WO.WORK_ORD_NO
			, WOPG.WORK_PROG_NO
			, WOPG.WORK_PROG_DATE
			, WO.SUB_WORK_CHARGR
			, WO.EQUIP_CD
			, WO.WORK_EMER_YN
			, WOPG.WORK_PROG_CORP
			, IIA.ITEM_MODEL
			, IIA.ITEM_CD
			, IIA.ITEM_NM
			, WOPG.MINOR_PRCSS_CD
			, WOPG.WORK_PROG_QTY
			, X.TM_QTY
			, WOPG.WORK_ORD_NO
		ORDER BY WORK_ORD_NO, WORK_PROG_NO
	</select>
	
	<!-- 작업지시서 모달 목록조회 -->
	<select id="workOrdList" resultMap="WorkOrderVo">
		 SELECT	
			A.WORK_ORD_NO
			, A.UPPER_WORK_ORD_NO
			, A.CONT_DTL_NO 
			, A.ORD_LOT_NO
			, A.DTL_ORD_CNT
			, A.MAIN_WORK_CHARGR
			, (SELECT USER_NM FROM TB_USER X WHERE X.USER_NUMBER=A.MAIN_WORK_CHARGR) MAIN_WORK_CHARGR_NM
			, A.WORK_ORD_DATE
			, A.WORK_EMER_YN
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=A.WORK_EMER_YN AND BASE_GROUP_CD='060') WORK_EMER_YN_NM	
			, A.ITEM_SEQ
			, T.ITEM_MODEL
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM C WHERE C.BASE_CD = T.ITEM_MODEL AND C.BASE_GROUP_CD = '099') ITEM_MODEL_NM
			, T.ITEM_NM
			, T.ITEM_CD
			, T.ITEM_CUS
			, (SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM DCA_TB WHERE DCA_TB.DEAL_CORP_CD=T.ITEM_CUS) ITEM_CUS_NM
			, A.EQUIP_CD
			, (SELECT EQUIP_NM FROM TB_EQUIP_CODE_ADM X WHERE X.EQUIP_CD=A.EQUIP_CD) EQUIP_NM
			, A.WORK_METHOD
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM C WHERE C.BASE_CD = A.WORK_METHOD AND C.BASE_GROUP_CD = '117') WORK_METHOD_NM
			, T.MOLD_CD
			, (SELECT EQUIP_NO FROM TB_EQUIP_CODE_ADM X WHERE X.EQUIP_CD=T.MOLD_CD) MOLD_NO
			, (SELECT MOLD_LOCATION FROM TB_EQUIP_CODE_ADM X WHERE X.EQUIP_CD=T.MOLD_CD) MOLD_LOCATION
			, (SELECT EQUIP_CAVITY FROM TB_EQUIP_CODE_ADM X WHERE X.EQUIP_CD=T.MOLD_CD) EQUIP_CAVITY
			, T.MAIN_GUBUN
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = T.MAIN_GUBUN AND BASE_GROUP_CD = '112') MAIN_GUBUN_NM
			, T.ITEM_GUBUN
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = T.ITEM_GUBUN AND BASE_GROUP_CD = '091') ITEM_GUBUN_NM
			, A.ORD_DATE 
			, A.WORK_GUBUN
			, A.WORK_STATUS_CD		
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE A.WORK_STATUS_CD = X.BASE_CD AND BASE_GROUP_CD='063') WORK_STATUS_NM
			, A.DTL_ORD_QTY
			, A.WORK_ORD_QTY 
			, ISNULL(A.OUTPUT_QTY,0) OUTPUT_QTY
			, ISNULL(A.INIT_FAULTY_QTY,0)INIT_FAULTY_QTY
			, ISNULL(A.FAULTY_QTY,0) FAULTY_QTY
			, CONVERT(FLOAT,ISNULL(A.OUTPUT_QTY,0))-CONVERT(FLOAT,ISNULL(A.FAULTY_QTY,0)) FAIR_QTY
			, A.OUTPUT_DATE 
			, A.DLV_DATE 
			, A.LAST_YN 
			, A.REWORK_YN
			, (SELECT MAX(ETC_DATE) FROM TB_BIZ_ORDER_ETC X WHERE X.CONT_DTL_NO = A.CONT_DTL_NO) ETC_DATE	
			, A.MAIN_WORK_CHARGR
			, (SELECT USER_NM FROM TB_USER WHERE USER_NUMBER=A.MAIN_WORK_CHARGR) MAIN_WORK_CHARGR_NM
			, A.SUB_WORK_CHARGR
			, (SELECT USER_NM FROM TB_USER WHERE USER_NUMBER=A.SUB_WORK_CHARGR) SUB_WORK_CHARGR_NM
			, A.ORD_DESC
			<!-- , (SELECT DISTINCT(CONFIRM_YN) FROM TB_OUT_WHS_ADM WHERE WORK_ORD_NO=A.WORK_ORD_NO) CONFIRM_YN -->
			, T.SAVELOC_CD LOC_CD
			, T.LOC_NO
			, (SELECT X.AREA_CD FROM TB_LOCATION_ADM X WHERE X.LOC_NO=T.LOC_NO) AREA_CD
			, (SELECT X.FLOOR_NM FROM TB_LOCATION_ADM X WHERE X.LOC_NO=T.LOC_NO) FLOOR_NM
			, T.BOX_COUNT
			, A.FUZZ_QTY
			, A.RUNNER_QTY
			, A.MD_INSPECT_YN
			, A.CAVITY_CNT
			, EQ_TB.LOC_NO OUT_LOC_NO
			, (SELECT LOC_CD FROM TB_LOCATION_ADM WHERE LOC_NO=EQ_TB.LOC_NO) OUT_LOC_CD
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = (SELECT LOC_CD FROM TB_LOCATION_ADM WHERE LOC_NO=EQ_TB.LOC_NO) AND BASE_GROUP_CD='073') OUT_LOC_NM
			, (SELECT AREA_CD FROM TB_LOCATION_ADM WHERE LOC_NO=EQ_TB.LOC_NO) OUT_AREA_CD
			, (SELECT FLOOR_NM FROM TB_LOCATION_ADM WHERE LOC_NO=EQ_TB.LOC_NO) OUT_FLOOR_NM
			, (
				SELECT 
					TOP(1) NO_START_DATE 
				FROM TB_WORK_ORDER_NON_OPERATION
				WHERE 1=1
				AND WORK_ORD_NO=A.WORK_ORD_NO
				AND NO_GUBUN = '009'
				ORDER BY NO_SEQ ASC
			) WORK_START_DATE
		FROM	TB_WORK_ORDER A
		INNER JOIN TB_ITEM_INFO_ADM T
		ON A.ITEM_SEQ = T.ITEM_SEQ
		LEFT OUTER JOIN TB_EQUIP_CODE_ADM EQ_TB
		ON A.EQUIP_CD=EQ_TB.EQUIP_CD
		WHERE 1=1 
		<!-- <if test='value == "1"'>
		AND (SELECT DISTINCT(CONFIRM_YN) FROM TB_OUT_WHS_ADM WHERE WORK_ORD_NO=A.WORK_ORD_NO) IS NULL 
		</if> -->
		<if test="mainGubun != null and mainGubun != ''">
		AND T.MAIN_GUBUN = #{mainGubun}
		</if>
		<if test="itemGubun != null and itemGubun != ''">
		AND T.ITEM_GUBUN = #{itemGubun}
		</if>
		<if test="workEmerYn != null and workEmerYn != ''">
		AND A.WORK_EMER_YN = #{workEmerYn}
		</if>
		<if test="selStartDate != null and selStartDate != ''">
		AND A.WORK_ORD_DATE BETWEEN #{selStartDate} AND #{selEndDate}
		</if>
		<if test="startDate != null and startDate != ''">
		AND A.WORK_ORD_DATE BETWEEN #{startDate} AND #{endDate}
		</if>
		<if test="workStatusCd!= null and workStatusCd != ''">
		AND WORK_STATUS_CD != #{workStatusCd}
		</if>
		<if test="workOrdNo!=null and workOrdNo!=''">
		AND A.WORK_ORD_NO = #{workOrdNo}
		</if>
		
		ORDER BY WORK_ORD_NO DESC
	</select>	
	
	
	<!-- 작업지시서 등록 -->
	<insert id="create">
		INSERT INTO TB_WORK_ORDER(
			WORK_ORD_NO,
			UPPER_WORK_ORD_NO,
			PRE_WORK_ORD_NO,
			ORD_LOT_NO,
			DTL_ORD_CNT,
			WORK_ORD_DATE,
			WORK_EMER_YN,
			ITEM_SEQ,
			ITEM_GUBUN,
			ORD_DATE,
			WORK_STATUS_CD,
			DTL_ORD_QTY,
			WORK_ORD_QTY,
			OUTPUT_QTY,
			FAULTY_QTY,
			OUTPUT_DATE,
			DLV_DATE,
			LAST_YN,
			REWORK_YN,
			EQUIP_CD,
			MAIN_WORK_CHARGR,
			SUB_WORK_CHARGR,
			ORD_DESC,
			REG_ID,
			REG_DATE		
		) 
		VALUES(
			#{workOrdNo},
			#{upperWorkOrdNo},
			#{preWorkOrdNo},
			#{ordLotNo},
			#{dtlOrdCnt},
			#{workOrdDate},
			#{workEmerYn},
			#{itemSeq},
			#{itemGubun},
			#{ordDate},
			#{workStatusCd},
			#{dtlOrdQty},
			#{workOrdQty},
			#{outputQty},
			#{faultyQty},
			#{outputDate},
			#{dlvDate},
			#{lastYn},
			#{reworkYn},
			#{equipCd},
			#{mainWorkChargr},
			#{subWorkChargr},
			#{ordDesc},
			#{regId},
			GETDATE()
		
		)
	</insert>
	
	<!-- 작업지시서 수정  -->
	<update id="update">
		UPDATE	TB_WORK_ORDER
		<set>
		    <if test="workOrdDate!=null and !workOrdDate.equals('')">
		    	WORK_ORD_DATE = #{workOrdDate},
		    </if>
		    <if test="workEmerYn!=null and !workEmerYn.equals('')">
		    	WORK_EMER_YN = #{workEmerYn},
		    </if>
		    <if test="outputQty!=null and !outputQty.equals('')">
		    	OUTPUT_QTY = ISNULL(OUTPUT_QTY,0)+#{outputQty},
		    </if>
		    <if test="fuzzQty!=null and !fuzzQty.equals('')">
		    	FUZZ_QTY = #{fuzzQty},
		    </if>
		    <if test="runnerQty!=null and !runnerQty.equals('')">
		    	RUNNER_QTY = #{runnerQty},
		    </if>
		    <if test="faultyQty!=null and !faultyQty.equals('')">
		    	FAULTY_QTY = #{faultyQty},
		    </if>
		    <if test="equipCd!=null and !equipCd.equals('')">
		    	EQUIP_CD = #{equipCd},
		    </if>
		    <if test="workGubun!=null">
		    	WORK_GUBUN = #{workGubun},
		    </if>
		    <if test="workMethod!=null">
		    	WORK_METHOD = #{workMethod},
		    </if>
		    <if test="cavityCnt != null">
		    	CAVITY_CNT = #{cavityCnt},
		    </if>
		    <if test="workStatusCd!=null and !workStatusCd.equals('')">
		    	WORK_STATUS_CD = #{workStatusCd},
		    </if>
		    <if test="mainWorkChargr!=null and !mainWorkChargr.equals('')">
		    	MAIN_WORK_CHARGR = #{mainWorkChargr},
		    </if>
		    <if test="mdInspectYn!=null and !mdInspectYn.equals('')">
		    	MD_INSPECT_YN = #{mdInspectYn},
		    </if>
		    <if test="subWorkChargr!=null and !subWorkChargr.equals('')">
		    	SUB_WORK_CHARGR = #{subWorkChargr},
		    </if>
		    UPD_ID = #{updId},
			UPD_DATE = getDate()
		</set>
		WHERE 1=1
		AND WORK_ORD_NO = #{workOrdNo}
	</update>			
	
	<!-- 작업지시서 삭제로 인한 불량수량 변경  -->
	<update id="prcssDelFaultyUpdate">
		UPDATE	TB_WORK_ORDER
		SET FAULTY_QTY = FAULTY_QTY - #{faultyQty}
		WHERE 1=1
		AND WORK_ORD_NO = #{workOrdNo}
	</update>	
	
	<!-- 불량수량 변경으로 인한 생산수량 변경  -->
	<update id="workOrdOutputUpdate">
		UPDATE	TB_WORK_ORDER
		SET OUTPUT_QTY = #{outputQty}
		WHERE 1=1
		AND WORK_ORD_NO = #{workOrdNo}
	</update>	
	
	<!-- 불량수량 변경으로 인한 생산수량 변경  -->
	<update id="workOrdOutputDelete">
		UPDATE	TB_WORK_ORDER
		SET OUTPUT_QTY = OUTPUT_QTY-CONVERT(INT,#{outputQty})
		WHERE 1=1
		AND WORK_ORD_NO = #{workOrdNo}
	</update>				
				
	
	<!-- 작업지시서 삭제 -->
	<delete id="delete">
		DELETE FROM TB_WORK_ORDER 
		WHERE	CONT_DTL_NO = #{contDtlNo}
	</delete>
	
	<!-- 작업지시서 삭제 -->
	<delete id="deleteWorkOrdNo">
		DELETE FROM TB_WORK_ORDER 
		WHERE	WORK_ORD_NO = #{workOrdNo}
	</delete>
	
	<!-- 작업지시서 삭제 -->
	<delete id="workOrderProgressDel">
		DELETE FROM TB_WORK_ORDER_PROGRESS 
		WHERE	WORK_PROG_NO = #{workProgNo}
	</delete>
	
	<!-- 작지번호 생성 -->
	<select id="getWorkOrdNoSeq" resultType="String">
		SELECT ISNULL(RIGHT('0' + CAST(MAX(RIGHT(WORK_ORD_NO,2))+1 AS NVARCHAR),2), '01') 
		FROM TB_WORK_ORDER 
		WHERE LEFT(WORK_ORD_NO,10) = #{date}
	</select>
	
	<!-- 작지번호 생성 -->
	<select id="getWorkProgNoSeq" resultType="String">
		SELECT FORMAT(ISNULL(MAX(WORK_PROG_ORD),0)+1,'00')
		FROM TB_WORK_ORDER_PROGRESS
		WHERE WORK_ORD_NO=#{workOrdNo}
	</select>
	
	<!-- 중공정 목록조회 -->
	<select id="readMiddlePrcss" resultMap="WorkOrderVo">
	  	SELECT 
			A.WORK_ORD_NO,
			A.CONT_DTL_NO,
			A.DTL_ORD_CNT,
			A.ITEM_SEQ,
			A.ITEM_GUBUN,
			B.BOM_CD,
			C.PRCSS_CD,
			(SELECT PRCSS_NM FROM TB_PRCSS_CODE_ADM X WHERE C.PRCSS_CD = X.PRCSS_CD AND X.PRCSS_CD = X.LOWER_PRCSS_CD) PRCSS_NM
		FROM TB_WORK_ORDER A, TB_ITEM_MOTOR_MBOM B, TB_PRCSS_BOM_DTL C
		WHERE 1=1
		AND A.ITEM_SEQ = B.ITEM_SEQ
		AND B.BOM_CD = C.BOM_CD
		AND WORK_ORD_NO = #{workOrdNo}
		ORDER BY
		   C.PRCSS_SEQ ASC
	</select>
	
	<!-- 소공정 목록조회 -->
	<select id="readMinorPrcss" resultMap="WorkOrderVo">
	   	   SELECT	A.WORK_ORD_NO				
				,A.CONT_DTL_NO 			
				,A.DTL_ORD_CNT
				,A.ITEM_SEQ
				,A.ITEM_GUBUN
				,B.BOM_CD
				,C.PRCSS_CD				
				,D.LOWER_PRCSS_CD
				,E.EQUIP_CD1
				,E.EQUIP_CD2
				,E.EQUIP_CD3
				,E.EQUIP_CD4
				,E.EQUIP_CD5
				,(SELECT EQUIP_NM FROM TB_EQUIP_CODE_ADM Y WHERE E.EQUIP_CD1 = Y.EQUIP_CD) EQUIP_NM1
				,(SELECT EQUIP_NM FROM TB_EQUIP_CODE_ADM Y WHERE E.EQUIP_CD2 = Y.EQUIP_CD) EQUIP_NM2
				,(SELECT EQUIP_NM FROM TB_EQUIP_CODE_ADM Y WHERE E.EQUIP_CD3 = Y.EQUIP_CD) EQUIP_NM3
				,(SELECT EQUIP_NM FROM TB_EQUIP_CODE_ADM Y WHERE E.EQUIP_CD4 = Y.EQUIP_CD) EQUIP_NM4
				,(SELECT EQUIP_NM FROM TB_EQUIP_CODE_ADM Y WHERE E.EQUIP_CD5 = Y.EQUIP_CD) EQUIP_NM5
		FROM	TB_WORK_ORDER A, TB_ITEM_MOTOR_MBOM B, TB_PRCSS_BOM_DTL C, TB_PRCSS_CODE_ADM D,
		(SELECT PRCSS_CD,EQUIP_CD1, EQUIP_CD2,EQUIP_CD3,EQUIP_CD4,EQUIP_CD5 
		FROM TB_PRCSS_CODE_ADM X 
		WHERE X.PRCSS_CD = X.LOWER_PRCSS_CD) E
		WHERE	A.WORK_ORD_NO = #{workOrdNo}
				AND A.ITEM_SEQ = B.ITEM_SEQ
				AND B.BOM_CD = C.BOM_CD				
				AND D.PRCSS_CD != D.LOWER_PRCSS_CD
				AND D.PRCSS_CD = C.PRCSS_CD
				AND D.PRCSS_CD = #{prcssCd}
				AND D.LOWER_PRCSS_CD = E.PRCSS_CD
	</select>
	
	<!-- 작업지시선택 자재투입내역 조회 -->
	<select id="matrlList" resultMap="WorkOrderVo">
	  SELECT  A.ITEM_CD
		  ,(SELECT ITEM_NM FROM TB_ITEM_MOTOR_ADM X WHERE X.ITEM_CD = A.ITEM_CD AND X.ITEM_REV = A.ITEM_REV) ITEM_NM
	      ,A.ITEM_REV
	      ,A.PART_CD
	      ,A.PART_REV
	      ,A.PART_SEQ
	      ,A.PART_CONSUMPT
		  ,C.PART_NM
		  ,(SELECT BASE_NM FROM TB_COMMON_CODE_ADM B WHERE B.BASE_GROUP_CD='036' AND B.BASE_CD = C.PART_UNIT) PART_UNIT_NM
		  ,C.PART_UNIT
	  FROM TB_ITEM_MOTOR_EBOM A, TB_ITEM_PART_ADM C
	  WHERE A.ITEM_CD = #{itemCd}		
			AND A.PART_CD = C.PART_CD
			AND A.ITEM_REV = C.PART_REV
	</select>
	
	<!-- 작업지시 납기일 수정  -->
	<update id="updateDlvDate">
		UPDATE	TB_WORK_ORDER 
		SET 	DLV_DATE = #{dlvDate},
				OUTPUT_DATE = #{outputDate}
		WHERE	SUBSTRING(CONT_DTL_NO,0,14) = #{contNo}
	</update>
	
	
	<!-- 긴급여부 수정  -->
	<update id="updateEmerYn">
		UPDATE	TB_WORK_ORDER 
		SET 	WORK_EMER_YN = #{workEmerYn}		
		WHERE	WORK_ORD_NO = #{workOrdNo}
	</update>	
	
	<!-- 작업지시일 수정  -->
	<update id="updateWorkOrdDate">
		UPDATE	TB_WORK_ORDER 
		SET 	WORK_ORD_DATE = #{workOrdDate} ,
				WORK_EMER_YN = #{workEmerYn}	
		WHERE	WORK_ORD_NO = #{workOrdNo}
	</update>		
	
	<!-- 작업지시 존재하는 번호인지 확인 -->
	<select id="chekWorkOrdExsit" resultType="int">
		<![CDATA[
			SELECT
				COUNT(*)
			FROM TB_WORK_ORDER A
			WHERE 1=1
			AND A.WORK_ORD_NO = #{workOrdNo}
		]]>
	</select>
	
	<!-- 수주진행현황 모니터링 -->
	<select id="monitoringBizOrd" resultMap="WorkOrderVo">
			SELECT 
				A.CONT_NO,
				B.CONT_DTL_NO,
				C.WORK_ORD_NO,
				A.RCV_DATE,
				C.BARCODE_NO,
				Z.ITEM_GUBUN,
				(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=Z.ITEM_GUBUN AND X.BASE_GROUP_CD='037') ITEM_GUBUN_NM,
				Z.ITEM_CD,
				Z.ITEM_REV,
				Z.ITEM_NM,
				B.DTL_ORD_CNT,
				C.WORK_ORD_QTY,
				ISNULL(ROUND((CONVERT(FLOAT,C.WORK_ORD_QTY)/CONVERT(FLOAT,B.DTL_ORD_CNT)) * 100 ,0),0) PRDC_RATE,
				ISNULL(D.PO_STATUS,'-') PO_STATUS,
				ISNULL(F.IN_STATUS,'입고대기') IN_STATUS,
				ISNULL(G.PRE_OUT_STATUS,'출고대기') PRE_OUT_STATUS,
				(SELECT CASE
							WHEN ISNULL((SELECT COUNT(*)
									FROM TB_WORK_ORDER_PRCSS X 
									WHERE WORK_ORD_NO=C.WORK_ORD_NO
									GROUP BY WORK_ORD_NO),0)=0 THEN '공정대기'
							WHEN ISNULL((SELECT	COUNT(*)
										FROM TB_WORK_ORDER A, TB_ITEM_MOTOR_MBOM B, TB_PRCSS_BOM_DTL X, TB_PRCSS_CODE_ADM D, TB_WORK_ORDER_PRCSS E, TB_ITEM_MOTOR_ADM F
										WHERE A.ITEM_CD = B.ITEM_CD
											AND A.ITEM_REV = B.ITEM_REV
											AND B.BOM_CD = X.BOM_CD
											AND X.PRCSS_SEQ = (SELECT MAX(PRCSS_SEQ) FROM TB_PRCSS_BOM_DTL WHERE BOM_CD = B.BOM_CD)
											AND X.PRCSS_CD = D.PRCSS_CD
											AND D.PRCSS_CD != D.LOWER_PRCSS_CD
											AND D.PRCSS_SEQ = (SELECT MAX(PRCSS_SEQ) FROM TB_PRCSS_CODE_ADM WHERE PRCSS_CD = X.PRCSS_CD)
											AND A.WORK_ORD_NO = E.WORK_ORD_NO
											AND D.LOWER_PRCSS_CD = E.MINOR_PRCSS_CD
											AND D.PRCSS_CD = E.MIDDLE_PRCSS_CD
											AND E.WORK_STATUS = 'WC'
											AND F.ITEM_CD = A.ITEM_CD
											AND F.ITEM_REV = A.ITEM_REV
											AND E.WORK_ORD_NO=C.WORK_ORD_NO),0)>0 THEN '공정완료'
			
							ELSE ISNULL((SELECT PRCSS_NM FROM TB_PRCSS_CODE_ADM X WHERE X.PRCSS_CD = (SELECT MAX(X.MINOR_PRCSS_CD) 
										FROM TB_WORK_ORDER_PRCSS X 
										WHERE WORK_ORD_NO=C.WORK_ORD_NO
										AND WORK_STATUS IN('WI')
										GROUP BY WORK_ORD_NO) AND X.PRCSS_CD=X.LOWER_PRCSS_CD),'공정진행')
							END
				) MINOR_PRCSS_CD,
				ISNULL(H.ITEM_INSPECT_STATUS,'출하검사대기') ITEM_INSPECT_STATUS,
				(SELECT CASE WHEN (
								SELECT COUNT(*) FROM TB_WORK_ORDER_PRCSS WHERE WORK_ORD_NO=C.WORK_ORD_NO AND WORK_STATUS='WC') !=0 
							 THEN 
								(SELECT ROUND((CONVERT(FLOAT,(SELECT COUNT(*) FROM TB_WORK_ORDER_PRCSS WHERE WORK_ORD_NO=C.WORK_ORD_NO  AND WORK_STATUS='WC')) /
								(SELECT  COUNT(*) 
								 FROM TB_PRCSS_BOM_ADM A LEFT OUTER JOIN TB_PRCSS_BOM_DTL B ON A.BOM_CD=B.BOM_CD
														LEFT OUTER JOIN TB_PRCSS_CODE_ADM C ON B.PRCSS_CD = C.PRCSS_CD  AND C.LOWER_PRCSS_CD LIKE 'P%'
								 WHERE A.BOM_CD = (SELECT BOM_CD FROM TB_ITEM_MOTOR_MBOM WHERE ITEM_CD =Z.ITEM_CD AND ITEM_REV =Z.ITEM_REV))) * 100 ,2) FROM TB_WORK_ORDER_PRCSS WHERE WORK_ORD_NO=C.WORK_ORD_NO  GROUP BY WORK_ORD_NO ) 
							  ELSE 0 
							  END
				) PROGRESS, 
				CASE WHEN ISNULL(ROUND((CONVERT(FLOAT,E.OUTPUT_DTL_QTY)/CONVERT(FLOAT,C.WORK_ORD_QTY)) * 100 ,0),0) = 100 THEN '출하완료' 
					 WHEN ISNULL(ROUND((CONVERT(FLOAT,E.OUTPUT_DTL_QTY)/CONVERT(FLOAT,C.WORK_ORD_QTY)) * 100 ,0),0) > 0 THEN '출하진행' 
				ELSE '출하대기' END OUT_STATUS,
				ISNULL(ROUND((CONVERT(FLOAT,E.OUTPUT_DTL_QTY)/CONVERT(FLOAT,C.WORK_ORD_QTY)) * 100 ,2),0) OUT_RATE,
				E.DO_DTL_DATE,
				(SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM WHERE DEAL_CORP_CD= (SELECT DO_CORP_CD FROM TB_DELIVERY_ORDER_ADM X WHERE X.DO_NO=E.DO_NO)) DEAL_CORP_NM
			FROM  TB_ITEM_MOTOR_ADM Z, TB_BIZ_ORDER_ADM A
			LEFT OUTER JOIN TB_BIZ_ORDER_DTL B
			ON A.CONT_NO=B.CONT_NO
			LEFT OUTER JOIN TB_WORK_ORDER C
			ON B.CONT_DTL_NO=C.CONT_DTL_NO
			LEFT OUTER JOIN (SELECT B.CONT_DTL_NO,
									CASE WHEN (SELECT COUNT(Y.PO_STATUS) FROM TB_BIZ_ORDER_DTL X, TB_PURCHASE_ORDER_DTL Y 
												WHERE 1=1
												AND X.CONT_DTL_NO=Y.CONT_DTL_NO
												AND Y.PO_STATUS = '001'
												GROUP BY X.CONT_DTL_NO
												HAVING X.CONT_DTL_NO=B.CONT_DTL_NO) > '0' THEN '발주진행' 
										WHEN (SELECT COUNT(Y.PO_STATUS) FROM TB_BIZ_ORDER_DTL X, TB_PURCHASE_ORDER_DTL Y
											WHERE 1=1
											AND X.CONT_DTL_NO=Y.CONT_DTL_NO
											AND Y.PO_STATUS != '003'
											GROUP BY X.CONT_DTL_NO
											HAVING X.CONT_DTL_NO=B.CONT_DTL_NO) IS NULL THEN '발주완료'	
										WHEN (SELECT COUNT(Y.PO_STATUS) FROM TB_BIZ_ORDER_DTL X, TB_PURCHASE_ORDER_DTL Y
											WHERE 1=1
											AND X.CONT_DTL_NO=Y.CONT_DTL_NO
											AND Y.PO_STATUS != '002'
											GROUP BY X.CONT_DTL_NO
											HAVING X.CONT_DTL_NO=B.CONT_DTL_NO) IS NULL THEN '발주마감'	
										END PO_STATUS
							FROM TB_BIZ_ORDER_DTL A
							INNER JOIN TB_PURCHASE_ORDER_DTL B 
							ON A.CONT_DTL_NO=B.CONT_DTL_NO
							GROUP BY
								B.CONT_DTL_NO) D
			ON D.CONT_DTL_NO=B.CONT_DTL_NO
			LEFT OUTER JOIN 
			(SELECT B.CONT_DTL_NO ,
					(CASE WHEN (SELECT COUNT(STATUS_CD)
									FROM TB_BIZ_ORDER_DTL X, TB_PURCHASE_ORDER_DTL Y , TB_IN_OUT_WHS_ADM Z
									WHERE X.CONT_DTL_NO=Y.CONT_DTL_NO
									AND Y.PO_NO=Z.PO_NO
									AND Y.PO_SEQ=Z.PO_SEQ
									AND STATUS_CD IN('I','A')
									GROUP BY X.CONT_DTL_NO
									HAVING X.CONT_DTL_NO=B.CONT_DTL_NO) > 0 THEN '수입검사'
						  WHEN (SELECT COUNT(STATUS_CD)
									FROM TB_BIZ_ORDER_DTL X, TB_PURCHASE_ORDER_DTL Y , TB_IN_OUT_WHS_ADM Z
									WHERE X.CONT_DTL_NO=Y.CONT_DTL_NO
									AND Y.PO_NO=Z.PO_NO
									AND Y.PO_SEQ=Z.PO_SEQ
									AND STATUS_CD='S'
									GROUP BY X.CONT_DTL_NO
									HAVING X.CONT_DTL_NO=B.CONT_DTL_NO) > 0 THEN '가입고'
						  ELSE '입고'
						  END )IN_STATUS
					FROM  TB_BIZ_ORDER_DTL A, TB_PURCHASE_ORDER_DTL B, TB_IN_OUT_WHS_ADM C
					WHERE A.CONT_DTL_NO=B.CONT_DTL_NO
					AND B.PO_NO=C.PO_NO
					AND B.PO_SEQ=C.PO_SEQ
					GROUP BY B.CONT_DTL_NO) F
			ON F.CONT_DTL_NO=B.CONT_DTL_NO
			LEFT OUTER JOIN (SELECT 
									A.WORK_ORD_NO,
										CASE WHEN (SELECT COUNT(*) FROM TB_OUT_WHS_ADM X
												   WHERE 1=1
												   AND X.STATUS_CD !='P'
												   GROUP BY X.WORK_ORD_NO
												   HAVING X.WORK_ORD_NO=A.WORK_ORD_NO) IS NULL  THEN '투입완료'
											WHEN (SELECT COUNT(*) FROM TB_OUT_WHS_ADM X
												   WHERE 1=1
												   AND X.STATUS_CD !='O'
												   GROUP BY X.WORK_ORD_NO
												   HAVING X.WORK_ORD_NO=A.WORK_ORD_NO) IS NULL  THEN '출고완료'
											WHEN (SELECT COUNT(*) FROM TB_OUT_WHS_ADM X
												   WHERE 1=1
												   AND X.STATUS_CD ='O'
												   GROUP BY X.WORK_ORD_NO
												   HAVING X.WORK_ORD_NO=A.WORK_ORD_NO) >0  THEN '출고진행'
										END PRE_OUT_STATUS
								FROM TB_OUT_WHS_ADM A
								WHERE A.WORK_ORD_NO IS NOT NULL
								GROUP BY A.WORK_ORD_NO) G
			ON G.WORK_ORD_NO=C.WORK_ORD_NO
			LEFT OUTER JOIN (SELECT A.WORK_ORD_NO,
								CASE WHEN (SELECT COUNT(*) FROM TB_ITEM_COMPLETE_ADM X
											WHERE X.COMPLETE_STATUS_CD='001'
											GROUP BY X.WORK_ORD_NO
											HAVING X.WORK_ORD_NO=A.WORK_ORD_NO) >0  THEN '출하검사완료'
									 ELSE '출하검사진행'
									 END ITEM_INSPECT_STATUS
							  FROM TB_ITEM_COMPLETE_ADM A) H
			ON H.WORK_ORD_NO=C.WORK_ORD_NO
			LEFT OUTER JOIN TB_DELIVERY_PROC_DTL E
			ON C.BARCODE_NO=E.BARCODE_NO
			WHERE Z.ITEM_CD=B.ITEM_CD
			AND Z.ITEM_REV=B.ITEM_REV
			AND A.RCV_DATE BETWEEN #{startDate} AND #{endDate}
	</select>
	
	<!-- 완료된 작지번호 조회(작지번호) -->
	<select id="completeWorkOrdNoCnt" resultType="int">
		SELECT	COUNT(*)		
		FROM TB_WORK_ORDER A, TB_ITEM_MOTOR_MBOM B, TB_PRCSS_BOM_DTL C, TB_PRCSS_CODE_ADM D, TB_WORK_ORDER_PRCSS E, TB_ITEM_MOTOR_ADM F
		WHERE A.ITEM_CD = B.ITEM_CD
			AND A.ITEM_REV = B.ITEM_REV
			AND B.BOM_CD = C.BOM_CD
			AND C.PRCSS_SEQ = (SELECT MAX(PRCSS_SEQ) FROM TB_PRCSS_BOM_DTL WHERE BOM_CD = B.BOM_CD)
			AND C.PRCSS_CD = D.PRCSS_CD
			AND D.PRCSS_CD != D.LOWER_PRCSS_CD
			AND D.PRCSS_SEQ = (SELECT MAX(PRCSS_SEQ) FROM TB_PRCSS_CODE_ADM WHERE PRCSS_CD = C.PRCSS_CD)
			AND A.WORK_ORD_NO = E.WORK_ORD_NO
			AND D.LOWER_PRCSS_CD = E.MINOR_PRCSS_CD
			AND D.PRCSS_CD = E.MIDDLE_PRCSS_CD
			AND E.WORK_STATUS = 'WC'
			AND F.ITEM_CD = A.ITEM_CD
			AND F.ITEM_REV = A.ITEM_REV
			AND E.WORK_ORD_NO=#{workOrdNo}
	</select>
	
	<!-- 완료된 작지번호에 바코드 생성 -->
	<update id="updateBarcodeNo">
		UPDATE TB_WORK_ORDER
		SET BARCODE_NO = #{barcodeNo}
		WHERE 1=1
		AND WORK_ORD_NO = #{workOrdNo}
	</update>
	
	<!-- 완료된 작지번호 조회(바코드스캔) -->
	<select id="completeWorkOrderList" resultMap="WorkOrderVo">
		SELECT 
			A.BARCODE_NO,
			A.WORK_ORD_NO,
			A.ITEM_SEQ,
			B.ITEM_NM,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=A.ITEM_GUBUN AND X.BASE_GROUP_CD='099')ITEM_GUBUN,
			(SELECT PAIR_QTY FROM TB_ITEM_COMPLETE_ADM X WHERE X.ITEM_SEQ = A.ITEM_SEQ AND X.WORK_ORD_NO=A.WORK_ORD_NO) PAIR_QTY,
			(SELECT IN_LOC FROM TB_ITEM_WHS_ADM X WHERE X.BARCODE_NO=A.BARCODE_NO)IN_LOC
		FROM TB_WORK_ORDER A
		INNER JOIN TB_ITEM_INFO_ADM B
		ON A.ITEM_SEQ = B.ITEM_SEQ
		AND A.BARCODE_NO = #{barcodeNo}
	</select>

	<!-- 완제품검사 확인 -->
	<select id="checkItemComplete" resultMap="WorkOrderVo">
		SELECT 
			WORK_ORD_NO,
			INSPECT_DATE,
			COMPLETE_STATUS_CD
		FROM TB_ITEM_COMPLETE_ADM A
		WHERE WORK_ORD_NO = #{barcodeNo}
	</select>
	
	<!-- 작지종료시간 가져오기 -->
	<select id="getWorkEndTime" resultType="String">
		SELECT	E.WORK_END_TIME
		FROM TB_WORK_ORDER A, TB_ITEM_MOTOR_MBOM B, TB_PRCSS_BOM_DTL C, TB_PRCSS_CODE_ADM D, TB_WORK_ORDER_PRCSS E, TB_ITEM_MOTOR_ADM F
		WHERE A.ITEM_SEQ = B.ITEM_SEQ
			AND B.BOM_CD = C.BOM_CD
			AND C.PRCSS_SEQ = (SELECT MAX(PRCSS_SEQ) FROM TB_PRCSS_BOM_DTL WHERE BOM_CD = B.BOM_CD)
			AND C.PRCSS_CD = D.PRCSS_CD
			AND D.PRCSS_CD != D.LOWER_PRCSS_CD
			AND D.PRCSS_SEQ = (SELECT MAX(PRCSS_SEQ) FROM TB_PRCSS_CODE_ADM WHERE PRCSS_CD = C.PRCSS_CD)
			AND A.WORK_ORD_NO = E.WORK_ORD_NO
			AND D.LOWER_PRCSS_CD = E.MINOR_PRCSS_CD
			AND D.PRCSS_CD = E.MIDDLE_PRCSS_CD
			AND E.WORK_STATUS = 'WC'
			AND F.ITEM_CD = A.ITEM_CD
			AND F.ITEM_REV = A.ITEM_REV
			AND E.WORK_ORD_NO = #{workOrdNo}
			AND E.MIDDLE_PRCSS_CD = D.PRCSS_CD
			AND E.MINOR_PRCSS_CD = D.LOWER_PRCSS_CD
	</select>
	
	<!-- 작업지시 주/부작업자 조회 -->
	<select id="selectWorkChargrList"  resultMap="WorkOrderVo">
		 SELECT 
			ISNULL(EA.WORKER_JUNG,0) USER_NUMBER,
			(SELECT USER_NM FROM TB_USER WHERE USER_NUMBER=EA.WORKER_JUNG) USER_NM,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM WHERE BASE_GROUP_CD='003' AND BASE_CD=U.DEPARTMENT_CD) DEPARTMENT_NM,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM WHERE BASE_GROUP_CD='004' AND BASE_CD=U.CHARGE_DUTY) CHARGE_DUTY_NM,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM WHERE BASE_GROUP_CD='005' AND BASE_CD=U.POST_CD) POST_NM
		FROM TB_WORK_ORDER WO
		LEFT OUTER JOIN TB_EQUIP_CODE_ADM EA
		ON WO.EQUIP_CD=EA.EQUIP_CD
		LEFT OUTER JOIN TB_USER U
		ON EA.WORKER_JUNG=U.USER_NUMBER
		WHERE WORK_ORD_NO=#{workOrdNo}
		<if test="empCd != null and !empCd.equals('')">
		AND (SELECT EMP_CD FROM TB_USER WHERE USER_NUMBER=EA.WORKER_JUNG) = #{empCd}
		</if>
		
		UNION 
		
		SELECT 
			ISNULL(SUB_WORK_CHARGR,0) USER_NUMBER, 
			(SELECT USER_NM FROM TB_USER WHERE USER_NUMBER=SUB_WORK_CHARGR) USER_NM,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM WHERE BASE_GROUP_CD='003' AND BASE_CD=U.DEPARTMENT_CD) DEPARTMENT_CD,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM WHERE BASE_GROUP_CD='004' AND BASE_CD=U.CHARGE_DUTY) CHARGE_DUTY_NM,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM WHERE BASE_GROUP_CD='005' AND BASE_CD=U.POST_CD) POST_NM
		FROM TB_WORK_ORDER WO
		LEFT OUTER JOIN TB_USER U
		ON SUB_WORK_CHARGR=U.USER_NUMBER
		WHERE WORK_ORD_NO=#{workOrdNo}
		<if test="empCd != null and !empCd.equals('')">
		AND (SELECT EMP_CD FROM TB_USER WHERE USER_NUMBER=SUB_WORK_CHARGR) = #{empCd}
		</if>
	</select>
	
	<!-- 작업지시 공정관리************************************************************************************************************** -->
	<!-- 작업지시 공정관리 조회 -->
	<select id="workOrderProgressList" resultMap="WorkOrderVo">
		SELECT 
			WOPG.WORK_PROG_NO
			, WOPG.WORK_ORD_NO
			, WOPG.MIDDLE_PRCSS_CD
			, WOPG.MINOR_PRCSS_CD
			, WOPG.ITEM_SEQ
			, WO.ITEM_SEQ
			, IIA.ITEM_GUBUN
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM B WHERE B.BASE_GROUP_CD = '091' AND IIA.ITEM_GUBUN = B.BASE_CD) ITEM_GUBUN_NM
			, IIA.ITEM_CD
			, IIA.ITEM_NM
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA.ITEM_UNIT AND X.BASE_GROUP_CD = '036') ITEM_UNIT
			, IIA.ITEM_MODEL
			, IIA.ITEM_CUS
			, (SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM X WHERE X.DEAL_CORP_CD = IIA.ITEM_CUS) ITEM_CUS_NM
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA.ITEM_MODEL AND X.BASE_GROUP_CD = '099') ITEM_MODEL_NM
			, IIA.BOX_COUNT
			, (SELECT PRCSS_NM FROM TB_PRCSS_CODE_ADM X WHERE X.PRCSS_TYPE = '001' AND X.PRCSS_CD = X.LOWER_PRCSS_CD AND X.PRCSS_CD = WOPG.MINOR_PRCSS_CD) PRCSS_NM
			, WOPG.WORK_PROG_DATE
			, WOPG.WORK_PROG_QTY
			, WOPG.WORK_PROG_ORD
			, WOPG.WORK_PROG_CORP
			, (SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM X WHERE X.DEAL_CORP_CD = WOPG.WORK_PROG_CORP) OUT_CORP_NM
			, WOPG.WORK_STATUS
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = WOPG.WORK_STATUS AND X.BASE_GROUP_CD = '063') WORK_STATUS_NM
			, WORK_PROG_DESC
			, WOPG.WORK_START_TIME
			, WOPG.WORK_END_TIME
			, WOPG.SAMPLE_CNT
			, WOPG.MD_INSPECT_YN
			, WOPG.JAJU_INSPECT_YN
			, MAX(WOP.WORK_CHARGR) WORK_CHARGR
			, (SELECT USER_NM FROM TB_USER X WHERE X.USER_NUMBER=MAX(WOP.WORK_CHARGR)) WORK_CHARGR_NM
			, WO.WORK_ORD_QTY
			, ISNULL(SUM(WOP.OUTPUT_QTY), 0) OUTPUT_QTY
			, ISNULL(SUM(WOP.FAIR_QTY), 0) FAIR_QTY
			, ISNULL(SUM(WOP.FAULTY_QTY), 0) FAULTY_QTY
			, (SELECT BASE_CD FROM TB_COMMON_CODE_ADM X WHERE X.ETC2=WOPG.MINOR_PRCSS_CD AND X.BASE_GROUP_CD='073') LOC_CD
			, (SELECT TOP(1) LOC_NO FROM TB_LOCATION_ADM WHERE LOC_CD=(SELECT BASE_CD FROM TB_COMMON_CODE_ADM X WHERE X.ETC2=WOPG.MINOR_PRCSS_CD AND X.BASE_GROUP_CD='073')) LOC_NO
			, IIA.SAVELOC_CD IN_LOC_CD
			, IIA.LOC_NO IN_LOC_NO
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=(SELECT X.AREA_CD FROM TB_LOCATION_ADM X WHERE X.LOC_NO = IIA.LOC_NO) AND X.BASE_GROUP_CD='067') AREA_NM
			, (SELECT X.FLOOR_NM FROM TB_LOCATION_ADM X WHERE X.LOC_NO = IIA.LOC_NO) FLOOR_NM
			, (SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM X WHERE X.DEAL_CORP_CD = IIA.ITEM_CUS) DEAL_CORP_NM
		FROM TB_WORK_ORDER_PROGRESS WOPG
		LEFT OUTER JOIN TB_WORK_ORDER WO
		ON WOPG.WORK_ORD_NO = WO.WORK_ORD_NO
		LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA
		ON WOPG.ITEM_SEQ = IIA.ITEM_SEQ
		LEFT OUTER JOIN TB_WORK_ORDER_PRCSS WOP
		ON WOPG.WORK_PROG_NO = WOP.MIDDLE_PRCSS_CD
		WHERE 1=1
		<if test="workOrdNo != null and !workOrdNo.equals('')">
		AND WOPG.WORK_ORD_NO = #{workOrdNo}
		</if>
		<if test="middlePrcssCd != null and !middlePrcssCd.equals('')">
		AND	WOPG.MIDDLE_PRCSS_CD = #{middlePrcssCd}
		</if>
		<if test="minorPrcssCd != null and !minorPrcssCd.equals('')">
		AND	WOPG.MINOR_PRCSS_CD = #{minorPrcssCd}
		</if>
		<if test="workProgDate != null and !workProgDate.equals('')">
		AND SUBSTRING(WOPG.WORK_PROG_DATE, 1, 6) = #{workProgDate}
		</if>
		<if test="workChargr != null and !workChargr.equals('')">
		AND (WO.MAIN_WORK_CHARGR = #{workChargr} OR WO.SUB_WORK_CHARGR = #{workChargr})
		</if>
		<if test="equipCd != null and !equipCd.equals('')">
		AND WO.EQUIP_CD = #{equipCd}
		</if>
		<if test="minorPrcssCd != null and !minorPrcssCd.equals('')">
		AND WOPG.MINOR_PRCSS_CD = #{minorPrcssCd}
		</if>
		<if test="workStatus != null and !workStatus.equals('')">
		AND WOPG.WORK_STATUS = #{workStatus}
		</if>
		<if test="workProgNoArr.length>0">
			AND WOPG.WORK_PROG_NO IN
			<foreach collection="workProgNoArr" item="item" open="(" close=")" separator=",">
				 #{item}
			</foreach>
		</if>
		GROUP BY 
			WOPG.WORK_PROG_NO
			, WOPG.WORK_ORD_NO
			, WOPG.MIDDLE_PRCSS_CD
			, WOPG.MINOR_PRCSS_CD
			, WOPG.ITEM_SEQ
			, WO.ITEM_SEQ
			, IIA.ITEM_GUBUN
			, IIA.ITEM_CD
			, IIA.ITEM_NM
			, IIA.ITEM_CUS
			, IIA.ITEM_MODEL
			, IIA.BOX_COUNT
			, WOPG.WORK_PROG_DATE
			, WOPG.WORK_PROG_QTY
			, WOPG.WORK_PROG_ORD
			, WOPG.WORK_PROG_CORP
			, WOPG.WORK_STATUS
			, WORK_PROG_DESC
			, WOPG.WORK_START_TIME
			, WOPG.WORK_END_TIME
			, WOPG.SAMPLE_CNT
			, WOPG.MD_INSPECT_YN
			, WOPG.JAJU_INSPECT_YN
			, WO.WORK_ORD_QTY
			, IIA.LOC_NO
			, IIA.SAVELOC_CD
			, IIA.ITEM_CUS
			, IIA.ITEM_UNIT
	</select>
	
	<!--작업지시 공정관리 등록 -->
	<insert id="workOrderProgressIns">
		INSERT INTO TB_WORK_ORDER_PROGRESS(
			WORK_PROG_NO,
			WORK_ORD_NO,
			MIDDLE_PRCSS_CD,
			MINOR_PRCSS_CD,
			ITEM_SEQ,
			WORK_PROG_DATE,
			WORK_PROG_QTY,
			WORK_PROG_ORD,
			WORK_PROG_CORP,
			WORK_STATUS,
			WORK_PROG_DESC,
			WORK_START_TIME,
			WORK_END_TIME,
			REG_ID,
			REG_DATE
		) 
		VALUES(
			#{workProgNo},
			#{workOrdNo},
			#{middlePrcssCd},
			#{minorPrcssCd},
			#{itemSeq},
			#{workProgDate},
			#{workProgQty},
			#{workProgOrd},
			#{workProgCorp},
			#{workStatus},
			#{workProgDesc},
			#{workStartTime},
			#{workEndTime},
			#{regId},
			GETDATE()
		)
	</insert>
	
	<!--작업지시 공정관리 수정 -->
	<update id="workOrderProgressUpd">
		UPDATE	TB_WORK_ORDER_PROGRESS 
		<set>
			<if test="workProgDate!=null and !workProgDate.equals('')">
				WORK_PROG_DATE = #{workProgDate},
			</if>
			<if test="workProgQty!=null and !workProgQty.equals('')">
				WORK_PROG_QTY = #{workProgQty},
			</if>
			<if test="workProgCorp!=null and !workProgCorp.equals('')">
				WORK_PROG_CORP = #{workProgCorp},
			</if>
			<if test="workStatus!=null and !workStatus.equals('')">
				WORK_STATUS = #{workStatus},
			</if>
			<if test="workProgDesc!=null and !workProgDesc.equals('')">
				WORK_PROG_DESC = #{workProgDesc},
			</if>
			<if test="workStartTime!=null and !workStartTime.equals('')">
				WORK_START_TIME = #{workStartTime},
			</if>
			<if test="workEndTime!=null and !workEndTime.equals('')">
				WORK_END_TIME = #{workEndTime},
			</if>
			<if test="mdInspectYn != null and !mdInspectYn.equals('')">
				MD_INSPECT_YN = #{mdInspectYn},
			</if>
			<if test="jajuInspectYn != null and !jajuInspectYn.equals('')">
				JAJU_INSPECT_YN = #{jajuInspectYn},
			</if>
			<if test="sampleCnt != null and !sampleCnt.equals('')">
				SAMPLE_CNT = #{sampleCnt},
			</if>
			UPD_ID = #{updId},
			UPD_DATE = GETDATE()
		</set>
		WHERE 1=1
		AND WORK_PROG_NO = #{workProgNo}
		
	</update>
</mapper>
