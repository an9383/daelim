<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  	
<mapper namespace="mes.mappers.io.inOutWhsAdmMapper">

	<resultMap id="InOutWhsAdmVo" type="mes.domain.io.InOutWhsAdmVo">
		<result property="poNo"					column="PO_NO"				/>
		<result property="poSeq"		    	column="PO_SEQ"				/>
		
		<result property="inSlipNo"				column="IN_SLIP_NO"			/>			
		<result property="inSlipSeq"			column="IN_SLIP_SEQ"		/>		
		
		<result property="inSeq"				column="IN_SEQ"				/>			
		<result property="lotNo"				column="LOT_NO"				/>		
		<result property="itemSeq"		  	  	column="ITEM_SEQ"			/>
		<result property="itemCd"		  	  	column="ITEM_CD"			/>	
		<result property="itemNm"		  	  	column="ITEM_NM"			/>
		<result property="itemModel"		  	column="ITEM_MODEL"			/>
		<result property="itemUnit"		  		column="ITEM_UNIT"			/>
		<result property="importYn"		  		column="IMPORT_YN"			/>
		
		<result property="partCd"		  	  	column="PART_CD"			/>
		<result property="partRev"		        column="PART_REV"			/>
		<result property="partNm"		        column="PART_NM"			/>
		<result property="partSpec"		        column="PART_SPEC"			/>
		<result property="partGubun"		    column="PART_GUBUN"			/>
		<result property="partUnit"		        column="PART_UNIT"			/>
		<result property="itemFifoGubun"		column="ITEM_FIFO_GUBUN"	/>
		<result property="itemFifoGubunNm"		column="ITEM_FIFO_GUBUN_NM"	/>
		<result property="ordQty"		        column="ORD_QTY"			/>
		
		<result property="partQty"		        column="PART_QTY"			/>
		<result property="safyStockCnt"		    column="SAFY_STOCK_CNT"		/>
		<result property="addQty"		        column="ADD_QTY"			/>
		<result property="payYn"		        column="PAY_YN"				/>
		<result property="inspectYn"			column="INSPECT_YN"			/>
		<result property="preInWhsQty"			column="PRE_IN_WHS_QTY"		/>
		<result property="inWhsQty"				column="IN_WHS_QTY"			/>
		<result property="inspectQty"			column="INSPECT_QTY"		/> 
		<result property="adjustQty"			column="ADJUST_QTY"			/> 
		<result property="faultyQty"			column="FAULTY_QTY"			/> 
		<result property="returnQty"			column="RETURN_QTY"			/>
		<result property="exceptQty"			column="EXCEPT_QTY"			/> 
		<result property="diffQty"				column="DIFF_QTY"			/> 
		<result property="remainQty"			column="REMAIN_QTY"			/> 
		<result property="spplyCorpCd"			column="SPPLY_CORP_CD"		/> 
		<result property="spplyCorpNm"			column="SPPLY_CORP_NM"		/> 
		<result property="preInWhsDate"			column="PRE_IN_WHS_DATE"	/> 
		<result property="preInStatus"			column="PRE_IN_STATUS"		/> 
		<result property="inWhsDate"			column="IN_WHS_DATE"		/> 
		<result property="inspectDate"			column="INSPECT_DATE"		/> 
		<result property="barcodeNo"			column="BARCODE_NO"			/> 
		<result property="approvalCd"			column="APPROVAL_CD"		/> 
		<result property="approvalYn"			column="APPROVAL_YN"		/> 
		<result property="approvalNm"			column="APPROVAL_NM"		/> 
		<result property="statusCd"				column="STATUS_CD"			/> 
		<result property="partChargr"			column="PART_CHARGR"		/> 
		<result property="preOutWhsDate"		column="PRE_OUT_WHS_DATE"	/> 
		<result property="preOutEquipCd"		column="PRE_OUT_EQUIP_CD"	/>
		<result property="preOutPartCd"			column="PRE_OUT_PART_CD"	/> 
		<result property="preOutQty"			column="PRE_OUT_QTY"		/> 
		<result property="preWorkCharger"		column="PRE_WORK_CHARGER"	/>
		<result property="preWorkChargerNm"		column="PRE_WORK_CHARGER_NM"/>  
		<result property="outWhsDate"			column="OUT_WHS_DATE"		/>
		<result property="outEquipCd"			column="OUT_EQUIP_CD"		/> 
		<result property="outPartCd"			column="OUT_PART_CD"		/> 
		<result property="outQty"				column="OUT_QTY"			/> 
		<result property="outWorkCharger"		column="OUT_WORK_CHARGER"	/> 
		<result property="locationCd"			column="LOCATION_CD"		/>		
		<result property="locationNm"			column="LOCATION_NM"		/>
		<result property="areaCd"				column="AREA_CD"			/>		
		<result property="areaNm"				column="AREA_NM"			/>
		<result property="floorCd"				column="FLOOR_CD"			/>		
		<result property="floorNm"				column="FLOOR_NM"			/>
		<result property="locationNo"			column="LOCATION_NO"		/>
		<result property="outputDate"			column="OUTPUT_DATE"		/>
		<result property="manufactrCd"			column="MANUFACTR_CD"		/> 
		<result property="inWhsDesc"			column="IN_WHS_DESC"		/> 
		<result property="regId"				column="REG_ID"				/>
		<result property="regDate"				column="REG_DATE"			/>
		<result property="updId"				column="UPD_ID"				/>				
		<result property="updDate"				column="UPD_DATE"			/>
		
		<result property="startDate"			column="START_DATE"			/>				
		<result property="endDate"				column="END_DATE"			/>
		
		<result property="poDate"				column="PO_DATE"			/>
		<result property="poDesc"				column="PO_DESC"			/>
		<result property="dlvDate"				column="DLV_DATE"			/>
		<result property="receiptGubun"			column="RECEIPT_GUBUN"		/>
		<result property="receiptGubunNm"		column="RECEIPT_GUBUN_NM"	/>
		<result property="dealCorpCd"		    column="DEAL_CORP_CD"		/>
		<result property="dealCorpNm"		    column="DEAL_CORP_NM"		/>
		<result property="pairCnt"		    	column="PAIR_CNT"			/>
		<result property="faultyCnt"		    column="FAULTY_CNT"			/>
		<result property="tmMon"		   		column="TM_MON"				/>
		
		<result property="contDtlNo"		   	column="CONT_DTL_NO"		/>
		<result property="status"		   		column="STATUS"				/>
		<result property="today"		   		column="TODAY"				/>
	
		<!--추가사항 -->
		<result property="itemInspectCheck"		column="ITEM_INSPECT_CHECK"	/>
		<result property="inOutWhsCheck"		column="IN_OUT_WHS_CHECK"	/>
		<result property="mainGubun"			column="MAIN_GUBUN"			/>
		<result property="mainGubunNm"			column="MAIN_GUBUN_NM"		/>
		<result property="lhRhNm"				column="LHRH_NM"			/>
		<result property="itemGubun"			column="ITEM_GUBUN"			/>
		<result property="itemGubunNm"			column="ITEM_GUBUN_NM"		/>
		<result property="qaEval"				column="QA_EVAL"			/>
		<result property="faultyPcs"			column="FAULTY_PCS"			/>
		<result property="faultyPcsNm"			column="FAULTY_PCS_NM"		/>
		<result property="unfitProc"			column="UNFIT_PROC"			/>
		<result property="unfitProcNm"			column="UNFIT_PROC_NM"		/>
		<result property="inspectChargr"		column="INSPECT_CHARGR"		/>
		<result property="areaNmSewing"			column="AREA_NM_SEWING"		/>
		<result property="floorNmSewing"		column="FLOOR_NM_SEWING"	/>
		<result property="totalCount"			column="TOTAL_COUNT"		/>
		<result property="itemCus"				column="ITEM_CUS"			/>
		<result property="itemCusNm"			column="ITEM_CUS_NM"		/>
		<result property="exportCost"			column="EXPORT_COST"		/>
		<result property="supplyQty"			column="SUPPLY_QTY"			/>
		<result property="surtaxQty"			column="SURTAX_QTY"			/>
		<result property="totalQty"				column="TOTAL_QTY"			/>
		
		<result property="whsDate"				column="WHS_DATE"			/>
		<result property="weekend"				column="WEEKEND"			/>
		<result property="inWhsCost"			column="IN_WHS_COST"		/>
		<result property="outWhsCost"			column="OUT_WHS_COST"		/>
		<result property="groupType"	column="GROUP_TYPE"		/>
		<result property="groupTypeByD"	column="GROUP_TYPE_BY_D"		/>
		<result property="groupTypeByM"	column="GROUP_TYPE_BY_M"		/>
		<result property="inType"		column="IN_TYPE"				/>
		
		<result property="inMon01"				column="IN_MON_01"				/>
		<result property="inMon02"				column="IN_MON_02"				/>
		<result property="inMon03"				column="IN_MON_03"				/>
		<result property="inMon04"				column="IN_MON_04"				/>
		<result property="inMon05"				column="IN_MON_05"				/>
		<result property="inMon06"				column="IN_MON_06"				/>
		<result property="inMon07"				column="IN_MON_07"				/>
		<result property="inMon08"				column="IN_MON_08"				/>
		<result property="inMon09"				column="IN_MON_09"				/>
		<result property="inMon10"				column="IN_MON_10"				/>
		<result property="inMon11"				column="IN_MON_11"				/>
		<result property="inMon12"				column="IN_MON_12"				/>
		<result property="inSum"				column="IN_SUM"					/>
		
		
	</resultMap>
	
	<!-- 가입고등록,개별입고등록 목록조회 -->
	<select id="preInOutWhsAdmList" resultMap="InOutWhsAdmVo">
		SELECT 
			A.IN_SLIP_NO
			, A.IN_SLIP_SEQ
			, A.PO_NO
			, A.PO_SEQ 
			, A.IN_SEQ 
			, A.ITEM_SEQ
			, B.ITEM_CD
			, B.ITEM_NM
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=B.ITEM_MODEL AND X.BASE_GROUP_CD='099') ITEM_MODEL
			, LOT_NO 
			, BARCODE_NO
			, STATUS_CD
			, A.PRE_IN_WHS_DATE
			, (SELECT ISNULL(SUM(ORD_QTY),0)
				FROM TB_PURCHASE_ORDER_DTL X 
				WHERE X.PO_NO=A.PO_NO
				AND X.ITEM_SEQ=A.ITEM_SEQ)ORD_QTY
			, PRE_IN_WHS_QTY
			, IIA_TB.PAIR_CNT
			, IIA_TB.FAULTY_CNT
			, IN_WHS_DESC
			, SPPLY_CORP_CD
			,(SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM X WHERE X.DEAL_CORP_CD=SPPLY_CORP_CD) SPPLY_CORP_NM
			, IIA_TB.QA_EVAL
			, A.APPROVAL_CD
			, IFJ_TB.FAULTY_PCS
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=IFJ_TB.FAULTY_PCS AND X.BASE_GROUP_CD='059' ) FAULTY_PCS_NM
			, A.LOCATION_NO
			, A.LOCATION_CD
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM WHERE BASE_CD=A.LOCATION_CD AND BASE_GROUP_CD='073' ) LOCATION_NM
			, A.AREA_CD
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM WHERE BASE_CD=A.AREA_CD AND BASE_GROUP_CD='067' ) AREA_NM
			, A.FLOOR_CD
			, UF_TB.UNFIT_PROC
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = UF_TB.UNFIT_PROC AND X.BASE_GROUP_CD = '139') UNFIT_PROC_NM
			, POA_TB.DEAL_CORP_CD
		FROM TB_IN_OUT_WHS_ADM A
		INNER JOIN TB_ITEM_INFO_ADM B
		ON A.ITEM_SEQ=B.ITEM_SEQ
		LEFT OUTER JOIN TB_ITEM_INSPECT_ADM IIA_TB
		ON A.IN_SLIP_NO=IIA_TB.IN_SLIP_NO
		AND A.IN_SLIP_SEQ=IIA_TB.IN_SLIP_SEQ
		LEFT OUTER JOIN TB_ITEM_FAULTY_JDG_ADM IFJ_TB
		ON A.IN_SLIP_NO=IFJ_TB.IN_SLIP_NO
		AND A.IN_SLIP_SEQ=IFJ_TB.IN_SLIP_SEQ
		LEFT JOIN TB_UNFIT_ADM UF_TB
		ON A.BARCODE_NO = UF_TB.UNFIT_LOT
		AND UF_TB.UNFIT_GUBUN = '001'
		LEFT OUTER JOIN TB_PURCHASE_ORDER_ADM POA_TB
		ON A.PO_NO=POA_TB.PO_NO
		WHERE 1=1
		<if test="poNo!=null and !poNo.equals('')">
		AND A.PO_NO = #{poNo}
		AND A.PO_SEQ = #{poSeq}
		</if>
		<if test="inSlipNo != null and !inSlipNo.equals('')">
		AND A.IN_SLIP_NO = #{inSlipNo}
		</if>
		<if test="inSlipSeq != null and !inSlipSeq.equals('')">
		AND A.IN_SLIP_SEQ = #{inSlipSeq}
		</if>
		<if test="itemSeq != null and !itemSeq.equals('')">
		AND A.ITEM_SEQ = #{itemSeq}
		</if>
		<if test="dealCorpCd != null and !dealCorpCd.equals('')">
		AND POA_TB.DEAL_CORP_CD=#{dealCorpCd}
		</if>
		<if test="startDate != null and !startDate.equals('')">
		AND A.PRE_IN_WHS_DATE BETWEEN #{startDate} AND #{endDate}
		</if>
	</select>
	
	
	
	<!-- 발주수량대비 가입고수량 조회 -->
	<select id="unPreInOutQtyList" resultMap="InOutWhsAdmVo">
		SELECT 
			A.PO_NO,
			A.PO_SEQ,	
			A.PART_CD,
			ISNULL(A.TOTAL_PART_QTY,0) - ISNULL(B.PRE_IN_WHS_QTY,0) DIFF_QTY
		FROM 
		(
		SELECT 
			PO_NO,
			PO_SEQ,
			MRP_NO,
			CONT_DTL_NO,
			PART_CD,
			ISNULL(PART_QTY,0) PART_QTY,
			ISNULL(SAFY_STOCK_CNT,0) SAFY_STOCK_CNT,
			ISNULL(PART_QTY,0)+ISNULL(SAFY_STOCK_CNT,0) TOTAL_PART_QTY
		FROM TB_PURCHASE_ORDER_DTL 
		)A
		LEFT OUTER JOIN
		(
		SELECT 
			PO_NO,
			PO_SEQ,
			ISNULL(SUM(PRE_IN_WHS_QTY),0) PRE_IN_WHS_QTY
		FROM TB_IN_OUT_WHS_ADM
		GROUP BY PO_NO, PO_SEQ
		)B
		ON A.PO_NO=B.PO_NO
		AND A.PO_SEQ=B.PO_SEQ
		WHERE 1=1
		AND ISNULL(A.TOTAL_PART_QTY,0) - ISNULL(B.PRE_IN_WHS_QTY,0) != 0
		AND A.PO_NO=#{poNo}
	</select>
	
	
	
	<!-- 가입고등록 등록 -->
	<insert id="preInOutWhsAdmCreate">
		INSERT INTO TB_IN_OUT_WHS_ADM	(
			IN_SLIP_NO
			, IN_SLIP_SEQ
			, PO_NO
			, PO_SEQ
			, IN_SEQ
			, LOT_NO
			, ITEM_SEQ
			, ORD_QTY
			, ADD_QTY
			, PAY_YN
			, PRE_IN_WHS_QTY
			, IN_WHS_QTY
			, INSPECT_QTY
			, ADJUST_QTY
			, FAULTY_QTY
			, EXCEPT_QTY
			, DIFF_QTY
			, REMAIN_QTY
			, PRE_IN_WHS_DATE
			, INSPECT_YN
			, BARCODE_NO
			, SPPLY_CORP_CD
			, IN_WHS_DESC
			, STATUS_CD
			, LOCATION_CD
			, AREA_CD
			, FLOOR_CD
			, LOCATION_NO
			, REG_ID
			, REG_DATE
		) 
		VALUES(
			#{inSlipNo}
			, #{inSlipSeq}
			, #{poNo}
			, #{poSeq}
			, #{inSeq}
			, #{lotNo}
			, #{itemSeq}
			, #{ordQty}
			, #{addQty}
			, #{payYn}
			, #{preInWhsQty}
			, 0
			, 0
			, 0
			, 0
			, 0
			, 0
			, 0
			, #{preInWhsDate}
			, #{inspectYn}
			, #{barcodeNo}
			, #{spplyCorpCd}
			, #{inWhsDesc}
			, 'S'
			, #{locationCd}
			, #{areaCd}
			, #{floorCd}
			, #{locationNo}
			, #{regId}
			, getDate()
		)
	</insert>
	
	<!-- 가입고등록 수정 -->
	<update id="preInOutWhsAdmUpdate">
<!-- 		<![CDATA[ -->
			UPDATE	TB_IN_OUT_WHS_ADM							 
			SET	
				<if test="remainQty != null">
					REMAIN_QTY = #{remainQty},
				</if>
				<if test="addQty != null">
					ADD_QTY = #{addQty},
				</if>
				<if test="payYn != null">
					PAY_YN = #{payYn},
				</if>
				<if test="preInWhsQty != null">
					PRE_IN_WHS_QTY = #{preInWhsQty},
				</if>
				<if test="preInWhsDate != null">
					PRE_IN_WHS_DATE = #{preInWhsDate},
				</if>
				<if test="inWhsQty != null">
					IN_WHS_QTY = #{inWhsQty},
				</if>
				<if test="inWhsDate != null">
					IN_WHS_DATE = #{inWhsDate},
				</if>
				<if test="statusCd != null">
					STATUS_CD = #{statusCd},
				</if>
				<if test="inspectYn != null">
					INSPECT_YN = #{inspectYn},
				</if>
				<if test="inWhsDesc != null">
					IN_WHS_DESC = #{inWhsDesc},
				</if>
				<if test="lotNo != null">
					LOT_NO = #{lotNo},
				</if>
				
				<if test="locationCd != null">
					LOCATION_CD = #{locationCd},
				</if>
				<if test="areaCd != null">
					AREA_CD = #{areaCd},
				</if>
				<if test="floorCd != null">
					FLOOR_CD = #{floorCd},
				</if>
				<if test="locationNo != null">
					LOCATION_NO = #{locationNo},
				</if>
				<if test="updId != null">
					UPD_ID = #{updId},
				</if>
				UPD_DATE = getDate()
			WHERE 1=1
			AND	IN_SLIP_NO = #{inSlipNo}
			AND	IN_SLIP_SEQ = #{inSlipSeq}
<!-- 		]]> -->
	</update>
	
	<!-- 라벨출력처리 -->
	<update id="preInOutWhsAdmLabelPrint">
<!-- 		<![CDATA[ -->
			UPDATE	TB_IN_OUT_WHS_ADM							 
			SET	
				OUTPUT_DATE = getDate()
			WHERE 1=1
			AND	IN_SLIP_NO = #{inSlipNo}
			AND	IN_SLIP_SEQ = #{inSlipSeq}
<!-- 		]]> -->
	</update>
	
	<!-- 가입고등록 삭제 -->
	<delete id="preInOutWhsAdmDelete">
		DELETE FROM TB_IN_OUT_WHS_ADM 
		WHERE 1=1
		AND	IN_SLIP_NO = #{inSlipNo}
		AND	IN_SLIP_SEQ = #{inSlipSeq}
	</delete>

	<!-- 가입고시퀀스 생성 -->
	<select id="getInSeq" resultType="String">
		SELECT ISNULL(MAX(IN_SEQ)+1,0) FROM TB_IN_OUT_WHS_ADM WHERE PO_NO = #{poNo} AND PO_SEQ = #{poSeq}
	</select>
	
	<!-- 발주현황 삭제 확인 -->
	<select id="inOutWhsDataCheck" resultType="String">
		SELECT 
			COUNT(*) 
		FROM TB_IN_OUT_WHS_ADM 
		WHERE PO_NO = #{poNo}
		AND PO_SEQ = #{poSeq}
	</select>
	
	<!-- 입고전표번호 생성 -->
	<select id="getInSlipNo" resultType="String">
		SELECT ISNULL(RIGHT('000' + CAST(MAX(RIGHT(IN_SLIP_NO,3))+1 AS NVARCHAR),3), '001') 
		FROM TB_IN_OUT_WHS_ADM 
		WHERE SUBSTRING(IN_SLIP_NO,0,9) = #{today}
		AND PO_NO != '0'
	</select>
	
	<!-- 입고전표시퀀스 생성 -->
	<select id="getInSlipSeq" resultType="String">
		SELECT ISNULL(MAX(IN_SLIP_SEQ)+1,0) FROM TB_IN_OUT_WHS_ADM WHERE IN_SLIP_NO = #{inSlipNo}
	</select>
	
	<!-- 창고이동 후 입고전표번호 생성 -->
	<select id="getInSlipNo2" resultType="String">
		SELECT COUNT(*)+1
		FROM(
			SELECT IN_SLIP_NO FROM TB_IN_OUT_WHS_ADM WHERE SUBSTRING(IN_SLIP_NO,0,16) = #{inSlipNo} GROUP BY IN_SLIP_NO
		)T
	</select>
	
	
	<!-- 바코드 시퀀스 가져오기 -->
	<select id="getBarcodeSeq" parameterType="String" resultType="String">
<!-- 		SELECT ISNULL(RIGHT('000' + CAST(MAX(RIGHT(BARCODE_NO,3))+1 AS NVARCHAR),3), '001') FROM TB_IN_OUT_WHS_ADM  WHERE SUBSTRING(BARCODE_NO,0,14) = #{date} -->
<!-- 		입고등록 바코드 생성 쿼리랑 초기재고관리 쿼리랑 같아서 두 테이블을 UNION으로 묶어서 시퀀스 생성하는 것으로 변경 - 2023.01.30 -->
		SELECT ISNULL(RIGHT('000' + CAST(MAX(RIGHT(BARCODE_NO,3))+1 AS NVARCHAR),3), '001')
		FROM (
			SELECT BARCODE_NO
			FROM TB_IN_OUT_WHS_ADM
			WHERE SUBSTRING(BARCODE_NO,0,14) = #{date}
			
			UNION
			
			SELECT BARCODE_NO
			FROM TB_STOCK_PAYMENT_ADM
			WHERE SUBSTRING(BARCODE_NO,0,14) = #{date}
		) A
	</select>
	
	<!-- 가입고등록 자재상태 확인 -->
	<select id="statusCdCheck" resultType="String" >
		SELECT STATUS_CD FROM TB_IN_OUT_WHS_ADM 
		WHERE 1=1
		AND IN_SLIP_NO = #{inSlipNo} 
		AND IN_SLIP_SEQ = #{inSlipSeq}
	</select>
	
	<!-- !입고등록! -->
	<!-- 입고등록 목록조회 -->
	<select id="inOutWhsAdmList" resultMap="InOutWhsAdmVo">
		SELECT
			IIA_TB.MAIN_GUBUN
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA_TB.MAIN_GUBUN AND X.BASE_GROUP_CD = '112') MAIN_GUBUN_NM
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA_TB.LHRH_CD AND X.BASE_GROUP_CD = '097') LHRH_NM
			, IIA_TB.ITEM_GUBUN
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA_TB.ITEM_GUBUN AND X.BASE_GROUP_CD = '079') ITEM_GUBUN_NM
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA_TB.ITEM_MODEL AND X.BASE_GROUP_CD = '099') ITEM_MODEL
			, IIA_TB.ITEM_CD
			, IIA_TB.ITEM_NM
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA_TB.ITEM_UNIT AND X.BASE_GROUP_CD = '036') ITEM_UNIT
			, IWA_TB.IN_SLIP_NO
			, IWA_TB.IN_SLIP_SEQ
			, IWA_TB.PO_NO
			, IWA_TB.BARCODE_NO
			, IWA_TB.PRE_IN_WHS_DATE
			, IMA_TB.INSPECT_DATE
			, IWA_TB.IN_WHS_DATE
			, IWA_TB.LOT_NO
			, ISNULL(IWA_TB.PRE_IN_WHS_QTY, 0) PRE_IN_WHS_QTY
			, ISNULL(IWA_TB.IN_WHS_QTY, 0)IN_WHS_QTY
			, IMA_TB.APPROVAL_YN
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IMA_TB.APPROVAL_YN AND X.BASE_GROUP_CD = '062') APPROVAL_NM
			, INS_TB.QA_EVAL
			, ISNULL(INS_TB.PAIR_CNT, 0) PAIR_CNT
			, ISNULL(INS_TB.FAULTY_CNT, 0) FAULTY_CNT
			, (SELECT X.USER_NM FROM TB_USER X WHERE X.USER_NUMBER = IMA_TB.INSPECT_CHARGR) INSPECT_CHARGR
			, IWA_TB.LOCATION_CD
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IWA_TB.LOCATION_CD AND X.BASE_GROUP_CD = '073') LOCATION_NM
			, LOC_TB.AREA_CD 
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = LOC_TB.AREA_CD AND X.BASE_GROUP_CD = '067') AREA_NM
			, LOC_TB.FLOOR_NM FLOOR_CD
			, LOC_TB.LOC_NO LOCATION_NO
			, POA_TB.DEAL_CORP_CD
			, (SELECT Z.DEAL_CORP_NM FROM TB_DEAL_CORP_ADM Z WHERE Z.DEAL_CORP_CD = POA_TB.DEAL_CORP_CD) DEAL_CORP_NM
			, IWA_TB.OUTPUT_DATE
			, IIA_TB.ITEM_CUS
			, (SELECT X.DEAL_CORP_NM FROM TB_DEAL_CORP_ADM X WHERE X.DEAL_CORP_CD = IIA_TB.ITEM_CUS) ITEM_CUS_NM
		FROM TB_IN_OUT_WHS_ADM IWA_TB
		LEFT OUTER JOIN TB_ITEM_INSPECT_MASTER_ADM IMA_TB
		ON IWA_TB.IN_SLIP_NO = IMA_TB.IN_SLIP_NO
		LEFT OUTER JOIN TB_ITEM_INSPECT_ADM INS_TB
		ON IWA_TB.IN_SLIP_NO = INS_TB.IN_SLIP_NO
		AND IWA_TB.IN_SLIP_SEQ = INS_TB.IN_SLIP_SEQ
		LEFT OUTER JOIN TB_PURCHASE_ORDER_ADM POA_TB
		ON IWA_TB.PO_NO = POA_TB.PO_NO
		LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA_TB
		ON IWA_TB.ITEM_SEQ = IIA_TB.ITEM_SEQ
		LEFT OUTER JOIN TB_LOCATION_ADM LOC_TB
		ON IWA_TB.LOCATION_NO=LOC_TB.LOC_NO
		WHERE 1=1
		<if test="mainGubun != null and !mainGubun.equals('')">
		AND IIA_TB.MAIN_GUBUN = #{mainGubun}
		</if>
		<if test="approvalYn != null and !approvalYn.equals('')">
			<if test="approvalYn == '001'">
				AND IMA_TB.APPROVAL_YN = '001'
			</if>
			<if test="approvalYn == '002'">
				AND (IMA_TB.APPROVAL_YN IS NULL OR IMA_TB.APPROVAL_YN = '' OR IMA_TB.APPROVAL_YN = '002')
			</if>
		</if>
		<if test="inWhsYn != null and !inWhsYn.equals('')">
			<if test="inWhsYn == '001'">
				AND IWA_TB.IN_WHS_DATE = '001'
			</if>
			<if test="inWhsYn == '002'">
				AND (IWA_TB.IN_WHS_DATE IS NULL OR IWA_TB.IN_WHS_DATE = '')
			</if>
		</if>
        <if test="startDate != null and !startDate.equals('')">
			<if test="searchOption == '001'">
				AND IWA_TB.PRE_IN_WHS_DATE BETWEEN #{startDate} AND #{endDate}
				ORDER BY IWA_TB.PRE_IN_WHS_DATE DESC
			</if>
			<if test="searchOption == '002'">
				AND IMA_TB.INSPECT_DATE BETWEEN #{startDate} AND #{endDate}
				ORDER BY IMA_TB.INSPECT_DATE DESC
			</if>
			<if test="searchOption == '003'">
				AND IWA_TB.IN_WHS_DATE BETWEEN #{startDate} AND #{endDate}
				ORDER BY IWA_TB.IN_WHS_DATE DESC
			</if>
			<if test="searchOption == ''">
				AND IWA_TB.PRE_IN_WHS_DATE BETWEEN #{startDate} AND #{endDate}
				ORDER BY IWA_TB.PRE_IN_WHS_DATE DESC
			</if>
		</if>
	</select>
	
	<!-- 기간별입고현황(봉제) 바코드별 조회 -->
	<select id="inOutWhsBarcList" resultMap="InOutWhsAdmVo">
		SELECT
			(CASE WHEN ITEM_SEQ_Group=1 THEN '합계' ELSE (CASE WHEN IN_WHS_DATE_Group=1 THEN '소계' ELSE '기본' END) END) GROUP_TYPE,
			ISNULL(Z.DEAL_CORP_NM,'NONE') DEAL_CORP_NM
			, ISNULL(Z.IN_WHS_DATE,'NONE') IN_WHS_DATE
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = (SELECT ITEM_MODEL FROM TB_ITEM_INFO_ADM WHERE ITEM_SEQ=Z.ITEM_SEQ) AND X.BASE_GROUP_CD = '099') ITEM_MODEL
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = (SELECT ITEM_UNIT FROM TB_ITEM_INFO_ADM WHERE ITEM_SEQ=Z.ITEM_SEQ) AND X.BASE_GROUP_CD = '036') ITEM_UNIT
			, (SELECT ITEM_CD FROM TB_ITEM_INFO_ADM WHERE ITEM_SEQ=Z.ITEM_SEQ) ITEM_CD
			, (SELECT ITEM_NM FROM TB_ITEM_INFO_ADM WHERE ITEM_SEQ=Z.ITEM_SEQ) ITEM_NM
			, (
				CASE WHEN (SELECT ITEM_GUBUN FROM TB_ITEM_INFO_ADM WHERE ITEM_SEQ=Z.ITEM_SEQ) IN ('003','004')
				THEN (SELECT IMPORT_COST FROM TB_ITEM_INFO_ADM WHERE ITEM_SEQ=Z.ITEM_SEQ)
				ELSE (SELECT EXPORT_COST FROM TB_ITEM_INFO_ADM WHERE ITEM_SEQ=Z.ITEM_SEQ) END
			) EXPORT_COST
			, Z.BARCODE_NO
			, Z.IN_WHS_QTY
		FROM (
			SELECT 
				ITEM_SEQ,BARCODE_NO,DEAL_CORP_NM,IN_WHS_DATE,SUM(IN_WHS_QTY)IN_WHS_QTY,ITEM_SEQ_Group,DEAL_CORP_CD_Group,IN_WHS_DATE_Group,BARCODE_NO_Group
			FROM
			(

			<if test="groupTypeByT != null">
					<if test="groupTypeByT eq 'N'.toString()">
			SELECT
				(CASE WHEN GROUPING(IIA_TB.ITEM_SEQ)=1 THEN 'C' ELSE 'A' END) IN_TYPE,
				(SELECT Z.DEAL_CORP_NM FROM TB_DEAL_CORP_ADM Z WHERE Z.DEAL_CORP_CD = POA_TB.DEAL_CORP_CD) DEAL_CORP_NM
				, IWA_TB.IN_WHS_DATE
				, IIA_TB.ITEM_SEQ
				, IWA_TB.BARCODE_NO
				, SUM(ISNULL(IWA_TB.IN_WHS_QTY, 0)) IN_WHS_QTY
				, GROUPING(DEAL_CORP_CD) DEAL_CORP_CD_Group
				, GROUPING(IWA_TB.IN_WHS_DATE) IN_WHS_DATE_Group
				, GROUPING(IIA_TB.ITEM_SEQ) ITEM_SEQ_Group
				, GROUPING(IWA_TB.BARCODE_NO) BARCODE_NO_Group
			FROM TB_IN_OUT_WHS_ADM IWA_TB
			LEFT OUTER JOIN TB_ITEM_INSPECT_MASTER_ADM IMA_TB
			ON IWA_TB.IN_SLIP_NO = IMA_TB.IN_SLIP_NO
			LEFT OUTER JOIN TB_PURCHASE_ORDER_ADM POA_TB
			ON IWA_TB.PO_NO = POA_TB.PO_NO
			LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA_TB
			ON IWA_TB.ITEM_SEQ = IIA_TB.ITEM_SEQ
			WHERE 1=1
			<if test="mainGubun != null and !mainGubun.equals('')">
			AND IIA_TB.MAIN_GUBUN = #{mainGubun}
			</if>
			
			<if test="startDate != null and !startDate.equals('')">
			AND IWA_TB.IN_WHS_DATE BETWEEN #{startDate} AND #{endDate}
			</if>
			<if test="approvalYn != null and !approvalYn.equals('')">
				<if test="approvalYn == '001'">
					AND IMA_TB.APPROVAL_YN = '001'
				</if>
				<if test="approvalYn == '002'">
					AND (IMA_TB.APPROVAL_YN IS NULL OR IMA_TB.APPROVAL_YN = '' OR IMA_TB.APPROVAL_YN = '002')
				</if>
			</if>
			<if test="itemCd != null and !itemCd.equals('')">
			AND IIA_TB.ITEM_CD = #{itemCd}
			</if>
			
			<if test="dealCorpCd != null and !dealCorpCd.equals('')">
			AND POA_TB.DEAL_CORP_CD=#{dealCorpCd}
			</if>
			
			<if test="dealCorpCdList.length>0">
				AND POA_TB.DEAL_CORP_CD IN
				<foreach collection="dealCorpCdList" item="arr" open="(" separator="," close=")">
					#{arr}
				</foreach>
			</if>
			
			GROUP BY ROLLUP(IIA_TB.ITEM_SEQ,DEAL_CORP_CD,IN_WHS_DATE,BARCODE_NO)
			HAVING 1=1
			AND GROUPING(DEAL_CORP_CD) = 0
			AND GROUPING(IWA_TB.IN_WHS_DATE) = 0
			AND GROUPING(IIA_TB.ITEM_SEQ) = 0
			AND GROUPING(IWA_TB.BARCODE_NO) = 0

			<!-- 품목별 소계  -->
			<if test="groupTypeByD != null">
				<if test="groupTypeByD eq 'Y'.toString()">
					OR (GROUPING(DEAL_CORP_CD) = 1
					AND GROUPING(IWA_TB.IN_WHS_DATE) = 1
					AND GROUPING(IIA_TB.ITEM_SEQ) = 0
					AND GROUPING(IWA_TB.BARCODE_NO) = 1
					)
				</if>
			</if>
			<!-- 합계  -->
			<if test="groupTypeByM != null">
				<if test="groupTypeByM eq 'Y'.toString()">
					OR (GROUPING(DEAL_CORP_CD) = 1
					AND GROUPING(IWA_TB.IN_WHS_DATE) = 1
					AND GROUPING(IIA_TB.ITEM_SEQ) = 1
					AND GROUPING(IWA_TB.BARCODE_NO) = 1
					)
				</if>
			</if>	
			
			UNION ALL
				</if>
			</if>
		
			SELECT 
				(CASE WHEN GROUPING(IIA.ITEM_SEQ)=1 THEN 'C' ELSE 'B' END) IN_TYPE,
				 (SELECT Z.DEAL_CORP_NM FROM TB_DEAL_CORP_ADM Z WHERE Z.DEAL_CORP_CD = URA.ITEM_CUS) DEAL_CORP_NM,
				 URA.UNFIT_FAULTY_DATE IN_WHS_DATE,
				 IIA.ITEM_SEQ,
				 URA.UNFIT_LOT BARCODE_NO,
				 SUM(URA.UNFIT_FAULTY_CNT)*-1 IN_WHS_QTY,
				 GROUPING(URA.ITEM_CUS) DEAL_CORP_CD_Group,
				 GROUPING(URA.UNFIT_FAULTY_DATE) IN_WHS_DATE_Group,
				 GROUPING(IIA.ITEM_SEQ) ITEM_SEQ_Group,
				 GROUPING(URA.UNFIT_LOT) BARCODE_NO_Group
			FROM (
					SELECT UNFIT_GUBUN,ITEM_SEQ,ITEM_CUS,UNFIT_LOT,UNFIT_PROC,UNFIT_FAULTY_DATE,UNFIT_FAULTY_CHARGR,UNFIT_PAIR_CNT,UNFIT_FAULTY_CNT,UNFIT_OTHER_CNT,UNFIT_DESC
					FROM TB_UNFIT_RESULT_ADM 
					GROUP BY UNFIT_GUBUN,ITEM_SEQ,ITEM_CUS,UNFIT_LOT,UNFIT_PROC,UNFIT_FAULTY_DATE,UNFIT_FAULTY_CHARGR,UNFIT_PAIR_CNT,UNFIT_FAULTY_CNT,UNFIT_OTHER_CNT,UNFIT_DESC
				) URA
			LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA
			ON URA.ITEM_SEQ=IIA.ITEM_SEQ
			WHERE 1=1
			AND URA.UNFIT_GUBUN IN ('001','004') 
			AND URA.UNFIT_PROC = '004'
			<if test="mainGubun != null and !mainGubun.equals('')">
			AND IIA.MAIN_GUBUN = #{mainGubun}
			</if>
			<if test="startDate != null and !startDate.equals('')">
			AND URA.UNFIT_FAULTY_DATE BETWEEN #{startDate} AND #{endDate}
			</if>
			<if test="itemCd != null and !itemCd.equals('')">
			AND IIA.ITEM_CD = #{itemCd}
			</if>
			<if test="dealCorpCd != null and !dealCorpCd.equals('')">
			AND URA.ITEM_CUS=#{dealCorpCd}
			</if>
			
			<if test="dealCorpCdList.length>0">
				AND URA.ITEM_CUS IN
				<foreach collection="dealCorpCdList" item="arr" open="(" separator="," close=")">
					#{arr}
				</foreach>
			</if>
			
			GROUP BY ROLLUP(IIA.ITEM_SEQ,URA.ITEM_CUS,URA.UNFIT_FAULTY_DATE,URA.UNFIT_LOT)
			HAVING 1=1
			AND GROUPING(URA.ITEM_CUS) = 0
			AND GROUPING(URA.UNFIT_FAULTY_DATE) = 0
			AND GROUPING(IIA.ITEM_SEQ) = 0
			AND GROUPING(URA.UNFIT_LOT) = 0

			<!-- 품목별 소계  -->
			<if test="groupTypeByD != null">
				<if test="groupTypeByD eq 'Y'.toString()">
					OR (GROUPING(URA.ITEM_CUS) = 1
					AND GROUPING(URA.UNFIT_FAULTY_DATE) = 1
					AND GROUPING(IIA.ITEM_SEQ) = 0
					AND GROUPING(URA.UNFIT_LOT) = 1
					)
				</if>
			</if>
			<!-- 합계  -->
			<if test="groupTypeByM != null">
				<if test="groupTypeByM eq 'Y'.toString()">
					OR (GROUPING(URA.ITEM_CUS) = 1
					AND GROUPING(URA.UNFIT_FAULTY_DATE) = 1
					AND GROUPING(IIA.ITEM_SEQ) = 1
					AND GROUPING(URA.UNFIT_LOT) = 1
					)
				</if>
			</if>	
			) T
			GROUP BY DEAL_CORP_NM,IN_WHS_DATE,ITEM_SEQ,BARCODE_NO, DEAL_CORP_CD_Group,IN_WHS_DATE_Group,ITEM_SEQ_Group,BARCODE_NO_Group
		) Z
		WHERE  1=1
		<if test="groupTypeByD eq 'Y'.toString() or groupTypeByM eq 'Y'.toString() ">
		ORDER BY (SELECT ITEM_CD FROM TB_ITEM_INFO_ADM WHERE ITEM_SEQ=Z.ITEM_SEQ) DESC,IN_WHS_DATE ASC
		</if>
		<if test="groupTypeByD eq 'N'.toString() and groupTypeByM eq 'N'.toString() and dealCorpCdList.length==0">
		ORDER BY Z.IN_WHS_DATE ASC
		</if>
		<if test="groupTypeByD eq 'N'.toString() and groupTypeByM eq 'N'.toString() and dealCorpCdList.length>0">
		ORDER BY DEAL_CORP_NM ASC,Z.IN_WHS_DATE ASC
		</if>
	</select>
	
	<!-- 기간별입고현황(봉제) 일자별 조회 -->
	<select id="inOutWhsDateList" resultMap="InOutWhsAdmVo">
		SELECT
			(CASE WHEN ITEM_SEQ_Group=1 THEN '합계' ELSE (CASE WHEN IN_WHS_DATE_Group=1 THEN '소계' ELSE '기본' END) END) GROUP_TYPE,
			ISNULL((SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM WHERE DEAL_CORP_CD=Z.DEAL_CORP_CD),'NONE') DEAL_CORP_NM
			, ISNULL(Z.IN_WHS_DATE,'NONE') IN_WHS_DATE
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = (SELECT ITEM_MODEL FROM TB_ITEM_INFO_ADM WHERE ITEM_SEQ=Z.ITEM_SEQ) AND X.BASE_GROUP_CD = '099') ITEM_MODEL
			, Z.ITEM_SEQ
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = (SELECT ITEM_UNIT FROM TB_ITEM_INFO_ADM WHERE ITEM_SEQ=Z.ITEM_SEQ) AND X.BASE_GROUP_CD = '036') ITEM_UNIT
			, (SELECT ITEM_CD FROM TB_ITEM_INFO_ADM WHERE ITEM_SEQ=Z.ITEM_SEQ) ITEM_CD
			, (SELECT ITEM_NM FROM TB_ITEM_INFO_ADM WHERE ITEM_SEQ=Z.ITEM_SEQ) ITEM_NM
			, Z.IN_WHS_QTY
			, COST_TB.EXPORT_COST
			, ( Z.IN_WHS_QTY * COST_TB.EXPORT_COST ) SUPPLY_QTY
			, ( ( Z.IN_WHS_QTY * COST_TB.EXPORT_COST ) * 0.1 ) SURTAX_QTY
			, ( ( Z.IN_WHS_QTY * COST_TB.EXPORT_COST ) + ( ( Z.IN_WHS_QTY * COST_TB.EXPORT_COST ) * 0.1 ) ) TOTAL_QTY
		FROM (
			SELECT 
				ITEM_SEQ,DEAL_CORP_CD,IN_TYPE,IN_WHS_DATE,SUM(IN_WHS_QTY) IN_WHS_QTY, 
				GROUPING(T.ITEM_SEQ) ITEM_SEQ_Group,
				GROUPING(DEAL_CORP_CD) DEAL_CORP_CD_Group,
				GROUPING(IN_TYPE) IN_TYPE_Group,
				GROUPING(IN_WHS_DATE) IN_WHS_DATE_Group
			FROM
			(
				<if test="groupTypeByT != null">
					<if test="groupTypeByT eq 'N'.toString()">
					
					SELECT
						'A' IN_TYPE,
						IIA_TB.ITEM_SEQ
						, POA_TB.DEAL_CORP_CD
						, (SELECT Z.DEAL_CORP_NM FROM TB_DEAL_CORP_ADM Z WHERE Z.DEAL_CORP_CD = POA_TB.DEAL_CORP_CD) DEAL_CORP_NM
						, IWA_TB.IN_WHS_DATE
						, ISNULL(IWA_TB.IN_WHS_QTY, 0) IN_WHS_QTY
					FROM TB_IN_OUT_WHS_ADM IWA_TB
					LEFT OUTER JOIN TB_PURCHASE_ORDER_ADM POA_TB
					ON IWA_TB.PO_NO = POA_TB.PO_NO
					LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA_TB
					ON IWA_TB.ITEM_SEQ = IIA_TB.ITEM_SEQ
					WHERE 1=1
					<if test="mainGubun != null and !mainGubun.equals('')">
					AND IIA_TB.MAIN_GUBUN = #{mainGubun}
					</if>
					<if test="startDate != null and !startDate.equals('')">
						AND IWA_TB.IN_WHS_DATE BETWEEN #{startDate} AND #{endDate}
					</if>
					<if test="itemCd != null and !itemCd.equals('')">
					AND IIA_TB.ITEM_CD = #{itemCd}
					</if>
					
					<if test="dealCorpCd != null and !dealCorpCd.equals('')">
					AND POA_TB.DEAL_CORP_CD=#{dealCorpCd}
					</if>
					
					<if test="dealCorpCdList.length>0">
						AND POA_TB.DEAL_CORP_CD IN
						<foreach collection="dealCorpCdList" item="arr" open="(" separator="," close=")">
							#{arr}
						</foreach>
					</if>
					
					UNION ALL
					</if>
				</if>
		
				
				SELECT 
					'B' IN_TYPE,
					IIA.ITEM_SEQ,
					URA.ITEM_CUS DEAL_CORP_CD,
					 (SELECT Z.DEAL_CORP_NM FROM TB_DEAL_CORP_ADM Z WHERE Z.DEAL_CORP_CD = URA.ITEM_CUS) DEAL_CORP_NM,
					 URA.UNFIT_FAULTY_DATE IN_WHS_DATE,
					URA.UNFIT_FAULTY_CNT*-1 IN_WHS_QTY
				FROM (
					SELECT UNFIT_GUBUN,ITEM_SEQ,ITEM_CUS,UNFIT_LOT,UNFIT_PROC,UNFIT_FAULTY_DATE,UNFIT_FAULTY_CHARGR,UNFIT_PAIR_CNT,UNFIT_FAULTY_CNT,UNFIT_OTHER_CNT,UNFIT_DESC
					FROM TB_UNFIT_RESULT_ADM 
					GROUP BY UNFIT_GUBUN,ITEM_SEQ,ITEM_CUS,UNFIT_LOT,UNFIT_PROC,UNFIT_FAULTY_DATE,UNFIT_FAULTY_CHARGR,UNFIT_PAIR_CNT,UNFIT_FAULTY_CNT,UNFIT_OTHER_CNT,UNFIT_DESC
				) URA
				LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA
				ON URA.ITEM_SEQ=IIA.ITEM_SEQ
				WHERE 1=1
				AND URA.UNFIT_GUBUN IN ('001','004') 
				AND URA.UNFIT_PROC = '004'
				<if test="mainGubun != null and !mainGubun.equals('')">
				AND IIA.MAIN_GUBUN = #{mainGubun}
				</if>
				<if test="startDate != null and !startDate.equals('')">
					AND URA.UNFIT_FAULTY_DATE BETWEEN #{startDate} AND #{endDate}
				</if>
				<if test="itemCd != null and !itemCd.equals('')">
				AND IIA.ITEM_CD = #{itemCd}
				</if>
				
				<if test="dealCorpCd != null and !dealCorpCd.equals('')">
				AND URA.ITEM_CUS=#{dealCorpCd}
				</if>
				
				<if test="dealCorpCdList.length>0">
					AND URA.ITEM_CUS IN
					<foreach collection="dealCorpCdList" item="arr" open="(" separator="," close=")">
						#{arr}
					</foreach>
				</if>
		
			) T
			GROUP BY ROLLUP(T.ITEM_SEQ,T.DEAL_CORP_CD,IN_TYPE,T.IN_WHS_DATE)
			HAVING 1=1
			
			AND GROUPING(T.ITEM_SEQ)=0
			AND GROUPING(DEAL_CORP_CD)=0
			AND GROUPING(IN_TYPE)=0 
			AND GROUPING(IN_WHS_DATE)=0 

			<!-- 품목별 소계  -->
			<if test="groupTypeByD != null">
				<if test="groupTypeByD eq 'Y'.toString()">
				
				OR (GROUPING(T.ITEM_SEQ)=0
				AND GROUPING(DEAL_CORP_CD)=1 
				AND GROUPING(IN_TYPE)=1 
				AND GROUPING(IN_WHS_DATE)=1
				)		
				</if>
			</if>
			<!-- 합계  -->
			<if test="groupTypeByM != null">
				<if test="groupTypeByM eq 'Y'.toString()">		

				OR (GROUPING(T.ITEM_SEQ)=1
				AND GROUPING(DEAL_CORP_CD)=1 
				AND GROUPING(IN_TYPE)=1
				AND GROUPING(IN_WHS_DATE)=1
				)
				</if>
			</if>	
		)Z	LEFT OUTER JOIN (
			SELECT
				ITEM_SEQ
				, (
					CASE WHEN ITEM_GUBUN IN ('003','004')
					THEN (
						CASE WHEN ITEM_GUBUN = '003' AND PROD_GUBUN IN ('003', '005')
						THEN ISNULL((SELECT TOP(1) X.DEAL_COST FROM TB_ITEM_PRCSS_ADM X WHERE X.ITEM_SEQ = IIA_TB.ITEM_SEQ AND X.OUT_GUBUN = '002'), 0)
						ELSE IMPORT_COST END
					) ELSE EXPORT_COST END
				) EXPORT_COST
			FROM TB_ITEM_INFO_ADM IIA_TB
		) COST_TB
		ON Z.ITEM_SEQ = COST_TB.ITEM_SEQ
		
		WHERE  1=1
		
		<if test="groupTypeByD eq 'Y'.toString() or groupTypeByM eq 'Y'.toString() ">
		ORDER BY (SELECT ITEM_CD FROM TB_ITEM_INFO_ADM WHERE ITEM_SEQ=Z.ITEM_SEQ) DESC,IN_WHS_DATE ASC
		</if>
		<if test="groupTypeByD eq 'N'.toString() and groupTypeByM eq 'N'.toString() and dealCorpCdList.length==0">
		ORDER BY IN_WHS_DATE ASC,DEAL_CORP_NM ASC
		</if>
		<if test="groupTypeByD eq 'N'.toString() and groupTypeByM eq 'N'.toString() and dealCorpCdList.length>0">
		ORDER BY DEAL_CORP_NM ASC,IN_WHS_DATE ASC
		</if>
	</select>
	
	
	<!-- 기간별입고현황(봉제) 월/품목별 조회 -->
	<select id="inOutWhsItemList" resultMap="InOutWhsAdmVo">
		SELECT
			(CASE WHEN ITEM_SEQ_Group=1 THEN '합계' ELSE (CASE WHEN IN_WHS_DATE_Group=1 THEN '소계' ELSE '기본' END) END) GROUP_TYPE,
			ISNULL(Z.DEAL_CORP_NM,'NONE') DEAL_CORP_NM
			, ISNULL(Z.IN_WHS_DATE,'NONE') IN_WHS_DATE
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = (SELECT ITEM_MODEL FROM TB_ITEM_INFO_ADM WHERE ITEM_SEQ=Z.ITEM_SEQ) AND X.BASE_GROUP_CD = '099') ITEM_MODEL
			, Z.ITEM_SEQ
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = (SELECT ITEM_UNIT FROM TB_ITEM_INFO_ADM WHERE ITEM_SEQ=Z.ITEM_SEQ) AND X.BASE_GROUP_CD = '036') ITEM_UNIT
			, (SELECT ITEM_CD FROM TB_ITEM_INFO_ADM WHERE ITEM_SEQ=Z.ITEM_SEQ) ITEM_CD
			, (SELECT ITEM_NM FROM TB_ITEM_INFO_ADM WHERE ITEM_SEQ=Z.ITEM_SEQ) ITEM_NM
			, Z.IN_WHS_QTY
			, COST_TB.EXPORT_COST
			, ( Z.IN_WHS_QTY * COST_TB.EXPORT_COST ) SUPPLY_QTY
			, ( ( Z.IN_WHS_QTY * COST_TB.EXPORT_COST ) * 0.1 ) SURTAX_QTY
			, ( ( Z.IN_WHS_QTY * COST_TB.EXPORT_COST ) + ( ( Z.IN_WHS_QTY * COST_TB.EXPORT_COST ) * 0.1 ) ) TOTAL_QTY
		FROM (
		
			SELECT 
				ITEM_SEQ,DEAL_CORP_NM,IN_WHS_DATE,SUM(IN_WHS_QTY) IN_WHS_QTY,ITEM_SEQ_Group,DEAL_CORP_CD_Group,IN_WHS_DATE_Group
			FROM
			(
				<if test="groupTypeByT != null">
					<if test="groupTypeByT eq 'N'.toString()">
				SELECT
					(CASE WHEN GROUPING(IIA_TB.ITEM_SEQ)=1 THEN 'C' ELSE 'A' END) IN_TYPE,
					IIA_TB.ITEM_SEQ
					, (SELECT Z.DEAL_CORP_NM FROM TB_DEAL_CORP_ADM Z WHERE Z.DEAL_CORP_CD = POA_TB.DEAL_CORP_CD) DEAL_CORP_NM
					, LEFT(IWA_TB.IN_WHS_DATE, 6) IN_WHS_DATE
					, SUM(ISNULL(IWA_TB.IN_WHS_QTY, 0)) IN_WHS_QTY
					, GROUPING(IIA_TB.ITEM_SEQ) ITEM_SEQ_Group
					, GROUPING(DEAL_CORP_CD) DEAL_CORP_CD_Group
					, GROUPING(LEFT(IWA_TB.IN_WHS_DATE, 6)) IN_WHS_DATE_Group
				
				FROM TB_IN_OUT_WHS_ADM IWA_TB
				LEFT OUTER JOIN TB_PURCHASE_ORDER_ADM POA_TB
				ON IWA_TB.PO_NO = POA_TB.PO_NO
				LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA_TB
				ON IWA_TB.ITEM_SEQ = IIA_TB.ITEM_SEQ
				WHERE 1=1
				<if test="mainGubun != null and !mainGubun.equals('')">
				AND IIA_TB.MAIN_GUBUN = #{mainGubun}
				</if>
				<if test="startDate != null and !startDate.equals('')">
				AND LEFT(IWA_TB.IN_WHS_DATE, 6) BETWEEN #{startDate} AND #{endDate}
				</if>
				<if test="itemCd != null and !itemCd.equals('')">
				AND IIA_TB.ITEM_CD = #{itemCd}
				</if>
				
				<if test="dealCorpCd != null and !dealCorpCd.equals('')">
				AND POA_TB.DEAL_CORP_CD=#{dealCorpCd}
				</if>
				
				<if test="dealCorpCdList.length>0">
					AND POA_TB.DEAL_CORP_CD IN
					<foreach collection="dealCorpCdList" item="arr" open="(" separator="," close=")">
						#{arr}
					</foreach>
				</if>
			
				GROUP BY ROLLUP(IIA_TB.ITEM_SEQ,POA_TB.DEAL_CORP_CD, LEFT(IWA_TB.IN_WHS_DATE, 6))
				HAVING 1=1
				AND GROUPING(IIA_TB.ITEM_SEQ)=0
				AND GROUPING(DEAL_CORP_CD)=0 
				AND GROUPING(LEFT(IWA_TB.IN_WHS_DATE, 6))=0 
	
				<!-- 품목별 소계  -->
				<if test="groupTypeByD != null">
					<if test="groupTypeByD eq 'Y'.toString()">
						OR (GROUPING(IIA_TB.ITEM_SEQ)=0
						AND GROUPING(DEAL_CORP_CD)=1 
						AND GROUPING(LEFT(IWA_TB.IN_WHS_DATE, 6))=1
						)
					</if>
				</if>
				<!-- 합계  -->
				<if test="groupTypeByM != null">
					<if test="groupTypeByM eq 'Y'.toString()">
						OR (GROUPING(IIA_TB.ITEM_SEQ)=1
						AND GROUPING(DEAL_CORP_CD)=1 
						AND GROUPING(LEFT(IWA_TB.IN_WHS_DATE, 6))=1
						)
					</if>
				</if>	
				
				UNION ALL

					</if>
				</if>
				SELECT 
					(CASE WHEN GROUPING(IIA.ITEM_SEQ)=1 THEN 'C' ELSE 'B' END) IN_TYPE,
					 IIA.ITEM_SEQ,
					 (SELECT Z.DEAL_CORP_NM FROM TB_DEAL_CORP_ADM Z WHERE Z.DEAL_CORP_CD = URA.ITEM_CUS) DEAL_CORP_NM,
					 LEFT(URA.UNFIT_FAULTY_DATE, 6) IN_WHS_DATE,
					 SUM(URA.UNFIT_FAULTY_CNT)*-1 IN_WHS_QTY,
					 GROUPING(IIA.ITEM_SEQ) ITEM_SEQ_Group,
					 GROUPING(URA.ITEM_CUS) DEAL_CORP_CD_Group,
					 GROUPING(LEFT(URA.UNFIT_FAULTY_DATE, 6)) IN_WHS_DATE_Group
				FROM (
					SELECT UNFIT_GUBUN,ITEM_SEQ,ITEM_CUS,UNFIT_LOT,UNFIT_PROC,UNFIT_FAULTY_DATE,UNFIT_FAULTY_CHARGR,UNFIT_PAIR_CNT,UNFIT_FAULTY_CNT,UNFIT_OTHER_CNT,UNFIT_DESC
					FROM TB_UNFIT_RESULT_ADM 
					GROUP BY UNFIT_GUBUN,ITEM_SEQ,ITEM_CUS,UNFIT_LOT,UNFIT_PROC,UNFIT_FAULTY_DATE,UNFIT_FAULTY_CHARGR,UNFIT_PAIR_CNT,UNFIT_FAULTY_CNT,UNFIT_OTHER_CNT,UNFIT_DESC
				) URA
				LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA
				ON URA.ITEM_SEQ=IIA.ITEM_SEQ
				WHERE 1=1
				AND URA.UNFIT_GUBUN IN ('001','004') 
				AND URA.UNFIT_PROC = '004'
				<if test="mainGubun != null and !mainGubun.equals('')">
				AND IIA.MAIN_GUBUN = #{mainGubun}
				</if>
				<if test="startDate != null and !startDate.equals('')">
				AND LEFT(URA.UNFIT_FAULTY_DATE, 6) BETWEEN #{startDate} AND #{endDate}
				</if>
				<if test="itemCd != null and !itemCd.equals('')">
				AND IIA.ITEM_CD = #{itemCd}
				</if>
				<if test="dealCorpCd != null and !dealCorpCd.equals('')">
				AND URA.ITEM_CUS=#{dealCorpCd}
				</if>
				<if test="dealCorpCdList.length>0">
					AND URA.ITEM_CUS IN
					<foreach collection="dealCorpCdList" item="arr" open="(" separator="," close=")">
						#{arr}
					</foreach>
				</if>
				GROUP BY ROLLUP(IIA.ITEM_SEQ,URA.ITEM_CUS,LEFT(URA.UNFIT_FAULTY_DATE, 6))
				HAVING 1=1
			
				AND GROUPING(IIA.ITEM_SEQ)=0
				AND GROUPING(URA.ITEM_CUS)=0 
				AND GROUPING(LEFT(URA.UNFIT_FAULTY_DATE, 6))=0 

				<!-- 품목별 소계  -->
				<if test="groupTypeByD != null">
					<if test="groupTypeByD eq 'Y'.toString()">
					OR (GROUPING(IIA.ITEM_SEQ)=0
					AND GROUPING(URA.ITEM_CUS)=1 
					AND GROUPING(LEFT(URA.UNFIT_FAULTY_DATE, 6))=1
					)
				</if>
				</if>
				<!-- 합계  -->
				<if test="groupTypeByM != null">
					<if test="groupTypeByM eq 'Y'.toString()">
			
					OR (GROUPING(IIA.ITEM_SEQ)=1
					AND GROUPING(URA.ITEM_CUS)=1 
					AND GROUPING(LEFT(URA.UNFIT_FAULTY_DATE, 6))=1
					)
					</if>
				</if>	
			) T
			GROUP BY DEAL_CORP_NM,IN_WHS_DATE,ITEM_SEQ,DEAL_CORP_CD_Group,IN_WHS_DATE_Group,ITEM_SEQ_Group
		) Z
		LEFT OUTER JOIN (
			SELECT
				ITEM_SEQ
				, (
					CASE WHEN ITEM_GUBUN IN ('003','004')
					THEN (
						CASE WHEN ITEM_GUBUN = '003' AND PROD_GUBUN IN ('003', '005')
						THEN ISNULL((SELECT TOP(1) X.DEAL_COST FROM TB_ITEM_PRCSS_ADM X WHERE X.ITEM_SEQ = IIA_TB.ITEM_SEQ AND X.OUT_GUBUN = '002'), 0)
						ELSE IMPORT_COST END
					) ELSE EXPORT_COST END
				) EXPORT_COST
			FROM TB_ITEM_INFO_ADM IIA_TB
		) COST_TB
		ON Z.ITEM_SEQ = COST_TB.ITEM_SEQ
		
		WHERE  1=1
		
		<if test="groupTypeByD eq 'Y'.toString() or groupTypeByM eq 'Y'.toString()">
		ORDER BY (SELECT ITEM_CD FROM TB_ITEM_INFO_ADM WHERE ITEM_SEQ=Z.ITEM_SEQ) DESC,IN_WHS_DATE ASC
		</if>
		<if test="groupTypeByD eq 'N'.toString() and groupTypeByM eq 'N'.toString() and dealCorpCdList.length==0">
		ORDER BY Z.IN_WHS_DATE ASC
		</if>
		<if test="groupTypeByD eq 'N'.toString() and groupTypeByM eq 'N'.toString() and dealCorpCdList.length>0">
		ORDER BY Z.DEAL_CORP_NM ASC,Z.IN_WHS_DATE ASC
		</if>
		
	</select>
	
	<!-- 입고등록 상세조회 -->
	<select id="inOutWhsAdmRead" resultMap="InOutWhsAdmVo">
		SELECT
			A.PO_NO
			, A.PO_SEQ
			, A.IN_SEQ
			, A.BARCODE_NO
			, A.LOT_NO
			, A.ITEM_SEQ
			, C.ITEM_CD
			, C.MAIN_GUBUN
			, C.ITEM_NM
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=C.ITEM_MODEL AND X.BASE_GROUP_CD='099') ITEM_MODEL
			, C.ITEM_GUBUN
			, C.IMPORT_YN
			, (SELECT BASE_NM  FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=C.ITEM_UNIT AND X.BASE_GROUP_CD='036' )ITEM_UNIT
			, C.ITEM_FIFO_GUBUN
			, IN_WHS_QTY
			, IN_WHS_DATE
			, INSPECT_DATE
			, A.LOCATION_NO
			, A.LOCATION_CD
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=A.LOCATION_CD AND X.BASE_GROUP_CD='073') LOCATION_NM
			, A.AREA_CD
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=A.AREA_CD AND X.BASE_GROUP_CD='067') AREA_NM
			, A.FLOOR_CD
			, A.STATUS_CD
			, REMAIN_QTY
			, PRE_IN_WHS_QTY
			, PRE_IN_WHS_DATE
			, (PRE_IN_WHS_QTY-FAULTY_QTY)-IN_WHS_QTY PAIR_CNT
			, '0' PRE_OUT_QTY
		FROM TB_IN_OUT_WHS_ADM A
		LEFT OUTER JOIN TB_ITEM_INFO_ADM C
		ON A.ITEM_SEQ=C.ITEM_SEQ
		WHERE 1=1
		AND A.BARCODE_NO = #{barcodeNo}
		GROUP BY A.PO_NO
			, A.PO_SEQ
			, A.IN_SEQ
			, A.BARCODE_NO
			, A.LOT_NO
			, A.ITEM_SEQ
			, C.ITEM_CD
			, C.MAIN_GUBUN
			, C.ITEM_NM
			, C.ITEM_MODEL
			, C.ITEM_GUBUN
			, C.ITEM_UNIT
			, C.IMPORT_YN
			, A.IN_WHS_QTY
			, A.IN_WHS_DATE
			, A.INSPECT_DATE
			, A.LOCATION_NO
			, A.LOCATION_CD
			, A.AREA_CD
			, A.FLOOR_CD
			, A.STATUS_CD
			, A.REMAIN_QTY
			, A.PRE_IN_WHS_QTY
			, A.PRE_IN_WHS_DATE
			, A.FAULTY_QTY
			, A.IN_WHS_QTY
			, C.ITEM_FIFO_GUBUN
	</select>
	
	<!-- 입고등록 바코드 상세조회 -->
	<select id="inOutWhsAdmBarcodeRead" resultMap="InOutWhsAdmVo">
		SELECT
			A.PO_NO
			, A.PO_SEQ
			, A.IN_SEQ
			, A.BARCODE_NO
			, A.LOT_NO
			, A.PART_CD
			, A.PART_REV
			, (SELECT PART_NM FROM TB_ITEM_PART_ADM X WHERE X.PART_CD=A.PART_CD AND X.PART_REV=A.PART_REV) PART_NM
			, (SELECT PART_SPEC FROM TB_ITEM_PART_ADM X WHERE X.PART_CD=A.PART_CD AND X.PART_REV=A.PART_REV) PART_SPEC
			, (SELECT PART_GUBUN FROM TB_ITEM_PART_ADM X WHERE X.PART_CD=A.PART_CD AND X.PART_REV=A.PART_REV) PART_GUBUN
			, (SELECT INSPECT_YN FROM TB_ITEM_PART_ADM X WHERE X.PART_CD=A.PART_CD AND X.PART_REV=A.PART_REV) INSPECT_YN
			, (SELECT BASE_NM 
			   FROM TB_COMMON_CODE_ADM X 
			   WHERE X.BASE_CD=(SELECT PART_UNIT 
			   					FROM TB_ITEM_PART_ADM X 
			   					WHERE X.PART_CD=A.PART_CD 
			   					AND X.PART_REV=A.PART_REV) 
			   AND X.BASE_GROUP_CD='036' )PART_UNIT
			, IN_WHS_QTY
			, IN_WHS_DATE
			, INSPECT_DATE
			, A.LOCATION_NO
			, A.LOCATION_CD
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=A.LOCATION_CD AND X.BASE_GROUP_CD='073') LOCATION_NM
			, A.AREA_CD
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=A.AREA_CD AND X.BASE_GROUP_CD='067') AREA_NM
			, A.FLOOR_CD
			, A.STATUS_CD
			, REMAIN_QTY
			, PRE_IN_WHS_QTY
			, PRE_IN_WHS_DATE
			, (PRE_IN_WHS_QTY-FAULTY_QTY)-IN_WHS_QTY PAIR_CNT
			, SUM(B.PRE_OUT_QTY)PRE_OUT_QTY_TOTAL
		FROM TB_IN_OUT_WHS_ADM A
		LEFT OUTER JOIN TB_OUT_WHS_ADM B
		ON A.PO_NO=B.PO_NO
		AND A.PO_SEQ=B.PO_SEQ
		AND A.IN_SEQ=B.IN_SEQ
		WHERE 1=1
		AND A.BARCODE_NO = #{barcodeNo}
		GROUP BY A.PO_NO
			, A.PO_SEQ
			, A.IN_SEQ
			, A.BARCODE_NO
			, A.LOT_NO
			, A.PART_CD
			, A.PART_REV
			, IN_WHS_QTY
			, IN_WHS_DATE
			, INSPECT_DATE
			, A.LOCATION_NO
			, A.LOCATION_CD
			, A.AREA_CD
			, A.FLOOR_CD
			, A.STATUS_CD
			, REMAIN_QTY
			, PRE_IN_WHS_QTY
			, PRE_IN_WHS_DATE
			, FAULTY_QTY
	</select>
	
	<!-- 입고등록 등록 -->
	<update id="inOutWhsAdmCreate">
		UPDATE	TB_IN_OUT_WHS_ADM									 
		SET	
			<if test='!itemInspectCheck.equals("approvalY") and !itemInspectCheck.equals("approvalN") and !inOutWhsCheck.equals("true")'>
			IN_WHS_QTY = IN_WHS_QTY + #{inWhsQty},
			INSPECT_QTY = INSPECT_QTY + #{inWhsQty},
			ADJUST_QTY = ADJUST_QTY + #{inWhsQty},
			REMAIN_QTY = REMAIN_QTY + #{inWhsQty},
			STATUS_CD = 'L',
			IN_WHS_DATE = #{inWhsDate},
			LOCATION_NO = #{locationNo},
			LOCATION_CD = #{locationCd},
			AREA_CD = #{areaCd},
			FLOOR_CD = #{floorNm},
			</if>
			<if test='itemInspectCheck.equals("approvalY")'>
			IN_WHS_QTY = IN_WHS_QTY + #{inWhsQty},
			INSPECT_QTY = INSPECT_QTY + #{inWhsQty},
			ADJUST_QTY = ADJUST_QTY + #{inWhsQty},
			REMAIN_QTY = REMAIN_QTY + #{inWhsQty},
			IN_WHS_DATE = #{inWhsDate},
			STATUS_CD = 'L',
			</if>
			<if test='itemInspectCheck.equals("approvalN")'>
			IN_WHS_QTY = IN_WHS_QTY - #{inWhsQty},
			INSPECT_QTY = INSPECT_QTY - #{inWhsQty},
			ADJUST_QTY = ADJUST_QTY - #{inWhsQty},
			REMAIN_QTY = REMAIN_QTY - #{inWhsQty},
			IN_WHS_DATE = NULL,
			STATUS_CD = 'I',
			</if>
			<if test='inOutWhsCheck.equals("true")'>
			IN_WHS_DATE = #{inWhsDate},
			LOCATION_NO = #{locationNo},
			LOCATION_CD = #{locationCd},
			AREA_CD = #{areaCd},
			FLOOR_CD = #{floorNm},
			</if>
			UPD_ID = #{updId},
			UPD_DATE = getDate()
		WHERE 1=1
		AND IN_SLIP_NO = #{inSlipNo}	
		AND IN_SLIP_SEQ = #{inSlipSeq}
	</update>
	
	<!-- 입고등록 창고목록 가져오기 -->
	<select id="getLocationCd"  resultMap="InOutWhsAdmVo">
		<![CDATA[
			SELECT DISTINCT
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=LOC_CD AND X.BASE_GROUP_CD='073') LOCATION_NM
			, LOC_CD AS LOCATION_CD
			FROM TB_LOCATION_ADM
			WHERE 1=1
		]]>
		<if test="mainGubun!=null and !mainGubun.equals('')">
			AND MAIN_GUBUN = #{mainGubun}
		</if>
	</select>
	
	<!-- 입고등록 구역목록 가져오기 -->
	<select id="getAreaCd" resultMap="InOutWhsAdmVo">
		<![CDATA[
			SELECT DISTINCT 
				(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=A.AREA_CD AND X.BASE_GROUP_CD='067') AREA_NM,
				AREA_CD
			FROM TB_LOCATION_ADM A
			WHERE A.LOC_CD = #{locationCd}
		]]>
		<if test="mainGubun!=null and !mainGubun.equals('')">
			AND MAIN_GUBUN = #{mainGubun}
		</if>
	</select>
	
	<!-- 입고등록 위치목록 가져오기 -->
	<select id="getFloorCd" resultMap="InOutWhsAdmVo">
		<![CDATA[
			SELECT 
				BASE_INFO_CD AS FLOOR_CD
				, ETC2 AS FLOOR_NM
			FROM TB_BASE_INFO_ADM A
			WHERE A.BASE_INFO_TYPE = 'AR'
			AND A.ETC1 = #{locationCd}
			AND A.ETC3 = #{areaCd}
		]]>
	</select>
	
	<!-- 창고바코드 스캔(창고,구역,위치 값  가져오기) -->
	<select id="getLocInfo" resultMap="InOutWhsAdmVo">
		SELECT 
			LOC_CD LOCATION_CD
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=LOC_CD AND X.BASE_GROUP_CD='073') LOCATION_NM
			, AREA_CD
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=AREA_CD AND X.BASE_GROUP_CD='067') AREA_NM
			, FLOOR_NM
			, MAIN_GUBUN
		FROM TB_LOCATION_ADM
		WHERE 1=1
		AND LOC_NO = #{locationNo}
	</select>
	
	<!-- 입고등록 승인여부 가져오기 -->
	<select id="getApprovalCd" resultType="String">
		<![CDATA[
			SELECT APPROVAL_CD FROM TB_IN_OUT_WHS_ADM WHERE BARCODE_NO= #{barcodeNo}
		]]>
	</select>
	
	
	<!-- 입고현황 목록조회 -->
	<select id="inOutWhsStatusList" resultMap="InOutWhsAdmVo">
		SELECT 
			A.PO_NO
			, A.PO_SEQ
			, A.IN_SEQ
			, APPROVAL_CD
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=A.APPROVAL_CD AND BASE_GROUP_CD='062') APPROVAL_NM
			, A.INSPECT_DATE
			, IN_WHS_DATE
			, PRE_IN_WHS_DATE
			, LOT_NO
			, A.PART_CD
			, A.PART_REV
			, (SELECT PART_NM FROM TB_ITEM_PART_ADM X WHERE X.PART_CD=A.PART_CD AND X.PART_REV=A.PART_REV) PART_NM
			, (SELECT PART_SPEC FROM TB_ITEM_PART_ADM X WHERE X.PART_CD=A.PART_CD AND X.PART_REV=A.PART_REV) PART_SPEC
			,(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=(
					SELECT PART_UNIT FROM TB_ITEM_PART_ADM X WHERE X.PART_CD=A.PART_CD AND X.PART_REV=A.PART_REV) AND X.BASE_GROUP_CD='036')PART_UNIT
			, PART_QTY
			, PRE_IN_WHS_QTY
			, IN_WHS_QTY
			, (PRE_IN_WHS_QTY-IN_WHS_QTY)DIFF_QTY
			, BARCODE_NO
			, LOCATION_CD
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=LOCATION_CD AND X.BASE_GROUP_CD='073') LOCATION_NM
			, AREA_CD
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=AREA_CD AND X.BASE_GROUP_CD='067') AREA_NM
			, FLOOR_CD
		    , FAULTY_QTY FAULTY_CNT
			, PRE_IN_WHS_QTY-FAULTY_QTY PAIR_CNT
			, (SELECT INSPECT_YN FROM TB_ITEM_PART_ADM X WHERE X.PART_CD=A.PART_CD AND X.PART_REV=A.PART_REV) INSPECT_YN
		FROM TB_IN_OUT_WHS_ADM A
		WHERE 1=1
		<if test="approvalCd!=null and !approvalCd.equals('')">
		AND APPROVAL_CD = #{approvalCd}
		</if>
		<if test="startDate!=null and !startDate.equals('')">
			<if test="searchOption == '001'">
				AND  IN_WHS_DATE BETWEEN #{startDate} AND #{endDate}
				ORDER BY A.IN_WHS_DATE DESC
			</if>
			<if test="searchOption == '002'">
				AND  PRE_IN_WHS_DATE BETWEEN #{startDate} AND #{endDate}
				ORDER BY A.PRE_IN_WHS_DATE DESC
			</if>
			<if test="searchOption == '003'">
				AND  A.INSPECT_DATE BETWEEN #{startDate} AND #{endDate}
				ORDER BY A.INSPECT_DATE DESC
			</if>
			<if test="searchOption == ''">
				ORDER BY A.PRE_IN_WHS_DATE DESC
			</if>
		</if>
		
	</select>
	
	<!-- 발주대비미입고현황 목록조회 -->
	<select id="inOutWhsStatusList2" resultMap="InOutWhsAdmVo">
		<![CDATA[
			SELECT 
				A.PO_NO
				, PO_SEQ
				, IN_SEQ
				, PART_CD
				, PART_REV
				, (SELECT PART_NM FROM TB_ITEM_PART_ADM X WHERE X.PART_CD=A.PART_CD AND X.PART_REV=A.PART_REV) PART_NM
				, (SELECT PART_SPEC FROM TB_ITEM_PART_ADM X WHERE X.PART_CD=A.PART_CD AND X.PART_REV=A.PART_REV) PART_SPEC
				,(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=(
						SELECT PART_UNIT FROM TB_ITEM_PART_ADM X WHERE X.PART_CD=A.PART_CD AND X.PART_REV=A.PART_REV) AND X.BASE_GROUP_CD='036')PART_UNIT
				, PART_QTY
				, PRE_IN_WHS_QTY
				, IN_WHS_QTY
				, (PART_QTY-IN_WHS_QTY) DIFF_QTY
				, B.DEAL_CORP_CD
				, (SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM X WHERE X.DEAL_CORP_CD=B.DEAL_CORP_CD)DEAL_CORP_NM
				, B.PO_DATE
				, (SELECT DLV_DATE FROM TB_PURCHASE_ORDER_DTL X WHERE X.PO_NO=A.PO_NO AND X.PO_SEQ=A.PO_SEQ)DLV_DATE
				, B.RECEIPT_GUBUN
				, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=B.RECEIPT_GUBUN AND X.BASE_GROUP_CD='051')RECEIPT_GUBUN_NM
				, B.PO_DESC
			FROM TB_IN_OUT_WHS_ADM A , TB_PURCHASE_ORDER_ADM B
			WHERE A.PO_NO=B.PO_NO
			AND A.STATUS_CD IN ('I','A')
		]]>
		<if test="startDate!=null and !startDate.equals('')">
			<if test="searchOption == '001' or searchOption == null">
				AND B.PO_DATE BETWEEN #{startDate} AND #{endDate}
			</if>
			<if test="searchOption == '002'">
				AND (SELECT DLV_DATE FROM TB_PURCHASE_ORDER_DTL X WHERE X.PO_NO=A.PO_NO AND X.PO_SEQ=A.PO_SEQ) BETWEEN #{startDate} AND #{endDate}
			</if>
		</if>
		
	</select>
	
	
	<!-- 재고현황 목록조회 -->
	<select id="partInventoryDtlList" resultMap="InOutWhsAdmVo">
		<![CDATA[
			SELECT 
				IN_WHS_DATE
				, REMAIN_QTY
				, A.LOT_NO
				, A.PART_CD
				, A.PART_REV
				, (SELECT PART_NM FROM TB_ITEM_PART_ADM X WHERE X.PART_CD=A.PART_CD AND X.PART_REV=A.PART_REV) PART_NM
				, (SELECT PART_SPEC FROM TB_ITEM_PART_ADM X WHERE X.PART_CD=A.PART_CD AND X.PART_REV=A.PART_REV) PART_SPEC
				, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=(
						SELECT PART_UNIT FROM TB_ITEM_PART_ADM X WHERE X.PART_CD=A.PART_CD AND X.PART_REV=A.PART_REV) AND X.BASE_GROUP_CD='036')PART_UNIT
				, INSPECT_QTY
				, A.BARCODE_NO
				, LOCATION_CD
				, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=LOCATION_CD AND X.BASE_GROUP_CD='073') LOCATION_NM
				, AREA_CD
				, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=AREA_CD AND X.BASE_GROUP_CD='067') AREA_NM
				, FLOOR_CD
			FROM TB_IN_OUT_WHS_ADM A
			WHERE 
			A.PART_CD=#{partCd}
			AND A.PART_REV=#{partRev}
			AND A.REMAIN_QTY!=0
			AND IN_WHS_DATE LIKE #{tmMon}+'%'
			AND A.STATUS_CD IN ('L')
		]]>
	</select>
	
	
	<!-- 부품별 자재단가 가져오기 -->
	<select id="getPartUnitCost" resultType="Integer">
		SELECT ISNULL((SELECT ISNULL(A.PART_UNIT_COST,0) PART_UNIT_COST
			FROM TB_PURCHASE_ORDER_DTL A, TB_IN_OUT_WHS_ADM B
			WHERE A.PO_NO = B.PO_NO
			AND A.PO_SEQ=B.PO_SEQ
			AND BARCODE_NO= #{barcodeNo}),0) 
	</select>
	
		
	<!-- 수주상세별 입고현황 목록 -->
	<select id="inMonitoringList" resultMap="InOutWhsAdmVo">
		SELECT 
				A.CONT_DTL_NO,
				B.PART_CD,
				B.PART_REV,
				C.PART_NM,
				C.PART_SPEC,
				(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=C.PART_UNIT AND X.BASE_GROUP_CD='036') PART_UNIT,
				D.BARCODE_NO,
				D.PRE_IN_WHS_QTY,
				D.IN_WHS_QTY,
				D.REMAIN_QTY,
				D.PRE_IN_WHS_DATE,
				D.INSPECT_DATE,
				D.IN_WHS_DATE,
				D.STATUS_CD,
				D.LOCATION_CD,
				(SELECT BASE_INFO_NM+' / '+ETC2 FROM TB_BASE_INFO_ADM X WHERE X.BASE_INFO_TYPE='AR' AND X.ETC4=D.LOCATION_CD) LOCATION_NM
		FROM TB_BIZ_ORDER_DTL A, TB_PURCHASE_ORDER_DTL B LEFT OUTER JOIN TB_ITEM_PART_ADM C
		ON B.PART_CD=C.PART_CD
		AND B.PART_REV=C.PART_REV
		, TB_IN_OUT_WHS_ADM D
		WHERE A.CONT_DTL_NO=B.CONT_DTL_NO
		AND B.PO_NO=D.PO_NO
		AND B.PO_SEQ=D.PO_SEQ
		AND A.CONT_DTL_NO=#{contDtlNo}
	</select>
	
	<!--개별입고등록 목록조회-->
	<select id="individualAdmList" resultMap="InOutWhsAdmVo">
		SELECT PO_NO,
			PO_SEQ,
			IN_SEQ,
			SPPLY_CORP_CD,
			(SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM X WHERE X.DEAL_CORP_CD=SPPLY_CORP_CD) SPPLY_CORP_NM,
			A.PART_CD,
			A.PART_REV,
			B.PART_NM,
			B.PART_SPEC,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=PART_UNIT AND X.BASE_GROUP_CD='036') PART_UNIT,
			A.PAY_YN,
			PRE_IN_WHS_QTY,
			LOT_NO,
			BARCODE_NO,
			IN_WHS_DESC,
			A.INSPECT_YN,
			A.PRE_IN_WHS_DATE,
			A.LOCATION_NO,
	  		A.LOCATION_CD,
	   		A.AREA_CD,
	   		A.FLOOR_CD
		FROM TB_IN_OUT_WHS_ADM A
		LEFT OUTER JOIN TB_ITEM_PART_ADM B
		ON A.PART_CD=B.PART_CD
		AND A.PART_REV=B.PART_REV
		WHERE SUBSTRING(PO_NO,1,1) = 'I'
		<if test="startDate!=null and !startDate.equals('')">
			AND A.PRE_IN_WHS_DATE BETWEEN #{startDate} AND #{endDate}
		</if>
	</select>
	
	<!-- 개별입고등록 발주번호 생성(가상 발주번호) -->
	<select id="getPoNo" parameterType="String" resultType="String">
		SELECT ISNULL(RIGHT('000' + CAST(MAX(RIGHT(PO_NO,3))+1 AS NVARCHAR),3), '001') 
		FROM TB_IN_OUT_WHS_ADM
		WHERE SUBSTRING(PO_NO,2,6) = #{today} 
		AND SUBSTRING(PO_NO,1,1) = 'I' 
	</select>
	
	<!-- PDA 품목 검색 -->
	<select id="pdaItemList" resultMap="InOutWhsAdmVo">
		SELECT 
			A.BARCODE_NO
			, A.IN_WHS_QTY
			, A.IN_WHS_DATE
			, B.ITEM_CD
			, B.ITEM_NM
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=B.ITEM_MODEL AND X.BASE_GROUP_CD='099') ITEM_MODEL
			, A.LOCATION_CD
			, A.LOCATION_NO
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=A.LOCATION_CD AND X.BASE_GROUP_CD='073') LOCATION_NM
			, A.AREA_CD
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=A.LOCATION_CD AND X.BASE_GROUP_CD='067') AREA_NM
			, A.FLOOR_CD
			, A.REMAIN_QTY
		FROM TB_IN_OUT_WHS_ADM A
		LEFT JOIN TB_ITEM_INFO_ADM B
		ON A.ITEM_SEQ=B.ITEM_SEQ
		WHERE 1=1
		AND B.MAIN_GUBUN = #{mainGubun}
		AND A.LOCATION_CD = #{locationCd}
		AND A.AREA_CD = #{areaCd}
	</select>
	
	<!-- 월별 날짜 리스트 조회 -->
	<select id="dayList" resultMap="InOutWhsAdmVo">
		<![CDATA[
			SELECT
				A.DATE AS WHS_DATE,
				DATEPART(YEAR,A.DATE) YEAR,
				DATEPART(MONTH,A.DATE) MONTH,
				DATEPART(DAY,A.DATE) DAY,
				DATEPART(WEEK,A.DATE) WEEK,
				DATEPART(WEEKDAY,A.DATE) WEEKEND
			FROM (
				SELECT
					CONVERT(VARCHAR, DATEADD(D, NUMBER, #{searchMonth}+'01'), 112) AS DATE
				FROM MASTER..SPT_VALUES
				WHERE 1=1
				AND TYPE = 'P'
				AND NUMBER <= DATEDIFF(D, #{searchMonth}+'01', CONVERT(CHAR(8), DATEADD(D,-1,DATEADD(M,1,#{searchMonth}+'01')), 112))
			) A
		]]>
	</select>
	
	<!-- 월별 매입 거래처, 품목 구분 리스트 조회 -->
	<select id="monthPurchaseDealCorpMainList" resultMap="InOutWhsAdmVo">
		SELECT DISTINCT B.DEAL_CORP_CD, C.DEAL_CORP_NM, MAIN_GUBUN,
		(
			SELECT TOP 1 Y.ITEM_NM 
				FROM TB_IN_OUT_WHS_ADM X, TB_ITEM_INFO_ADM Y, TB_PURCHASE_ORDER_ADM Z
				WHERE X.IN_WHS_DATE LIKE CONCAT(#{searchMonth}, '%') 
				AND X.ITEM_SEQ = Y.ITEM_SEQ AND X.PO_NO = Z.PO_NO 
				AND Z.DEAL_CORP_CD = B.DEAL_CORP_CD AND Y.MAIN_GUBUN = D.MAIN_GUBUN
		) ITEM_NM
		FROM TB_IN_OUT_WHS_ADM A, TB_PURCHASE_ORDER_ADM B, TB_DEAL_CORP_ADM C, TB_ITEM_INFO_ADM D
		WHERE A.PO_NO = B.PO_NO
			AND B.DEAL_CORP_CD = C.DEAL_CORP_CD
			AND A.ITEM_SEQ = D.ITEM_SEQ
			AND A.IN_WHS_DATE LIKE CONCAT(#{searchMonth}, '%')
		ORDER BY DEAL_CORP_NM, MAIN_GUBUN
	</select>
	
	<!-- 월별 매입 리스트 조회 -->
	<select id="monthPurchaseList" resultMap="InOutWhsAdmVo">
		<![CDATA[
			SELECT A.WHS_DATE,
				B.DEAL_CORP_CD,
				B.DEAL_CORP_NM,
				B.MAIN_GUBUN,
				B.IN_WHS_COST
			FROM (
				SELECT
					A.DATE AS WHS_DATE
				FROM (
					SELECT
						CONVERT(VARCHAR, DATEADD(D, NUMBER, #{searchMonth} + '01'), 112) AS DATE
					FROM MASTER..SPT_VALUES
					WHERE 1=1
					AND TYPE = 'P'
					AND NUMBER <= DATEDIFF(D, #{searchMonth}+'01', CONVERT(CHAR(8), DATEADD(D,-1,DATEADD(M,1,#{searchMonth}+'01')), 112))
				) A
			) A LEFT JOIN (
				SELECT DISTINCT
					A.IN_WHS_DATE,
					A.MAIN_GUBUN,
					A.DEAL_CORP_CD,
					A.DEAL_CORP_NM,
					SUM(A.IN_WHS_COST) IN_WHS_COST
				FROM
				(
					SELECT
						A.IN_WHS_DATE,
						C.DEAL_CORP_CD,
						C.DEAL_CORP_NM,
						D.MAIN_GUBUN, 
						D.ITEM_CD,
						D.ITEM_NM,
						SUM(D.IMPORT_COST * A.IN_WHS_QTY) IN_WHS_COST
					FROM TB_IN_OUT_WHS_ADM A, TB_PURCHASE_ORDER_ADM B, TB_DEAL_CORP_ADM C, TB_ITEM_INFO_ADM D 
					WHERE A.PO_NO = B.PO_NO
					AND B.DEAL_CORP_CD = C.DEAL_CORP_CD
					AND A.ITEM_SEQ = D.ITEM_SEQ
					AND IN_WHS_DATE LIKE CONCAT(#{searchMonth}, '%')
					
					GROUP BY A.IN_WHS_DATE, C.DEAL_CORP_CD, C.DEAL_CORP_NM, D.MAIN_GUBUN, D.ITEM_CD, D.ITEM_NM
				) A
				GROUP BY A.IN_WHS_DATE, A.DEAL_CORP_CD, A.DEAL_CORP_NM, A.MAIN_GUBUN
			) B
			ON A.WHS_DATE = B.IN_WHS_DATE
		]]>
	</select>
	
	<!-- 월별 매출 거래처, 품목구분 리스트 조회 -->
	<select id="monthSalesDealCorpMainList" resultMap="InOutWhsAdmVo">
		SELECT DISTINCT B.DEAL_CORP_CD, B.DEAL_CORP_NM, C.MAIN_GUBUN,
		(
			SELECT TOP 1 Y.ITEM_NM 
				FROM TB_DELIVERY_ORDER_DTL X, TB_ITEM_INFO_ADM Y
				WHERE X.OUTPUT_DATE LIKE CONCAT(#{searchMonth}, '%') AND X.ITEM_SEQ = Y.ITEM_SEQ 
				AND X.PO_CORP_CD = B.DEAL_CORP_CD AND Y.MAIN_GUBUN = C.MAIN_GUBUN
		) ITEM_NM
		FROM TB_DELIVERY_ORDER_DTL A, TB_DEAL_CORP_ADM B, TB_ITEM_INFO_ADM C
		WHERE A.OUTPUT_DATE LIKE CONCAT(#{searchMonth}, '%')
		AND A.PO_CORP_CD = B.DEAL_CORP_CD
		AND A.ITEM_SEQ = C.ITEM_SEQ
	</select>
	
	<!-- 월별 매출 리스트 조회 -->
	<select id="monthSalesList" resultMap="InOutWhsAdmVo">
		<![CDATA[
			SELECT A.WHS_DATE,
				B.DEAL_CORP_CD,
				B.DEAL_CORP_NM,
				B.MAIN_GUBUN,
				B.OUT_WHS_COST
			FROM (
				SELECT
					A.DATE AS WHS_DATE
				FROM (
					SELECT
						CONVERT(VARCHAR, DATEADD(D, NUMBER, #{searchMonth} + '01'), 112) AS DATE
					FROM MASTER..SPT_VALUES
					WHERE 1=1
					AND TYPE = 'P'
					AND NUMBER <= DATEDIFF(D, #{searchMonth}+'01', CONVERT(CHAR(8), DATEADD(D,-1,DATEADD(M,1,#{searchMonth}+'01')), 112))
				) A
			) A LEFT JOIN (
				SELECT DISTINCT
					A.OUTPUT_DATE,
					A.MAIN_GUBUN,
					A.DEAL_CORP_CD,
					A.DEAL_CORP_NM,
					SUM(A.OUT_WHS_COST) OUT_WHS_COST
				FROM (
					SELECT
						A.OUTPUT_DATE,
						B.DEAL_CORP_CD,
						B.DEAL_CORP_NM,
						C.MAIN_GUBUN, 
						C.ITEM_CD,
						C.ITEM_NM,
						C.ITEM_SEQ,
						ISNULL(SUM(C.EXPORT_COST * A.OUTPUT_QTY), 0) OUT_WHS_COST
					FROM TB_DELIVERY_ORDER_DTL A, TB_DEAL_CORP_ADM B, TB_ITEM_INFO_ADM C
					WHERE A.PO_CORP_CD = B.DEAL_CORP_CD
					AND A.ITEM_SEQ = C.ITEM_SEQ
					AND A.OUTPUT_DATE LIKE CONCAT(#{searchMonth}, '%')
					GROUP BY A.OUTPUT_DATE, B.DEAL_CORP_CD, B.DEAL_CORP_NM, C.MAIN_GUBUN, C.ITEM_CD, C.ITEM_NM, C.ITEM_SEQ
				) A
				GROUP BY A.OUTPUT_DATE, A.DEAL_CORP_CD, A.DEAL_CORP_NM, A.MAIN_GUBUN
			) B
			ON A.WHS_DATE = B.OUTPUT_DATE
			ORDER BY A.WHS_DATE
		]]>
	</select>
	
	<select id="barcodeUsePlaceInspectList" resultMap="InOutWhsAdmVo">
		SELECT 
			CONCAT(BUP.CHANGE_DATE,'-',IIA_TB.ITEM_SEQ) IN_SLIP_NO
			, BUP.IDX IN_SLIP_SEQ
			, BUP.CHANGE_DATE IN_SLIP_DATE
		    , IIA_TB.ITEM_SEQ
			, IIA_TB.ITEM_CD
			, IIA_TB.ITEM_NM
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA_TB.ITEM_MODEL AND X.BASE_GROUP_CD = '099') ITEM_MODEL
			, '' LOT_NO
			, BUP.BARCODE_NO
			, BUP.CHANGE_DATE PRE_IN_WHS_DATE
			, BUP.CHANGE_QTY PRE_IN_WHS_QTY
			, INS_TB.PAIR_CNT
			, INS_TB.FAULTY_CNT
			, INS_TB.QA_EVAL
			, UF_TB.UNFIT_PROC
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = UF_TB.UNFIT_PROC AND X.BASE_GROUP_CD = '139') UNFIT_PROC_NM
		FROM TB_BARCODE_USE_PLACE_CHANGE_HIST_ADM BUP
		LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA_TB
		ON BUP.BONGJE_SEQ=IIA_TB.ITEM_SEQ
		LEFT OUTER JOIN TB_ITEM_INSPECT_MASTER_ADM IM_TB
		ON CONCAT(BUP.CHANGE_DATE,'-',IIA_TB.ITEM_SEQ) = IM_TB.IN_SLIP_NO
		LEFT OUTER JOIN TB_ITEM_INSPECT_ADM INS_TB
		ON IM_TB.IN_SLIP_NO=INS_TB.IN_SLIP_NO
		AND BUP.IDX=INS_TB.IN_SLIP_SEQ
		LEFT OUTER JOIN TB_ITEM_FAULTY_JDG_ADM IFJ_TB
		ON INS_TB.IN_SLIP_NO=IFJ_TB.IN_SLIP_NO
		AND INS_TB.IN_SLIP_SEQ=IFJ_TB.IN_SLIP_SEQ
		LEFT OUTER JOIN TB_UNFIT_ADM UF_TB
		ON BUP.BARCODE_NO = UF_TB.UNFIT_LOT
		AND UF_TB.UNFIT_GUBUN = '001'
		WHERE 1=1
		
		AND CHANGE_QTY > 0
		
		<if test="inSlipNo != null and !inSlipNo.equals('')">
		AND CONCAT(BUP.CHANGE_DATE,'-',IIA_TB.ITEM_SEQ) = #{inSlipNo}
		</if>
		<if test="inSlipSeq != null and !inSlipSeq.equals('')">
		AND BUP.IDX = #{inSlipSeq}
		</if>
		<if test="itemSeq != null and !itemSeq.equals('')">
		AND IIA_TB.ITEM_SEQ = #{itemSeq}
		</if>
		
		ORDER BY IN_SLIP_NO DESC
	</select>
	
	<!-- 매입 집계 목록조회 -->
	<select id="totalInWhsCostList" resultType="map">
		DECLARE @COLUMNS NVARCHAR(MAX)
		DECLARE @SQL NVARCHAR(MAX)
		DECLARE @DATE NVARCHAR(MAX)
		SET @COLUMNS = '';
		SET @DATE = #{searchMonth}

		SELECT @COLUMNS = @COLUMNS + '['+T.WHS_DATE+'],'
		FROM (
			SELECT
				A.DATE AS WHS_DATE
			FROM (
				SELECT
					CONVERT(VARCHAR, DATEADD(D, NUMBER, @DATE+'01'), 112) AS DATE
				FROM MASTER..SPT_VALUES
				WHERE 1=1
				AND TYPE = 'P'
				AND NUMBER <![CDATA[<=]]> DATEDIFF(D, @DATE+'01', CONVERT(CHAR(8), DATEADD(D,-1,DATEADD(M,1,@DATE+'01')), 112))
			) A
		)T

		SET @COLUMNS = LEFT(@COLUMNS,LEN(@COLUMNS)-1)

		SET @SQL ='
				SELECT 
					T.ITEM_NM,
					P.*
				FROM (
						SELECT DISTINCT B.DEAL_CORP_CD, C.DEAL_CORP_NM, MAIN_GUBUN,
						(
							SELECT TOP 1 Y.ITEM_NM 
								FROM TB_IN_OUT_WHS_ADM X, TB_ITEM_INFO_ADM Y, TB_PURCHASE_ORDER_ADM Z
								WHERE X.IN_WHS_DATE LIKE CONCAT('''+@DATE+''', ''%'') 
								AND X.ITEM_SEQ = Y.ITEM_SEQ AND X.PO_NO = Z.PO_NO 
								AND Z.DEAL_CORP_CD = B.DEAL_CORP_CD AND Y.MAIN_GUBUN = D.MAIN_GUBUN
						) ITEM_NM
						FROM TB_IN_OUT_WHS_ADM A, TB_PURCHASE_ORDER_ADM B, TB_DEAL_CORP_ADM C, TB_ITEM_INFO_ADM D
						WHERE A.PO_NO = B.PO_NO
						AND B.DEAL_CORP_CD = C.DEAL_CORP_CD
						AND A.ITEM_SEQ = D.ITEM_SEQ
						AND A.IN_WHS_DATE LIKE CONCAT('''+@DATE+''', ''%'')

				)T LEFT OUTER JOIN 
					(
					SELECT 
						*
					FROM (
						SELECT 
							B.DEAL_CORP_CD,
							B.DEAL_CORP_NM,
							A.WHS_DATE,
							B.MAIN_GUBUN,
							B.IN_WHS_COST
						FROM (
							SELECT
								A.DATE AS WHS_DATE
							FROM (
								SELECT
									CONVERT(VARCHAR, DATEADD(D, NUMBER, '''+@DATE+''' + ''01''), 112) AS DATE
								FROM MASTER..SPT_VALUES
								WHERE 1=1
								AND TYPE = ''P''
								AND NUMBER <![CDATA[<=]]> DATEDIFF(D, '''+@DATE+'''+''01'', CONVERT(CHAR(8), DATEADD(D,-1,DATEADD(M,1,'''+@DATE+'''+''01'')), 112))
							) A
						) A LEFT JOIN (
							SELECT DISTINCT
								A.IN_WHS_DATE,
								A.MAIN_GUBUN,
								A.DEAL_CORP_CD,
								A.DEAL_CORP_NM,
								SUM(A.IN_WHS_COST) IN_WHS_COST
							FROM
							(
								SELECT
									A.IN_WHS_DATE,
									C.DEAL_CORP_CD,
									C.DEAL_CORP_NM,
									D.MAIN_GUBUN, 
									D.ITEM_CD,
									D.ITEM_NM,
									ROUND(SUM(D.IMPORT_COST * A.IN_WHS_QTY)/1000,0) IN_WHS_COST
								FROM TB_IN_OUT_WHS_ADM A, TB_PURCHASE_ORDER_ADM B, TB_DEAL_CORP_ADM C, TB_ITEM_INFO_ADM D 
								WHERE A.PO_NO = B.PO_NO
								AND B.DEAL_CORP_CD = C.DEAL_CORP_CD
								AND A.ITEM_SEQ = D.ITEM_SEQ
								AND IN_WHS_DATE LIKE CONCAT('''+@DATE+''', ''%'')
								
								GROUP BY A.IN_WHS_DATE, C.DEAL_CORP_CD, C.DEAL_CORP_NM, D.MAIN_GUBUN, D.ITEM_CD, D.ITEM_NM
							) A
							GROUP BY A.IN_WHS_DATE, A.DEAL_CORP_CD, A.DEAL_CORP_NM, A.MAIN_GUBUN
						) B
						ON A.WHS_DATE = B.IN_WHS_DATE
			
					) AS RESULT
				PIVOT (
					SUM(IN_WHS_COST) FOR WHS_DATE IN ('+@COLUMNS+')
				) AS PIVOT_RESULT
			)P
			ON T.DEAL_CORP_CD=P.DEAL_CORP_CD
			AND T.MAIN_GUBUN=P.MAIN_GUBUN
			ORDER BY DEAL_CORP_NM, MAIN_GUBUN
		'
		EXEC(@SQL)
	</select>
	
    <!-- 매출 집계 목록조회 -->
	<select id="totalOutWhsCostList" resultType="map">
		DECLARE @COLUMNS NVARCHAR(MAX)
		DECLARE @SQL NVARCHAR(MAX)
		DECLARE @DATE NVARCHAR(MAX)
		
		SET @COLUMNS = '';
		SET @DATE = #{searchMonth}
		
		SELECT @COLUMNS = @COLUMNS + '['+T.WHS_DATE+'],'
		FROM (
			SELECT
				A.DATE AS WHS_DATE
			FROM (
				SELECT
					CONVERT(VARCHAR, DATEADD(D, NUMBER, @DATE+'01'), 112) AS DATE
				FROM MASTER..SPT_VALUES
				WHERE 1=1
				AND TYPE = 'P'
				AND NUMBER <![CDATA[<=]]> DATEDIFF(D, @DATE+'01', CONVERT(CHAR(8), DATEADD(D,-1,DATEADD(M,1,@DATE+'01')), 112))
			) A
		)T
		
		SET @COLUMNS = LEFT(@COLUMNS,LEN(@COLUMNS)-1)
		
		SET @SQL ='
		SELECT 
			T.ITEM_NM,
			P.*
		FROM (
			SELECT DISTINCT B.DEAL_CORP_CD, B.DEAL_CORP_NM, C.MAIN_GUBUN,
				(
					SELECT TOP 1 Y.ITEM_NM 
						FROM TB_DELIVERY_ORDER_DTL X, TB_ITEM_INFO_ADM Y
						WHERE X.OUTPUT_DATE LIKE CONCAT('''+@DATE+''', ''%'') AND X.ITEM_SEQ = Y.ITEM_SEQ 
						AND X.PO_CORP_CD = B.DEAL_CORP_CD AND Y.MAIN_GUBUN = C.MAIN_GUBUN
				) ITEM_NM
				FROM TB_DELIVERY_ORDER_DTL A, TB_DEAL_CORP_ADM B, TB_ITEM_INFO_ADM C
				WHERE A.OUTPUT_DATE LIKE CONCAT('''+@DATE+''', ''%'')
				AND A.PO_CORP_CD = B.DEAL_CORP_CD
				AND A.ITEM_SEQ = C.ITEM_SEQ
				AND (C.SUPPLY_TYPE IS NULL OR C.SUPPLY_TYPE!=''003'')
		)T LEFT OUTER JOIN 
			(
			SELECT 
				*
			FROM (
				SELECT A.WHS_DATE,
						B.DEAL_CORP_CD,
						B.DEAL_CORP_NM,
						B.MAIN_GUBUN,
						B.OUT_WHS_COST
					FROM (
						SELECT
							A.DATE AS WHS_DATE
						FROM (
							SELECT
								CONVERT(VARCHAR, DATEADD(D, NUMBER, '''+@DATE+''' + ''01''), 112) AS DATE
							FROM MASTER..SPT_VALUES
							WHERE 1=1
							AND TYPE = ''P''
							AND NUMBER <![CDATA[<=]]> DATEDIFF(D, '''+@DATE+'''+''01'', CONVERT(CHAR(8), DATEADD(D,-1,DATEADD(M,1,'''+@DATE+'''+''01'')), 112))
						) A
					) A LEFT JOIN (
						SELECT DISTINCT
							A.OUTPUT_DATE,
							A.MAIN_GUBUN,
							A.DEAL_CORP_CD,
							A.DEAL_CORP_NM,
							SUM(A.OUT_WHS_COST) OUT_WHS_COST
						FROM (
							SELECT
								A.OUTPUT_DATE,
								B.DEAL_CORP_CD,
								B.DEAL_CORP_NM,
								C.MAIN_GUBUN, 
								C.ITEM_CD,
								C.ITEM_NM,
								C.ITEM_SEQ,
								ROUND(SUM(C.EXPORT_COST * A.TARGET_QTY)/1000,0) OUT_WHS_COST
							FROM TB_DELIVERY_ORDER_DTL A, TB_DEAL_CORP_ADM B, TB_ITEM_INFO_ADM C
							WHERE A.PO_CORP_CD = B.DEAL_CORP_CD
							AND A.ITEM_SEQ = C.ITEM_SEQ
							AND (C.SUPPLY_TYPE IS NULL OR C.SUPPLY_TYPE!=''003'')
							AND A.OUTPUT_DATE LIKE CONCAT('''+@DATE+''', ''%'')
							GROUP BY A.OUTPUT_DATE, B.DEAL_CORP_CD, B.DEAL_CORP_NM, C.MAIN_GUBUN, C.ITEM_CD, C.ITEM_NM, C.ITEM_SEQ
						) A
						GROUP BY A.OUTPUT_DATE, A.DEAL_CORP_CD, A.DEAL_CORP_NM, A.MAIN_GUBUN
					) B
					ON A.WHS_DATE = B.OUTPUT_DATE
		
				) AS RESULT
			PIVOT (
				SUM(OUT_WHS_COST) FOR WHS_DATE IN ('+@COLUMNS+')
			) AS PIVOT_RESULT
		)P
		ON T.DEAL_CORP_CD=P.DEAL_CORP_CD
		AND T.MAIN_GUBUN=P.MAIN_GUBUN
		ORDER BY DEAL_CORP_NM, MAIN_GUBUN
		'
		
		EXEC(@SQL)
	</select>
	
	
	<!-- 매출 사출/봉제 합계 목록조회 -->
	<select id="totalOutWhsMainCostList" resultMap="InOutWhsAdmVo">
		SELECT 
			A.MAIN_GUBUN,
			SUM(A.OUT_WHS_COST) OUT_WHS_COST
		FROM (
			SELECT
				A.OUTPUT_DATE,
				B.DEAL_CORP_CD,
				B.DEAL_CORP_NM,
				C.MAIN_GUBUN, 
				C.ITEM_CD,
				C.ITEM_NM,
				C.ITEM_SEQ,
				ROUND(SUM(C.EXPORT_COST * A.TARGET_QTY)/1000,0) OUT_WHS_COST
			FROM TB_DELIVERY_ORDER_DTL A, TB_DEAL_CORP_ADM B, TB_ITEM_INFO_ADM C
			WHERE A.PO_CORP_CD = B.DEAL_CORP_CD
			AND A.ITEM_SEQ = C.ITEM_SEQ
			AND (C.SUPPLY_TYPE IS NULL OR C.SUPPLY_TYPE!='003')
			AND A.OUTPUT_DATE LIKE CONCAT(#{searchMonth}, '%')
			GROUP BY A.OUTPUT_DATE, B.DEAL_CORP_CD, B.DEAL_CORP_NM, C.MAIN_GUBUN, C.ITEM_CD, C.ITEM_NM, C.ITEM_SEQ
		) A
		GROUP BY A.MAIN_GUBUN
	</select>
	
	
	<!-- 매출 거래처별 합계 목록조회 -->
	<select id="totalOutWhsDealCorpCostList" resultMap="InOutWhsAdmVo">
		SELECT 
			A.MAIN_GUBUN,
			A.DEAL_CORP_CD,
			A.DEAL_CORP_NM,
			SUM(A.OUT_WHS_COST) OUT_WHS_COST
		FROM (
			SELECT
				A.OUTPUT_DATE,
				B.DEAL_CORP_CD,
				B.DEAL_CORP_NM,
				C.MAIN_GUBUN, 
				C.ITEM_CD,
				C.ITEM_NM,
				C.ITEM_SEQ,
				ROUND(SUM(C.EXPORT_COST * A.TARGET_QTY)/1000,0) OUT_WHS_COST
			FROM TB_DELIVERY_ORDER_DTL A, TB_DEAL_CORP_ADM B, TB_ITEM_INFO_ADM C
			WHERE A.PO_CORP_CD = B.DEAL_CORP_CD
			AND A.ITEM_SEQ = C.ITEM_SEQ
			AND (C.SUPPLY_TYPE IS NULL OR C.SUPPLY_TYPE!='003')
			AND A.OUTPUT_DATE LIKE CONCAT(#{searchMonth}, '%')
			GROUP BY A.OUTPUT_DATE, B.DEAL_CORP_CD, B.DEAL_CORP_NM, C.MAIN_GUBUN, C.ITEM_CD, C.ITEM_NM, C.ITEM_SEQ
		) A
		GROUP BY A.DEAL_CORP_CD, A.DEAL_CORP_NM, A.MAIN_GUBUN
	</select>
	
	<!-- 매출 일별 합계 목록조회 -->
	<select id="totalOutWhsDayCostList" resultMap="InOutWhsAdmVo">
		SELECT A.WHS_DATE,
			ISNULL(B.OUT_WHS_COST,0)OUT_WHS_COST
		FROM (
			SELECT
				A.DATE AS WHS_DATE
			FROM (
				SELECT
					CONVERT(VARCHAR, DATEADD(D, NUMBER, #{searchMonth}+'01'), 112) AS DATE
				FROM MASTER..SPT_VALUES
				WHERE 1=1
				AND TYPE = 'P'
				AND NUMBER <![CDATA[<=]]> DATEDIFF(D, #{searchMonth}+'01', CONVERT(CHAR(8), DATEADD(D,-1,DATEADD(M,1,#{searchMonth}+'01')), 112))
			) A
		) A LEFT JOIN (
			SELECT DISTINCT
				A.OUTPUT_DATE,
				SUM(A.OUT_WHS_COST) OUT_WHS_COST
			FROM (
				SELECT
					A.OUTPUT_DATE,
					B.DEAL_CORP_CD,
					B.DEAL_CORP_NM,
					C.MAIN_GUBUN, 
					C.ITEM_CD,
					C.ITEM_NM,
					C.ITEM_SEQ,
					ROUND(SUM(C.EXPORT_COST * A.TARGET_QTY)/1000,0) OUT_WHS_COST
				FROM TB_DELIVERY_ORDER_DTL A, TB_DEAL_CORP_ADM B, TB_ITEM_INFO_ADM C
				WHERE A.PO_CORP_CD = B.DEAL_CORP_CD
				AND A.ITEM_SEQ = C.ITEM_SEQ
				AND (C.SUPPLY_TYPE IS NULL OR C.SUPPLY_TYPE!='003')
				AND A.OUTPUT_DATE LIKE CONCAT(#{searchMonth}, '%')
				GROUP BY A.OUTPUT_DATE, B.DEAL_CORP_CD, B.DEAL_CORP_NM, C.MAIN_GUBUN, C.ITEM_CD, C.ITEM_NM, C.ITEM_SEQ
			) A
			GROUP BY A.OUTPUT_DATE
		) B
		ON A.WHS_DATE = B.OUTPUT_DATE
		ORDER BY WHS_DATE ASC
	</select>
	
	<!-- 매입 사출/봉제 합계 목록조회 -->
	<select id="totalInWhsMainCostList" resultMap="InOutWhsAdmVo">
		SELECT 
			A.MAIN_GUBUN,
			SUM(A.IN_WHS_COST) IN_WHS_COST
		FROM
		(
			SELECT
				A.IN_WHS_DATE,
				C.DEAL_CORP_CD,
				C.DEAL_CORP_NM,
				D.MAIN_GUBUN, 
				D.ITEM_CD,
				D.ITEM_NM,
				ROUND(SUM(D.IMPORT_COST * A.IN_WHS_QTY)/1000,0) IN_WHS_COST
			FROM TB_IN_OUT_WHS_ADM A, TB_PURCHASE_ORDER_ADM B, TB_DEAL_CORP_ADM C, TB_ITEM_INFO_ADM D 
			WHERE A.PO_NO = B.PO_NO
			AND B.DEAL_CORP_CD = C.DEAL_CORP_CD
			AND A.ITEM_SEQ = D.ITEM_SEQ
			AND IN_WHS_DATE LIKE CONCAT(#{searchMonth}, '%')
			GROUP BY A.IN_WHS_DATE, C.DEAL_CORP_CD, C.DEAL_CORP_NM, D.MAIN_GUBUN, D.ITEM_CD, D.ITEM_NM
		) A
		GROUP BY A.MAIN_GUBUN
	</select>
	
	
	<!-- 매입 거래처별 합계 목록조회 -->
	<select id="totalInWhsDealCorpCostList" resultMap="InOutWhsAdmVo">
		SELECT 
			A.MAIN_GUBUN,
			A.DEAL_CORP_CD,
			A.DEAL_CORP_NM,
			SUM(A.IN_WHS_COST) IN_WHS_COST
		FROM
		(
			SELECT
				A.IN_WHS_DATE,
				C.DEAL_CORP_CD,
				C.DEAL_CORP_NM,
				D.MAIN_GUBUN, 
				D.ITEM_CD,
				D.ITEM_NM,
				ROUND(SUM(D.IMPORT_COST * A.IN_WHS_QTY)/1000,0) IN_WHS_COST
			FROM TB_IN_OUT_WHS_ADM A, TB_PURCHASE_ORDER_ADM B, TB_DEAL_CORP_ADM C, TB_ITEM_INFO_ADM D 
			WHERE A.PO_NO = B.PO_NO
			AND B.DEAL_CORP_CD = C.DEAL_CORP_CD
			AND A.ITEM_SEQ = D.ITEM_SEQ
			AND IN_WHS_DATE LIKE CONCAT(#{searchMonth}, '%')
			GROUP BY A.IN_WHS_DATE, C.DEAL_CORP_CD, C.DEAL_CORP_NM, D.MAIN_GUBUN, D.ITEM_CD, D.ITEM_NM
		) A
		GROUP BY A.DEAL_CORP_CD, A.DEAL_CORP_NM, A.MAIN_GUBUN
	</select>
	
	<!-- 매입 일별 합계 목록조회 -->
	<select id="totalInWhsDayCostList" resultMap="InOutWhsAdmVo">
		SELECT 
			A.WHS_DATE,
			ISNULL(B.IN_WHS_COST,0)IN_WHS_COST
		FROM (
			SELECT
				A.DATE AS WHS_DATE
			FROM (
				SELECT
					CONVERT(VARCHAR, DATEADD(D, NUMBER, #{searchMonth} + '01'), 112) AS DATE
				FROM MASTER..SPT_VALUES
				WHERE 1=1
				AND TYPE = 'P'
				AND NUMBER <![CDATA[<=]]> DATEDIFF(D, #{searchMonth} + '01', CONVERT(CHAR(8), DATEADD(D,-1,DATEADD(M,1,#{searchMonth} + '01')), 112))
			) A
		) A LEFT JOIN (
			SELECT DISTINCT
				A.IN_WHS_DATE,
				SUM(A.IN_WHS_COST) IN_WHS_COST
			FROM
			(
				SELECT
					A.IN_WHS_DATE,
					C.DEAL_CORP_CD,
					C.DEAL_CORP_NM,
					D.MAIN_GUBUN, 
					D.ITEM_CD,
					D.ITEM_NM,
					ROUND(SUM(D.IMPORT_COST * A.IN_WHS_QTY)/1000,0) IN_WHS_COST
				FROM TB_IN_OUT_WHS_ADM A, TB_PURCHASE_ORDER_ADM B, TB_DEAL_CORP_ADM C, TB_ITEM_INFO_ADM D 
				WHERE A.PO_NO = B.PO_NO
				AND B.DEAL_CORP_CD = C.DEAL_CORP_CD
				AND A.ITEM_SEQ = D.ITEM_SEQ
				AND IN_WHS_DATE LIKE CONCAT(#{searchMonth}, '%')			
				GROUP BY A.IN_WHS_DATE, C.DEAL_CORP_CD, C.DEAL_CORP_NM, D.MAIN_GUBUN, D.ITEM_CD, D.ITEM_NM

				) A
			GROUP BY A.IN_WHS_DATE
		) B
		ON A.WHS_DATE = B.IN_WHS_DATE
		ORDER BY WHS_DATE ASC
	</select>
	
	<!-- 매입 총수량 합계 목록조회 -->
	<select id="totalInWhsTotalCostList" resultMap="InOutWhsAdmVo">
		SELECT 
			SUM(ISNULL(B.IN_WHS_COST,0)) IN_WHS_COST
		FROM (
			SELECT DISTINCT
				A.IN_WHS_DATE,
				SUM(A.IN_WHS_COST) IN_WHS_COST
			FROM
			(
				SELECT
					A.IN_WHS_DATE,
					C.DEAL_CORP_CD,
					C.DEAL_CORP_NM,
					D.MAIN_GUBUN, 
					D.ITEM_CD,
					D.ITEM_NM,
					ROUND(SUM(D.IMPORT_COST * A.IN_WHS_QTY)/1000,0) IN_WHS_COST
				FROM TB_IN_OUT_WHS_ADM A, TB_PURCHASE_ORDER_ADM B, TB_DEAL_CORP_ADM C, TB_ITEM_INFO_ADM D 
				WHERE A.PO_NO = B.PO_NO
				AND B.DEAL_CORP_CD = C.DEAL_CORP_CD
				AND A.ITEM_SEQ = D.ITEM_SEQ
				AND IN_WHS_DATE LIKE CONCAT(#{searchMonth}, '%')			
				GROUP BY A.IN_WHS_DATE, C.DEAL_CORP_CD, C.DEAL_CORP_NM, D.MAIN_GUBUN, D.ITEM_CD, D.ITEM_NM

				) A
			GROUP BY A.IN_WHS_DATE
		) B
	</select>
	
	<!-- 매출 총수량 합계 목록조회 -->
	<select id="totalOutWhsTotalCostList" resultMap="InOutWhsAdmVo">
		SELECT 
			SUM(ISNULL(B.OUT_WHS_COST,0))OUT_WHS_COST
		FROM (
			SELECT DISTINCT
				A.OUTPUT_DATE,
				SUM(A.OUT_WHS_COST) OUT_WHS_COST
			FROM (
				SELECT
					A.OUTPUT_DATE,
					B.DEAL_CORP_CD,
					B.DEAL_CORP_NM,
					C.MAIN_GUBUN, 
					C.ITEM_CD,
					C.ITEM_NM,
					C.ITEM_SEQ,
					ROUND(SUM(C.EXPORT_COST * A.TARGET_QTY)/1000,0) OUT_WHS_COST
				FROM TB_DELIVERY_ORDER_DTL A, TB_DEAL_CORP_ADM B, TB_ITEM_INFO_ADM C
				WHERE A.PO_CORP_CD = B.DEAL_CORP_CD
				AND A.ITEM_SEQ = C.ITEM_SEQ
				AND (C.SUPPLY_TYPE IS NULL OR C.SUPPLY_TYPE!='003')
				AND A.OUTPUT_DATE LIKE CONCAT(#{searchMonth}, '%')
				GROUP BY A.OUTPUT_DATE, B.DEAL_CORP_CD, B.DEAL_CORP_NM, C.MAIN_GUBUN, C.ITEM_CD, C.ITEM_NM, C.ITEM_SEQ
			) A
			GROUP BY A.OUTPUT_DATE
		)B
	</select>
	
	<!-- 경영정보관리_거래처별 월 자재 입고현황-->
	<select id="dealCorpMatrlInList" resultMap="InOutWhsAdmVo">
		SELECT 
			pivot_result.DEAL_CORP_CD,
			DCA.DEAL_CORP_NM,
			[01] IN_MON_01,
			[02] IN_MON_02,
			[03] IN_MON_03,
			[04] IN_MON_04,
			[05] IN_MON_05,
			[06] IN_MON_06,
			[07] IN_MON_07,
			[08] IN_MON_08,
			[09] IN_MON_09,
			[10] IN_MON_10,
			[11] IN_MON_11,
			[12] IN_MON_12,
			ISNULL([01],0)+ISNULL([02],0)+ISNULL([03],0)+ISNULL([04],0)+ISNULL([05],0)+ISNULL([06],0)
			+ ISNULL([07],0)+ISNULL([08],0)+ISNULL([09],0)+ISNULL([10],0)+ISNULL([11],0)+ISNULL([12],0) IN_SUM
		FROM
		(
			SELECT 
				B.DEAL_CORP_CD
				, SUBSTRING(A.IN_WHS_DATE,5,2) IN_DATE
				, SUM(A.IN_WHS_QTY) IN_QTY
			FROM TB_IN_OUT_WHS_ADM A
			LEFT OUTER JOIN TB_PURCHASE_ORDER_ADM B
			ON A.PO_NO=B.PO_NO
			WHERE 1=1
			AND SUBSTRING(IN_WHS_DATE,1,4)  = #{inMonData}
			AND B.DEAL_CORP_CD IS NOT NULL -- 거래처 조회 안되는 데이터 제외 (2023.10.23)
			GROUP BY B.DEAL_CORP_CD,SUBSTRING(A.IN_WHS_DATE,5,2)
		)AS result
		PIVOT(
			SUM(IN_QTY) FOR IN_DATE IN ([01],[02],[03],[04],[05],[06],[07],[08],[09],[10],[11],[12])
		)AS pivot_result
		
		LEFT OUTER JOIN TB_DEAL_CORP_ADM DCA
		ON pivot_result.DEAL_CORP_CD=DCA.DEAL_CORP_CD

		ORDER BY DCA.DEAL_CORP_NM
	</select>
	
	<!-- 경영정보관리 거래처별 월 매출현황 -->
	<select id="dealCorpMonthSalesList" resultMap="InOutWhsAdmVo">
	SELECT ITEM_CUS DEAL_CORP_CD,
		DCA.DEAL_CORP_NM,
		[01] IN_MON_01,
		[02] IN_MON_02,
		[03] IN_MON_03,
		[04] IN_MON_04,
		[05] IN_MON_05,
		[06] IN_MON_06,
		[07] IN_MON_07,
		[08] IN_MON_08,
		[09] IN_MON_09,
		[10] IN_MON_10,
		[11] IN_MON_11,
		[12] IN_MON_12,
		ISNULL([01],0)+ISNULL([02],0)+ISNULL([03],0)+ISNULL([04],0)+ISNULL([05],0)+ISNULL([06],0)
		+ ISNULL([07],0)+ISNULL([08],0)+ISNULL([09],0)+ISNULL([10],0)+ISNULL([11],0)+ISNULL([12],0) IN_SUM
	FROM
		(SELECT 
			A.ITEM_CUS,
			SUBSTRING(A.DATE, 5,2) SALES_MONTH,
			SUM(A.SALES - ISNULL(B.SALES, 0)) SALES
		FROM 
		(
		SELECT 
			IIA.ITEM_SEQ,
			DOD.PO_CORP_CD ITEM_CUS,
			SUBSTRING(OUTPUT_DATE, 1, 6) DATE,
			SUM(DOD.OUTPUT_QTY*IIA.EXPORT_COST) SALES
		FROM TB_DELIVERY_ORDER_DTL DOD
		LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA
		ON IIA.ITEM_SEQ = DOD.ITEM_SEQ
		WHERE OUTPUT_DATE IS NOT NULL
		GROUP BY
			IIA.ITEM_SEQ,
			DOD.PO_CORP_CD,
			SUBSTRING(DOD.OUTPUT_DATE, 1, 6)
		)A LEFT OUTER JOIN (
		SELECT 
			IIA.ITEM_SEQ ITEM_SEQ,
			IIA.ITEM_CUS ITEM_CUS,
			SUBSTRING(TTA.TO_DATE, 1, 6) DATE,
			-SUM(CONVERT(float, TTA.TO_QTY)*IIA.EXPORT_COST) SALES
		FROM TB_TAKEOFF_ADM TTA
		LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA
		ON IIA.ITEM_SEQ = TTA.ITEM_SEQ
		GROUP BY
			IIA.ITEM_SEQ,
			IIA.ITEM_CUS,
			SUBSTRING(TTA.TO_DATE, 1, 6) 
		)B 
		ON B.ITEM_SEQ = A.ITEM_SEQ 
		AND B.ITEM_CUS = A.ITEM_CUS
		AND B.DATE = A.DATE
		WHERE SUBSTRING(A.DATE,1,4) = #{outputDate}
		GROUP BY 
		A.ITEM_CUS,
		A.DATE) AS RESULT
	PIVOT (
		SUM(SALES) FOR SALES_MONTH IN ([01],[02],[03],[04],[05],[06],[07],[08],[09],[10],[11],[12])
	) AS PIVOT_RESULT
	LEFT OUTER JOIN TB_DEAL_CORP_ADM DCA
	ON PIVOT_RESULT.ITEM_CUS=DCA.DEAL_CORP_CD
	WHERE ISNULL([01],0)+ISNULL([02],0)+ISNULL([03],0)+ISNULL([04],0)+ISNULL([05],0)+ISNULL([06],0)
	+ ISNULL([07],0)+ISNULL([08],0)+ISNULL([09],0)+ISNULL([10],0)+ISNULL([11],0)+ISNULL([12],0) > 0
	AND DEAL_CORP_CD LIKE 'C%'
	ORDER BY DCA.DEAL_CORP_NM
	</select>
	
	
	
	
	
	
	
	
	
	
</mapper>