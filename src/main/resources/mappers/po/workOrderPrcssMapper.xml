<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  	
<mapper namespace="mes.mappers.po.workOrderPrcssMapper">

	<!-- 작업지시 공정 -->
	<resultMap id="WorkOrderPrcssVo" type="mes.domain.po.WorkOrderPrcssVo">
	
		<result property="menuAuth"					column="MENU_AUTH"			/>
		<result property="mainGubun"				column="MAIN_GUBUN"			/>
		<result property="workOrdNo"				column="WORK_ORD_NO"		/>
		<result property="workOrdSeq"				column="WORK_ORD_SEQ"		/>
		<result property="workGubun"				column="WORK_GUBUN"			/>
		<result property="workGubunNm"				column="WORK_GUBUN_NM"		/>
		<result property="minorPrcssCd"            column="MINOR_PRCSS_CD"		/>
		<result property="middlePrcssCd"           column="MIDDLE_PRCSS_CD"		/>
		<result property="minorPrcssNm"            column="MINOR_PRCSS_NM"		/>
		<result property="middlePrcssNm"           column="MIDDLE_PRCSS_NM"		/>
		<result property="ordLotNo"                column="ORD_LOT_NO"			/>
		<result property="barcodeNo"                column="BARCODE_NO"			/>
		<result property="equipCd"                 column="EQUIP_CD"			/>
		<result property="equipNm"                 column="EQUIP_NM"			/>
		<result property="itemCd"                  column="ITEM_CD"				/>
		<result property="itemNm"                  column="ITEM_NM"				/>
		<result property="itemModel"               column="ITEM_MODEL"		    />
		<result property="itemModelNm"             column="ITEM_MODEL_NM"		/>
		
		<result property="itemUnit"                column="ITEM_UNIT"			/>
		<result property="itemUnitNm"              column="ITEM_UNIT_NM"		/>
		
		<result property="itemRev"                 column="ITEM_REV"			/>
		<result property="itemGubun"               column="ITEM_GUBUN"			/>
		<result property="itemGubunNm"             column="ITEM_GUBUN_NM"		/>
		<result property="ordDate"                 column="ORD_DATE"			/>
		<result property="workStatus"            	column="WORK_STATUS"		/>
		<result property="workStatusNm"            	column="WORK_STATUS_NM"		/>
		<result property="workChargr"				column="WORK_CHARGR"		/>
		<result property="workChargrNm"				column="WORK_CHARGR_NM"		/>
		<result property="inspectGubun"				column="INSPECT_GUBUN"		/>
		<result property="inspectGubunNm"			column="INSPECT_GUBUN_NM"	/>
		<result property="targetQty"				column="TARGET_QTY"			/>
		<result property="outputQty"				column="OUTPUT_QTY"			/>
		<result property="fairQty"					column="FAIR_QTY"			/>
		<result property="faultyQty"				column="FAULTY_QTY"			/>
		
		<result property="totalFuzzQty"				column="TOTAL_FUZZ_QTY"		/>
		<result property="fuzzQty"					column="FUZZ_QTY"			/>
		<result property="runnerQty"				column="RUNNER_QTY"			/>
		<result property="workTime"					column="WORK_TIME"			/>
		<result property="workNonTime"				column="WORK_NON_TIME"		/>
		
		<result property="etcQty"					column="ETC_QTY"			/>
		<result property="outQty"					column="OUT_QTY"			/>
		<result property="inWhsDate"				column="IN_WHS_DATE"		/>
		<result property="outWhsDate"				column="OUT_WHS_DATE"		/>
		<result property="remainQty"				column="REMAIN_QTY"			/>
		<result property="dealCorpCd"               column="DEAL_CORP_CD"		/>
		<result property="dealCorpNm"      		   column="DEAL_CORP_NM"		/>
		<result property="workStartTime"   		   column="WORK_START_TIME"		/>
		<result property="workEndTime"             column="WORK_END_TIME"		/>
		<result property="packYn"                  column="PACK_YN"				/>
		<result property="packYnNm"                column="PACK_YN_NM"			/>
		<result property="labelPrintYn"            column="LABEL_PRINT_YN"		/>
		<result property="regId"                   column="REG_ID"				/>
		<result property="regDate"                 column="REG_DATE"			/>
		<result property="updId"                   column="UPD_ID"				/>
		<result property="updDate"                 column="UPD_DATE"			/>
		
		
		<result property="nextPrcssCd"				column="NEXT_PRCSS_CD"		/>
		<result property="prcssCd"					column="PRCSS_CD"			/>
		<result property="prcssSeq"					column="PRCSS_SEQ"					/>
		<result property="prevPrcssSeq"				column="PREV_PRCSS_SEQ"				/>
		<result property="prevMiddlePrcssCd"		column="PREV_MIDDLE_PRCSS_CD"		/>
		<result property="prevLowerPrcssCd"			column="PREV_LOWER_PRCSS_CD"		/>
		<result property="nextPrcssSeq"				column="NEXT_PRCSS_SEQ"				/>
		<result property="nextMiddlePrcssCd"		column="NEXT_MIDDLE_PRCSS_CD"		/>
		<result property="nextLowerPrcssCd"			column="NEXT_LOWER_PRCSS_CD"		/>
		
		<result property="bomCd"					column="BOM_CD"				/>
		<result property="m00001"					column="M00001"				/>
		<result property="m00002"					column="M00002"				/>
		<result property="m00003"					column="M00003"				/>
		<result property="m00004"					column="M00004"				/>
		<result property="m00005"					column="M00005"				/>
		<result property="m00006"					column="M00006"				/>
		<result property="m00007"					column="M00007"				/>
		<result property="m00008"					column="M00008"				/>
		<result property="m00009"					column="M00009"				/>
		<result property="m00010"					column="M00010"				/>
		<result property="m00011"					column="M00011"				/>
		<result property="m00012"					column="M00012"				/>
		<result property="m00013"					column="M00013"				/>
		<result property="m00014"					column="M00014"				/>
		<result property="m00015"					column="M00015"				/>
		<result property="m00016"					column="M00016"				/>
		<result property="m00017"					column="M00017"				/>
		<result property="m00018"					column="M00018"				/>
		<result property="m00019"					column="M00019"				/>
		<result property="m00020"					column="M00020"				/>
		<result property="m00021"					column="M00021"				/>
		<result property="m00022"					column="M00022"				/>
		<result property="m00023"					column="M00023"				/>
		<result property="m00024"					column="M00024"				/>
		<result property="m00025"					column="M00025"				/>
		<result property="m00026"					column="M00026"				/>
		<result property="m00027"					column="M00027"				/>
		
		<result property="inQty"					column="IN_QTY"				/>
		<result property="lotDesc"					column="LOT_DESC"			/>
		<result property="partNm"					column="PART_NM"			/>
		<result property="lotNo"					column="LOT_NO"				/>
		<result property="inCorpNm"					column="IN_CORP_NM"			/>
		<result property="partSpec"					column="PART_SPEC"			/>
		
		<result property="deviceNum"				column="DEVICE_NUM"			/>
		<result property="deviceMulti"				column="DEVICE_MULTI"		/>
		<result property="deviceCount"				column="DEVICE_COUNT"		/>
		
		<!-- 추가사항 -->
		<result property="itemSeq"					column="ITEM_SEQ"			/>
		<result property="workTime"					column="WORK_TIME"			/>
		<result property="lotTrackGubun"			column="LOT_TRACK_GUBUN"	/>
		<result property="gongjungChk"				column="GONGJUNG_CHK"			/>
		<result property="jajuChk"					column="JAJU_CHK"			/>
		
		
		
		<result property="inspectDate"			    column="INSPECT_DATE"		/>
		<result property="outDate"					column="OUT_DATE"			/>
		<result property="poCorpCd"					column="PO_CORP_CD"			/>
		<result property="poCorpNm"					column="PO_CORP_NM"			/>
		
		<result property="floorNm"					column="FLOOR_NM"			/>
		<result property="areaCdNm"					column="AREA_CD_NM"			/>
		<result property="outputInspectDate"		column="OUTPUT_INSPECT_DATE"/>
		<result property="outputDate"				column="OUTPUT_DATE"		/>		
		<result property="boxCount"			   	 	column="BOX_COUNT"			/>
		<result property="smallPackage"				column="SMALL_PACKAGE"		/>
		
		<result property="approvalCho"			    column="APPROVAL_CHO"		/>
		<result property="approvalJung"				column="APPROVAL_JUNG"		/>
		<result property="approvalJong"				column="APPROVAL_JONG"		/>
		<result property="mdInspectYn"				column="MD_INSPECT_YN"		/>
		
		<result property="itemWorkplace"			column="ITEM_WORKPLACE"		/>
		<result property="itemDesc"					column="ITEM_DESC"			/>
		<result property="leadCount"				column="LEAD_COUNT"			/>
		<result property="leadTime"					column="LEAD_TIME"			/>
		
		<result property="hourTime"					column="HOUR_TIME"			/>
		<result property="minTime"					column="MIN_TIME"			/>
		<result property="secTime"					column="SEC_TIME"			/>
		
		<result property="TotalLeadTime"			column="TOTAL_LEAD_TIME"	/>
		<result property="avgLeadTime"				column="AVG_LEAD_TIME"		/>
		<result property="itemColor"               	column="ITEM_COLOR"		    />
		<result property="faultyRate"               column="FAULTY_RATE"		/>
		<result property="workProgNo"               column="WORK_PROG_NO"		/>
		<result property="faultyCount"              column="FAULTY_COUNT"		/>
		
		<result property="f000006"					column="F000006"			/>
		<result property="f000007"					column="F000007"			/>
		<result property="f000008"					column="F000008"			/>
		<result property="f000009"					column="F000009"			/>
		<result property="f000010"					column="F000010"			/>
		<result property="f000011"					column="F000011"			/>
		<result property="f000012"					column="F000012"			/>
		<result property="f000013"					column="F000013"			/>
		<result property="f000014"					column="F000014"			/>
		<result property="f000024"					column="F000024"			/>
		<result property="f000026"					column="F000026"			/>
		<result property="f000027"					column="F000027"			/>
		
		<result property="locCd"					column="LOC_CD"				/>
		<result property="locCdNm"					column="LOC_CD_NM"			/>
		<result property="itemCus"					column="ITEM_CUS"			/>
		<result property="itemCusNm"				column="ITEM_CUS_NM"		/>
		
	</resultMap>
	
	<!-- 작업지시 공정 -->
	<resultMap id="WorkOrderMatrlVo" type="mes.domain.po.WorkOrderMatrlVo">
	
		<result property="menuAuth"					column="MENU_AUTH"				/>
		<result property="workOrdNo"				column="WORK_ORD_NO"			/>
		<result property="workOrdSeq"				column="WORK_ORD_SEQ"			/>
		<result property="minorPrcssCd"				column="MINOR_PRCSS_CD"			/>
		<result property="middlePrcssCd"			column="MIDDLE_PRCSS_CD"		/>
		<result property="minorPrcssNm"				column="MINOR_PRCSS_NM"			/>
		<result property="middlePrcssNm"			column="MIDDLE_PRCSS_NM"		/>
		<result property="itemModel"               	column="ITEM_MODEL"		    	/>
		<result property="itemModelNm"             	column="ITEM_MODEL_NM"			/>
		
		<result property="itemCel"               	column="ITEM_CEL"		    	/>
		<result property="itemHr"             		column="ITEM_HR"				/>
		<result property="matrlCel"               	column="MATRL_CEL"		    	/>
		<result property="matrlHr"             		column="MATRL_HR"				/>
		<result property="itemColor"               	column="ITEM_COLOR"		    	/>
		
		
		<result property="partCd"					column="PART_CD"				/>
		<result property="partNm"					column="PART_NM"				/>
		<result property="partUnit"					column="PART_UNIT"				/>
		<result property="partConsumpt"				column="PART_CONSUMPT"			/>
		<result property="totalConsumpt"			column="TOTAL_CONSUMPT"			/>
		<result property="barcodeNo"				column="BARCODE_NO"				/>
		<result property="regId"					column="REG_ID"					/>
		<result property="regDate"					column="REG_DATE"				/>
		<result property="updId"					column="UPD_ID"					/>
		<result property="updDate"					column="UPD_DATE"				/>
		
		<result property="itemCd"					column="ITEM_CD"				/>
		<result property="itemRev"					column="ITEM_REV"				/>
		<result property="itemNm"					column="ITEM_NM"				/>
		<result property="partRev"					column="PART_REV"				/>
		<result property="totalConsumptSum"			column="TOTAL_CONSUMPT_SUM"		/>
		<result property="prcssCd"					column="PRCSS_CD"				/>
		
		<result property="inWhsDate"				column="IN_WHS_DATE"			/>
		<result property="inWhsQty"					column="IN_WHS_QTY"				/>
		<result property="floorNm"					column="FLOOR_NM"				/>
		<result property="areaCdNm"					column="AREA_CD_NM"				/>
		<result property="locationNo"				column="LOCATION_NO"			/>
		<result property="spQty"					column="SP_QTY"					/>
		<result property="itemModel"				column="ITEM_MODEL"				/>
		<result property="itemModelNm"				column="ITEM_MODEL_NM"			/>
		<result property="inspectDate"			    column="INSPECT_DATE"			/>
		<result property="doDtlDate"			    column="DO_DTL_DATE"			/>
		<result property="outputDtlQty"			    column="OUTPUT_DTL_QTY"			/>
		<result property="ordLotNo"					column="ORD_LOT_NO"				/>
		<result property="locCd"					column="LOC_CD"					/>
		<result property="locCdNm"					column="LOC_CD_NM"				/>
		<result property="itemCus"					column="ITEM_CUS"				/>
		<result property="tmMon"					column="TM_MON"					/>	
		<result property="workDelYn"				column="WORK_DEL_YN"			/>	
		
		
		
	</resultMap>
	
	<!-- 생산실적등록 목록 조회 (사출)-->
	<select id="workOrderPrcssList" resultMap="WorkOrderPrcssVo">
		SELECT	
			A.WORK_ORD_NO,
			A.WORK_ORD_SEQ,
			A.WORK_GUBUN,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=A.WORK_GUBUN AND X.BASE_GROUP_CD='114') WORK_GUBUN_NM,
			A.ORD_LOT_NO,
			A.EQUIP_CD,
			A.ITEM_SEQ,
			A.WORK_START_TIME,
			A.WORK_END_TIME,
			A.ORD_DATE,
			A.WORK_STATUS,
			A.WORK_CHARGR,
			(SELECT USER_NM FROM TB_USER X WHERE X.USER_NUMBER=A.WORK_CHARGR) WORK_CHARGR_NM,
			A.INSPECT_GUBUN,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=A.INSPECT_GUBUN AND X.BASE_GROUP_CD='118') INSPECT_GUBUN_NM,
			A.TARGET_QTY,
			A.OUTPUT_QTY,
			A.FAIR_QTY,
			A.FAULTY_QTY,
			A.ETC_QTY,
			A.OUT_QTY,
			A.REMAIN_QTY,
			A.PACK_YN,
			A.LABEL_PRINT_YN,
			A.REG_ID,
			A.REG_DATE,
			A.UPD_ID,
			A.UPD_DATE,
			(SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM X WHERE X.DEAL_CORP_CD = B.ITEM_CUS) DEAL_CORP_NM,
			C.FLOOR_NM,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = C.AREA_CD AND X.BASE_GROUP_CD = '067') AREA_CD_NM,			
			B.BOX_COUNT,
			B.SMALL_PACKAGE,
			B.ITEM_GUBUN,
			(SELECT ISNULL((SELECT (CASE WHEN T.R_CNT=T.A_CNT THEN 'OK' ELSE 'NG' END )
					FROM(SELECT COUNT(*)R_CNT , (SELECT COUNT(*) FROM TB_INSP_ITEM_DTL WHERE INSP_CD = D.INSP_CD AND USE_YN='001') A_CNT
							FROM TB_INSP_RESULT_ADM R , TB_INSP_ITEM_DTL D
							WHERE 1=1
							AND R.INSP_CD=D.INSP_CD
							AND R.INSP_TYPE=D.INSP_TYPE
							AND R.INSP_SEQ=D.INSP_SEQ
							AND INSP_RESULT_GUBUN='002'
							AND INSP_SOURCE_NO=A.WORK_ORD_NO
							AND INSPECT_GUBUN='001'
							AND USE_YN='001'
							GROUP BY D.INSP_CD)T),'NG'))APPROVAL_CHO,
			(SELECT ISNULL((SELECT (CASE WHEN T.R_CNT=T.A_CNT THEN 'OK' ELSE 'NG' END )
					FROM(SELECT COUNT(*)R_CNT , (SELECT COUNT(*) FROM TB_INSP_ITEM_DTL WHERE INSP_CD = D.INSP_CD AND USE_YN='001') A_CNT
							FROM TB_INSP_RESULT_ADM R , TB_INSP_ITEM_DTL D
							WHERE 1=1
							AND R.INSP_CD=D.INSP_CD
							AND R.INSP_TYPE=D.INSP_TYPE
							AND R.INSP_SEQ=D.INSP_SEQ
							AND INSP_RESULT_GUBUN='002'
							AND INSP_SOURCE_NO=A.WORK_ORD_NO
							AND INSPECT_GUBUN='002'
							AND USE_YN='001'
							GROUP BY D.INSP_CD)T),'NG'))APPROVAL_JUNG,
				(SELECT ISNULL((SELECT (CASE WHEN T.R_CNT=T.A_CNT THEN 'OK' ELSE 'NG' END )
					FROM(SELECT COUNT(*)R_CNT , (SELECT COUNT(*) FROM TB_INSP_ITEM_DTL WHERE INSP_CD = D.INSP_CD AND USE_YN='001') A_CNT
							FROM TB_INSP_RESULT_ADM R , TB_INSP_ITEM_DTL D
							WHERE 1=1
							AND R.INSP_CD=D.INSP_CD
							AND R.INSP_TYPE=D.INSP_TYPE
							AND R.INSP_SEQ=D.INSP_SEQ
							AND INSP_RESULT_GUBUN='002'
							AND INSP_SOURCE_NO=A.WORK_ORD_NO
							AND INSPECT_GUBUN='003'
							AND USE_YN='001'
							GROUP BY D.INSP_CD)T),'NG'))APPROVAL_JONG,
				W.MD_INSPECT_YN
		FROM	TB_WORK_ORDER_PRCSS A
		LEFT OUTER JOIN TB_WORK_ORDER W
		ON A.WORK_ORD_NO=W.WORK_ORD_NO
		LEFT OUTER JOIN TB_ITEM_INFO_ADM B
		ON A.ITEM_SEQ=B.ITEM_SEQ
		LEFT OUTER JOIN TB_LOCATION_ADM C
		ON C.LOC_NO = B.LOC_NO
		WHERE 1=1
		AND A.WORK_ORD_NO = #{workOrdNo}
		AND B.ITEM_SEQ = #{itemSeq}
		<if test="workGubun!=null and !workGubun.equals('')">
		AND A.WORK_GUBUN = #{workGubun}
		</if>
		ORDER BY A.WORK_ORD_NO, A.WORK_STATUS, WORK_ORD_SEQ ASC
	</select>
	
	<!-- 생산실적등록 목록 조회 -->
	<select id="workOrderPrcssListByBongjea" resultMap="WorkOrderPrcssVo">
		SELECT	
			WOP.WORK_ORD_NO
			, WOP.MIDDLE_PRCSS_CD
			, WOP.MINOR_PRCSS_CD
			, WOP.WORK_ORD_SEQ
			, WOP.WORK_STATUS
			, WOP.ORD_LOT_NO
			, WOP.WORK_GUBUN
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=WOP.WORK_GUBUN AND X.BASE_GROUP_CD='114') WORK_GUBUN_NM
			, WOP.WORK_CHARGR
			, (SELECT USER_NM FROM TB_USER X WHERE X.USER_NUMBER=WOP.WORK_CHARGR) WORK_CHARGR_NM
			, WOP.OUTPUT_QTY
			, WOP.FAIR_QTY
			, WOP.FAULTY_QTY
			, WOP.WORK_START_TIME
			, WOP.WORK_END_TIME
			, WOP.INSPECT_GUBUN
			, COUNT(WOF.WORK_ORD_SEQ) FAULTY_COUNT
			, II.ITEM_SEQ
			, II.ITEM_CD
			, II.ITEM_CUS
			, (SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM X WHERE X.DEAL_CORP_CD = II.ITEM_CUS) ITEM_CUS_NM
			, II.ITEM_UNIT
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=II.ITEM_UNIT AND X.BASE_GROUP_CD='036') ITEM_UNIT_NM
			, WORK.OUTPUT_QTY
			, WORK.ORD_DATE
			, (SELECT TOP(1)INS.INSP_PASS FROM TB_INSP_RESULT_ADM INS WHERE INSP_RESULT_GUBUN = '002' AND INS.INSP_SOURCE_NO = WOP.ORD_LOT_NO) GONGJUNG_CHK
			, (SELECT TOP(1)INS.INSP_PASS FROM TB_INSP_RESULT_ADM INS WHERE INSP_RESULT_GUBUN = '004' AND INS.INSP_SOURCE_NO = WOP.ORD_LOT_NO) JAJU_CHK		
		FROM TB_WORK_ORDER_PRCSS WOP
		LEFT JOIN TB_WORK_ORDER_FAULTY_TYPE WOF
		ON WOP.MIDDLE_PRCSS_CD = WOF.MIDDLE_PRCSS_CD
		AND WOP.WORK_ORD_SEQ = WOF.WORK_ORD_SEQ
		LEFT JOIN TB_ITEM_INFO_ADM II
		ON II.ITEM_SEQ = WOP.ITEM_SEQ
		LEFT JOIN TB_WORK_ORDER WORK
		ON WORK.WORK_ORD_NO = WOP.WORK_ORD_NO
		WHERE 1=1
		<if test="middlePrcssCd != null and !middlePrcssCd.equals('')">
		AND WOP.MIDDLE_PRCSS_CD = #{middlePrcssCd}
		</if>
		<if test="minorPrcssCd != null and !minorPrcssCd.equals('')">
		AND WOP.MINOR_PRCSS_CD = #{minorPrcssCd}
		</if>
		GROUP BY 
			WOP.WORK_ORD_NO
			, WOP.MIDDLE_PRCSS_CD
			, WOP.MINOR_PRCSS_CD
			, WOP.WORK_ORD_SEQ
			, WOP.WORK_STATUS
			, WOP.ORD_LOT_NO
			, WOP.WORK_GUBUN
			, WOP.WORK_CHARGR
			, WOP.OUTPUT_QTY
			, WOP.FAIR_QTY
			, WOP.FAULTY_QTY
			, WOP.WORK_START_TIME
			, WOP.WORK_END_TIME
			, WOP.INSPECT_GUBUN
			, II.ITEM_SEQ
			, II.ITEM_CD
			, II.ITEM_CUS
			, II.ITEM_UNIT
			, WORK.OUTPUT_QTY
			, WORK.ORD_DATE
	</select>
	
	<!-- 작업지시 초/중/종물 공정검사 유무 -->
	<select id="workOrdInspectYnList" resultMap="WorkOrderPrcssVo">
		SELECT	
			A.WORK_ORD_NO,
			A.MD_INSPECT_YN,
			(SELECT ISNULL((SELECT (CASE WHEN T.R_CNT=T.A_CNT THEN 'OK' ELSE 'NG' END )
					FROM(SELECT COUNT(*)R_CNT , (SELECT COUNT(*) FROM TB_INSP_ITEM_DTL WHERE INSP_CD = D.INSP_CD AND USE_YN='001') A_CNT
							FROM TB_INSP_RESULT_ADM R , TB_INSP_ITEM_DTL D
							WHERE 1=1
							AND R.INSP_CD=D.INSP_CD
							AND R.INSP_TYPE=D.INSP_TYPE
							AND R.INSP_SEQ=D.INSP_SEQ
							AND INSP_RESULT_GUBUN='002'
							AND INSP_SOURCE_NO=A.WORK_ORD_NO
							AND INSPECT_GUBUN='001'
							AND USE_YN='001'
							GROUP BY D.INSP_CD)T),'NG'))APPROVAL_CHO,
			(SELECT ISNULL((SELECT (CASE WHEN T.R_CNT=T.A_CNT THEN 'OK' ELSE 'NG' END ) 
					FROM(SELECT COUNT(*)R_CNT , (SELECT COUNT(*) FROM TB_INSP_ITEM_DTL WHERE INSP_CD = D.INSP_CD AND USE_YN='001') A_CNT
							FROM TB_INSP_RESULT_ADM R , TB_INSP_ITEM_DTL D
							WHERE 1=1
							AND R.INSP_CD=D.INSP_CD
							AND R.INSP_TYPE=D.INSP_TYPE
							AND R.INSP_SEQ=D.INSP_SEQ
							AND INSP_RESULT_GUBUN='002'
							AND INSP_SOURCE_NO=A.WORK_ORD_NO
							AND INSPECT_GUBUN='002'
							AND USE_YN='001'
							GROUP BY D.INSP_CD)T),'NG'))APPROVAL_JUNG,
				(SELECT ISNULL((SELECT (CASE WHEN T.R_CNT=T.A_CNT THEN 'OK' ELSE 'NG' END )
					FROM(SELECT COUNT(*)R_CNT , (SELECT COUNT(*) FROM TB_INSP_ITEM_DTL WHERE INSP_CD = D.INSP_CD AND USE_YN='001') A_CNT
							FROM TB_INSP_RESULT_ADM R , TB_INSP_ITEM_DTL D
							WHERE 1=1
							AND R.INSP_CD=D.INSP_CD
							AND R.INSP_TYPE=D.INSP_TYPE
							AND R.INSP_SEQ=D.INSP_SEQ
							AND INSP_RESULT_GUBUN='002'
							AND INSP_SOURCE_NO=A.WORK_ORD_NO
							AND INSPECT_GUBUN='003'
							AND USE_YN='001'
							GROUP BY D.INSP_CD)T),'NG'))APPROVAL_JONG
		FROM	TB_WORK_ORDER A
		WHERE 1=1
		AND A.WORK_ORD_NO = #{workOrdNo}
	</select>
	
	<!-- 작지시퀀스 조회 -->
	<select id="getWorkOrdSeq" resultType="int">
		SELECT ISNULL(MAX(WORK_ORD_SEQ)+1,0) 
		FROM TB_WORK_ORDER_PRCSS 
		WHERE 1=1
		AND WORK_ORD_NO=#{workOrdNo}
	</select>
	
	<!-- 작지 바코드번호/lot번호 생성 -->
	<select id="getOrdlotNo" resultType="String">
		SELECT ISNULL(RIGHT('00' + CAST(MAX(RIGHT(ORD_LOT_NO,2))+1 AS NVARCHAR),2), '01') 
		FROM TB_WORK_ORDER_PRCSS 
		<choose>
			<when test="ordLotNo.length >= 10">
				WHERE LEFT(ORD_LOT_NO, 10) = #{ordLotNo}
			</when>
			<otherwise>
				WHERE LEFT(ORD_LOT_NO, LEN(#{ordLotNo})) = #{ordLotNo}
			</otherwise>
		</choose>
	</select>
	
	<!-- 작지 바코드번호/lot번호 생성 -->
	<select id="getOrdlotNoByBongjae" resultType="String">
		SELECT ISNULL(RIGHT('0000' + CAST(MAX(RIGHT(ORD_LOT_NO, 4))+1 AS NVARCHAR), 4), '0001') 
		FROM TB_WORK_ORDER_PRCSS
		WHERE LEFT(ORD_LOT_NO, LEN(#{ordLotNo})) = #{ordLotNo}
	</select>
	
	<!-- 작지 생성 -->
	<insert id="create" parameterType="mes.domain.po.WorkOrderPrcssVo">
		INSERT INTO TB_WORK_ORDER_PRCSS(
			WORK_ORD_NO,
			WORK_ORD_SEQ,
			MIDDLE_PRCSS_CD,
			MINOR_PRCSS_CD,
			WORK_GUBUN,
			EQUIP_CD,
			ITEM_SEQ,
			ORD_DATE,
			ORD_LOT_NO, 
			WORK_STATUS,
			WORK_CHARGR,
			WORK_START_TIME,
			WORK_END_TIME,
			TARGET_QTY,
			OUTPUT_QTY,
			FAIR_QTY,
			FAULTY_QTY,
			ETC_QTY,
			OUT_QTY,
			REMAIN_QTY,
			PACK_YN,
			LABEL_PRINT_YN,
			REG_ID,
			REG_DATE
		)VALUES(
			#{workOrdNo},
			#{workOrdSeq},
			#{middlePrcssCd},
			#{minorPrcssCd},
			#{workGubun},
			#{equipCd},
			#{itemSeq},
			#{ordDate},
			#{ordLotNo},
			#{workStatus},
			#{workChargr},
			#{workStartTime},
			#{workEndTime},
			#{targetQty},
			#{outputQty},
			#{fairQty},
			#{faultyQty},
			#{etcQty},
			#{outQty},
			#{remainQty},
			#{packYn},
			#{labelPrintYn},
			#{regId},
			GETDATE()
		)
	</insert>
	
	
	<!-- 작지 다중 생성 -->
	<insert id="createList" parameterType="java.util.List">
		INSERT INTO TB_WORK_ORDER_PRCSS(
			WORK_ORD_NO,
			WORK_ORD_SEQ,
			MIDDLE_PRCSS_CD,
			MINOR_PRCSS_CD,
			WORK_GUBUN,
			EQUIP_CD,
			ITEM_SEQ,
			ORD_DATE,
			ORD_LOT_NO, 
			WORK_STATUS,
			WORK_CHARGR,
			WORK_START_TIME,
			WORK_END_TIME,
			TARGET_QTY,
			OUTPUT_QTY,
			FAIR_QTY,
			FAULTY_QTY,
			ETC_QTY,
			OUT_QTY,
			REMAIN_QTY,
			PACK_YN,
			LABEL_PRINT_YN,
			REG_ID,
			REG_DATE
		) VALUES
		<foreach collection="list" item="item" separator=",">
		(
			#{item.workOrdNo}
			, #{item.workOrdSeq}
			, #{item.middlePrcssCd}
			, #{item.minorPrcssCd}
			, #{item.workGubun}
			, #{item.equipCd}
			, #{item.itemSeq}
			, #{item.ordDate}
			, #{item.ordLotNo}
			, #{item.workStatus}
			, #{item.workChargr}
			, #{item.workStartTime}
			, #{item.workEndTime}
			, #{item.targetQty}
			, #{item.outputQty}
			, #{item.fairQty}
			, #{item.faultyQty}
			, #{item.etcQty}
			, #{item.outQty}
			, #{item.remainQty}
			, #{item.packYn}
			, #{item.labelPrintYn}
			, #{item.regId}
			, GETDATE()
		)
		</foreach>
	</insert>
	
	<update id="update" parameterType="mes.domain.po.WorkOrderPrcssVo">
		UPDATE	TB_WORK_ORDER_PRCSS 
		<set>
			<if test="ordDate!=null and !ordDate.equals('')">
			ORD_DATE = #{ordDate},
			</if>
			<if test="ordLotNo!=null and !ordLotNo.equals('')">
			ORD_LOT_NO = #{ordLotNo},
			</if>
			<if test="inspectGubun!=null">
			INSPECT_GUBUN = #{inspectGubun},
			</if>
			<if test="outputQty!=null and !outputQty.equals('')">
			OUTPUT_QTY = #{outputQty},
			FAIR_QTY = FAIR_QTY + #{diffOutputQty},
			</if>
			<if test="workStatus!=null and !workStatus.equals('')">
			WORK_STATUS = #{workStatus},
			</if>
			<if test="workChargr!=null and !workChargr.equals('')">
			WORK_CHARGR = #{workChargr},
			</if>
			<if test="workGubun!=null and !workGubun.equals('')">
			WORK_GUBUN = #{workGubun},
			</if>
			<if test="workEndTime!=null and !workEndTime.equals('')">
			WORK_END_TIME = #{workEndTime},
			</if>
			<if test="labelPrintYn!=null and !labelPrintYn.equals('')">
			LABEL_PRINT_YN = #{labelPrintYn},
			</if>
			UPD_ID = #{updId},
			UPD_DATE = GETDATE()
		</set>
		WHERE 1=1
		AND WORK_ORD_NO = #{workOrdNo}
		AND	WORK_ORD_SEQ = #{workOrdSeq}
		<if test="middlePrcssCd!=null and !middlePrcssCd.equals('')">
		AND	MIDDLE_PRCSS_CD = #{middlePrcssCd}
		</if>
		<if test="minorPrcssCd!=null and !minorPrcssCd.equals('')">
		AND	MINOR_PRCSS_CD = #{minorPrcssCd}
		</if>
	</update>
	
	<!-- 작업지시 공정별 작지목록 조회 -->
	<select id="workOrdPrcssListDtl" resultMap="WorkOrderPrcssVo">
		SELECT
			A.WORK_ORD_NO,
			A.WORK_ORD_SEQ,
			A.MIDDLE_PRCSS_CD,      
			(SELECT B.PRCSS_NM FROM TB_PRCSS_CODE_ADM B WHERE B.PRCSS_CD = A.MIDDLE_PRCSS_CD AND B.LOWER_PRCSS_CD = A.MIDDLE_PRCSS_CD AND B.PRCSS_TYPE='001') MIDDLE_PRCSS_NM,
			A.MINOR_PRCSS_CD,
			(SELECT B.PRCSS_NM FROM TB_PRCSS_CODE_ADM B WHERE B.PRCSS_CD = A.MINOR_PRCSS_CD AND B.LOWER_PRCSS_CD = A.MINOR_PRCSS_CD AND B.PRCSS_TYPE='002') MINOR_PRCSS_NM,
			A.ORD_LOT_NO,
			A.EQUIP_CD,
			(SELECT B.EQUIP_NM FROM TB_EQUIP_CODE_ADM B WHERE B.EQUIP_CD = A.EQUIP_CD) EQUIP_NM,
			A.ITEM_SEQ,
			(SELECT B.ITEM_CD FROM TB_ITEM_INFO_ADM B WHERE B.ITEM_SEQ = A.ITEM_SEQ) ITEM_CD,
			(SELECT B.ITEM_NM FROM TB_ITEM_INFO_ADM B WHERE B.ITEM_SEQ = A.ITEM_SEQ) ITEM_NM,
			(SELECT B.ITEM_GUBUN FROM TB_ITEM_INFO_ADM B WHERE B.ITEM_SEQ = A.ITEM_SEQ) ITEM_GUBUN,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM B WHERE B.BASE_GROUP_CD='045' AND B.BASE_CD=(SELECT C.ITEM_GUBUN FROM TB_ITEM_INFO_ADM C WHERE C.ITEM_SEQ = A.ITEM_SEQ)) ITEM_GUBUN_NM,
			A.WORK_START_TIME,
			A.WORK_END_TIME,
			A.ORD_DATE,
			A.WORK_STATUS,
			A.WORK_CHARGR,
			(SELECT B.USER_NM FROM TB_USER B WHERE B.USER_NUMBER = A.WORK_CHARGR) WORK_CHARGR_NM,
			A.TARGET_QTY,
			A.OUTPUT_QTY, 
			ISNULL(A.FAIR_QTY,0) FAIR_QTY,
			A.FAULTY_QTY,
			A.ETC_QTY,
			A.OUT_QTY,
			ISNULL(A.TARGET_QTY,0)-ISNULL(A.OUTPUT_QTY,0) REMAIN_QTY,  
			A.PACK_YN
		FROM TB_WORK_ORDER_PRCSS A
		WHERE 1=1
		AND A.WORK_ORD_NO = #{workOrdNo}
		AND A.MINOR_PRCSS_CD = #{minorPrcssCd}
		AND A.MIDDLE_PRCSS_CD = #{middlePrcssCd}
	</select>
	
	<!-- 작업지시 상세조회-->
	<select id="workOrdPrcssReadDtl" resultMap="WorkOrderPrcssVo">
		SELECT
			A.WORK_ORD_NO,
			A.WORK_ORD_SEQ,
			A.ORD_LOT_NO,
			A.EQUIP_CD,
			A.ITEM_SEQ,
			(SELECT B.ITEM_NM FROM TB_ITEM_INFO_ADM B WHERE B.ITEM_SEQ = A.ITEM_SEQ) ITEM_NM,
			(SELECT B.ITEM_GUBUN FROM TB_ITEM_INFO_ADM B WHERE B.ITEM_SEQ = A.ITEM_SEQ) ITEM_GUBUN,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM B WHERE B.BASE_GROUP_CD='045' AND B.BASE_CD=(SELECT B.ITEM_GUBUN FROM TB_ITEM_INFO_ADM B WHERE B.ITEM_SEQ = A.ITEM_SEQ)) ITEM_GUBUN_NM,
			A.WORK_START_TIME,
			A.WORK_END_TIME,
			A.ORD_DATE,
			A.WORK_STATUS,
			A.WORK_CHARGR,
			(SELECT B.USER_NM FROM TB_USER B WHERE B.USER_NUMBER = A.WORK_CHARGR) WORK_CHARGR_NM,
			A.TARGET_QTY,
			A.OUTPUT_QTY,
			A.FAIR_QTY,
			A.FAULTY_QTY,
			A.ETC_QTY,
			A.OUT_QTY,
			A.REMAIN_QTY,
			A.PACK_YN
		FROM TB_WORK_ORDER_PRCSS A
		WHERE 1=1
		<if test="workOrdNo!=null and !workOrdNo.equals('')">
		AND A.WORK_ORD_NO = #{workOrdNo}
		AND A.WORK_ORD_SEQ = #{workOrdSeq}
		</if>
		<if test="ordLotNo!=null and !ordLotNo.equals('')">
		AND A.ORD_LOT_NO = #{ordLotNo}
		</if>
		
	</select>

	<!-- 작업지시 공정 순서 및 앞뒤 공정 정보 읽기 -->
	<select id="getPrcssInfo" resultMap="WorkOrderPrcssVo">
		SELECT
			X.ITEM_CD,
			X.PRCSS_SEQ,
			X.MIDDLE_PRCSS_CD,
			X.MINOR_PRCSS_CD,
			X.PREV_PRCSS_SEQ,
			X.PREV_MIDDLE_PRCSS_CD,
			X.PREV_LOWER_PRCSS_CD,
			X.NEXT_PRCSS_SEQ,
			X.NEXT_MIDDLE_PRCSS_CD,
			X.NEXT_LOWER_PRCSS_CD
		FROM (
			SELECT
				T.ITEM_CD,
				T.PRCSS_SEQ,
				T.PRCSS_CD MIDDLE_PRCSS_CD,
				T.LOWER_PRCSS_CD MINOR_PRCSS_CD,
				LAG(T.PRCSS_SEQ,1,NULL) OVER (PARTITION BY T.ITEM_CD ORDER BY T.PRCSS_SEQ ASC) PREV_PRCSS_SEQ,
				LAG(T.PRCSS_CD,1,NULL) OVER (PARTITION BY T.ITEM_CD ORDER BY T.PRCSS_SEQ ASC) PREV_MIDDLE_PRCSS_CD,
				LAG(T.LOWER_PRCSS_CD,1,NULL) OVER (PARTITION BY T.ITEM_CD ORDER BY T.PRCSS_SEQ ASC) PREV_LOWER_PRCSS_CD,
				LEAD(T.PRCSS_SEQ,1,NULL) OVER (PARTITION BY T.ITEM_CD ORDER BY T.PRCSS_SEQ ASC) NEXT_PRCSS_SEQ,
				LEAD(T.PRCSS_CD,1,NULL) OVER (PARTITION BY T.ITEM_CD ORDER BY T.PRCSS_SEQ ASC) NEXT_MIDDLE_PRCSS_CD,
				LEAD(T.LOWER_PRCSS_CD,1,NULL) OVER (PARTITION BY T.ITEM_CD ORDER BY T.PRCSS_SEQ ASC) NEXT_LOWER_PRCSS_CD
			FROM (
				SELECT
					B.ITEM_CD,
					ROW_NUMBER() OVER(ORDER BY E.PRCSS_SEQ ASC) PRCSS_SEQ,
					D.PRCSS_CD,
					D.LOWER_PRCSS_CD
				FROM TB_WORK_ORDER A, TB_ITEM_INFO_ADM B, TB_PRCSS_CODE_ADM D, TB_PRCSS_CODE_ADM E
				WHERE 1=1
				AND A.ITEM_SEQ = B.ITEM_SEQ
				AND B.ITEM_WORKPLACE=D.PRCSS_CD
				AND D.PRCSS_TYPE='001'
				AND D.PRCSS_CD!=D.LOWER_PRCSS_CD
				AND D.LOWER_PRCSS_CD=E.PRCSS_CD
				AND E.PRCSS_TYPE='002'
				AND A.WORK_ORD_NO = #{workOrdNo}
			) T
		) X
		WHERE 1=1
		AND X.MIDDLE_PRCSS_CD = #{middlePrcssCd}
		AND X.MINOR_PRCSS_CD = #{minorPrcssCd}
	</select>

	<!-- 작업지시 이전공정 출고수량 읽기 --> 
	<select id="getOutQty" resultType="int">
		<![CDATA[
			SELECT
				SUM(A.OUT_QTY)
			FROM TB_WORK_ORDER_PRCSS A
			WHERE 1=1
			AND A.WORK_ORD_NO = #{workOrdNo}
			AND A.MINOR_PRCSS_CD = #{prevLowerPrcssCd}
			AND A.MIDDLE_PRCSS_CD = #{prevMiddlePrcssCd}
		]]>
	</select>
	
	<!-- 작업지시 불량수량 수정 -->
	<update id="updateQty" parameterType="mes.domain.po.WorkOrderPrcssVo">
		UPDATE	TB_WORK_ORDER_PRCSS 
		SET	
			FAULTY_QTY = #{faultyQty},
			OUTPUT_QTY = FAIR_QTY+#{faultyQty}
		WHERE 1=1
		AND WORK_ORD_NO = #{workOrdNo}
		AND	WORK_ORD_SEQ = #{workOrdSeq}
	</update>
	
	<!-- 작업지시 불량수량 수정(봉제) -->
	<update id="updateQtybong" parameterType="mes.domain.po.WorkOrderPrcssVo">
		UPDATE	TB_WORK_ORDER_PRCSS 
		<set>
			<if test="targetQty!=null and !targetQty.equals('')">
			TARGET_QTY = #{targetQty},
			</if>
			<if test="outputQty!=null and !outputQty.equals('')">
			OUTPUT_QTY = #{outputQty},
			</if>
			<if test="fairQty!=null and !fairQty.equals('')">
			FAIR_QTY = #{fairQty},
			</if>
			<if test="faultyQty!=null and !faultyQty.equals('')">
			FAULTY_QTY = #{faultyQty},
			</if>
			<if test="etcQty!=null and !etcQty.equals('')">
			ETC_QTY = #{etcQty},
			</if>
			<if test="outQty!=null and !outQty.equals('')">
			OUT_QTY = #{outQty},
			</if>
			<if test="remainQty!=null and !remainQty.equals('')">
			REMAIN_QTY = #{remainQty}
			</if>
		</set>
		WHERE 1=1
		AND WORK_ORD_NO = #{workOrdNo}
		AND	WORK_ORD_SEQ = #{workOrdSeq}
		<if test="middlePrcssCd!=null and !middlePrcssCd.equals('')">
		AND	MIDDLE_PRCSS_CD = #{middlePrcssCd}
		</if>
		<if test="minorPrcssCd!=null and !minorPrcssCd.equals('')">
		AND	MINOR_PRCSS_CD = #{minorPrcssCd}
		</if>
	</update>
	
	<!-- 작업지시 불량수량 삭제 -->
	<update id="workOrdPrcssFaultyQtyDelete" parameterType="mes.domain.po.WorkOrderPrcssVo">
		UPDATE	TB_WORK_ORDER_PRCSS 
		SET	
			FAULTY_QTY = FAULTY_QTY - #{faultyQty},
			FAIR_QTY = FAIR_QTY + #{faultyQty}
		WHERE 1=1
		AND WORK_ORD_NO = #{workOrdNo}
		AND	WORK_ORD_SEQ = #{workOrdSeq}
	</update>
	
	<!-- 작업지시 (이전공정 출고수량) - (현재공정 투입수량의 합) -->
	<select id="getOutToTargetSum" resultType="int">
		<![CDATA[
			SELECT
				ISNULL(TA.OUT_QTY - TB.TARGET_QTY, '0')
			FROM (SELECT
						SUM(A.OUT_QTY) OUT_QTY
					FROM TB_WORK_ORDER_PRCSS A
					WHERE 1=1
					AND A.WORK_ORD_NO = #{workOrdNo}
					AND A.MINOR_PRCSS_CD = #{prevLowerPrcssCd}
					AND A.MIDDLE_PRCSS_CD = #{prevMiddlePrcssCd}) TA, (SELECT
															SUM(A.TARGET_QTY) TARGET_QTY
														FROM TB_WORK_ORDER_PRCSS A
														WHERE 1=1
														AND A.WORK_ORD_NO = #{workOrdNo}
														AND A.MINOR_PRCSS_CD = #{minorPrcssCd}
														AND A.MIDDLE_PRCSS_CD = #{middlePrcssCd}) TB
		]]>
	</select>
	
	<!-- 작업지시 다음공정 투입수량 업데이트 -->
	<update id="updateNextTargetQty" parameterType="mes.domain.po.WorkOrderPrcssVo">
		UPDATE	TB_WORK_ORDER_PRCSS 
		SET	
			TARGET_QTY = #{targetQty},
			OUTPUT_QTY = #{outputQty},
			FAIR_QTY = #{fairQty},
			FAULTY_QTY = #{faultyQty},
			ETC_QTY = #{etcQty},
			OUT_QTY = #{outQty},
			REMAIN_QTY = #{remainQty}
		WHERE 1=1
		AND WORK_ORD_NO = #{workOrdNo}
		AND	WORK_ORD_SEQ = #{workOrdSeq}
		AND	MINOR_PRCSS_CD = #{minorPrcssCd}
		AND	MIDDLE_PRCSS_CD = #{middlePrcssCd}
	</update>
	
	<!-- 작업지시 (이전공정 출고수량) - (현재공정 대기중이 아닌 작지의 투입수량의 합) -->
	<select id="getOutToTargetSumNotPD" resultType="int">
		<![CDATA[
			SELECT
				ISNULL(TA.OUT_QTY - ISNULL(TB.TARGET_QTY,'0'), '0')
			FROM (SELECT
						SUM(A.OUT_QTY) OUT_QTY
					FROM TB_WORK_ORDER_PRCSS A
					WHERE 1=1
					AND A.WORK_ORD_NO = #{workOrdNo}
					AND A.MINOR_PRCSS_CD = #{prevLowerPrcssCd}
					AND A.MIDDLE_PRCSS_CD = #{prevMiddlePrcssCd}) TA, (SELECT
															SUM(A.TARGET_QTY) TARGET_QTY
														FROM TB_WORK_ORDER_PRCSS A
														WHERE 1=1
														AND A.WORK_ORD_NO = #{workOrdNo}
														AND A.MINOR_PRCSS_CD = #{minorPrcssCd}
														AND A.MIDDLE_PRCSS_CD = #{middlePrcssCd}
														AND A.WORK_STATUS != 'PD') TB
		]]>
	</select>
	
	<!-- 작업지시 존재하는 번호인지 확인 -->
	<select id="checkWorkOrdNoExsit" resultType="int">
		SELECT
			COUNT(*)
		FROM TB_WORK_ORDER_PRCSS A
		WHERE 1=1
		AND A.WORK_ORD_NO= #{workOrdNo}
	</select>
	
	<!-- 모니터링 - 공정별실적현황 -->
	<select id="workOrdStatusList" resultMap="WorkOrderPrcssVo">
		<![CDATA[
			DECLARE @Query NVARCHAR(MAX)
			DECLARE @SQL NVARCHAR(MAX)
						
			SET @Query = ''
			SELECT @Query = @Query + '[' + B.PRCSS_CD + '],'
			FROM TB_PRCSS_BOM_ADM A, TB_PRCSS_BOM_DTL B
			WHERE 1=1
			AND A.BOM_CD = #{bomCd}
			AND A.BOM_CD = B.BOM_CD
						
			SET @Query = LEFT(@Query, LEN(@Query)-1)
			PRINT(@Query)
			SET @SQL = 'SELECT 
							*
						FROM (
							SELECT
								T.WORK_ORD_NO,
								T.ITEM_CD,
								T.MIDDLE_PRCSS_CD,
								CASE WHEN MIN(T.WORK_STATUS) = '''+'DT'+''' THEN '''+'DT'+'''
									 WHEN MIN(T.WORK_STATUS) = '''+'WC'+''' AND MAX(T.WORK_STATUS) = '''+'WC'+''' THEN '''+'WC'+'''
									 WHEN MAX(T.WORK_STATUS) != '''+'PD'+''' AND MAX(T.WORK_STATUS) != '''+'EX'+''' THEN '''+'WI'+'''
									 WHEN MAX(T.WORK_STATUS) = '''+'PD'+''' THEN '''+'PD'+'''
									 WHEN MIN(T.WORK_STATUS) = '''+'EX'+''' AND MAX(T.WORK_STATUS) = '''+'EX'+''' THEN '''+'EX'+'''
									 ELSE ''''
								END WORK_STATUS
							FROM (SELECT
										TA.WORK_ORD_NO,
										TA.ITEM_CD,
										TA.PRCSS_SEQ,
										TA.MIDDLE_PRCSS_CD,
										TA.LOWER_PRCSS_SEQ,
										TA.MINOR_PRCSS_CD,
										ISNULL(TB.WORK_STATUS,'''+'EX'+''') WORK_STATUS
									FROM (SELECT
											A.WORK_ORD_NO,
											A.ITEM_CD,
											D.PRCSS_SEQ,
											D.PRCSS_CD MIDDLE_PRCSS_CD,
											CASE WHEN D.PRCSS_CD = E.LOWER_PRCSS_CD THEN '''+'0'+''' ELSE E.PRCSS_SEQ END LOWER_PRCSS_SEQ,
											E.LOWER_PRCSS_CD MINOR_PRCSS_CD
										FROM TB_WORK_ORDER A, TB_ITEM_MOTOR_MBOM B, TB_PRCSS_BOM_ADM C, TB_PRCSS_BOM_DTL D, TB_PRCSS_CODE_ADM E
										WHERE 1=1
										AND B.BOM_CD = '''+#{bomCd}+'''
										AND A.ITEM_CD = B.ITEM_CD
										AND B.BOM_CD = C.BOM_CD
										AND C.BOM_CD = D.BOM_CD
										AND E.PRCSS_CD = D.PRCSS_CD) TA LEFT OUTER JOIN (SELECT
																							A.WORK_ORD_NO,
																							A.ITEM_CD,
																							B.MIDDLE_PRCSS_CD,
																							B.MINOR_PRCSS_CD,
																							A.WORK_ORD_QTY,
																							SUM(B.OUTPUT_QTY) OUTPUT_QTY,
																							CASE WHEN MIN(B.WORK_STATUS) = '''+'DT'+''' THEN '''+'DT'+'''
																								 WHEN SUM(B.OUTPUT_QTY) = A.WORK_ORD_QTY THEN '''+'WC'+'''
																								 WHEN MAX(B.WORK_STATUS) != '''+'PD'+''' THEN '''+'WI'+'''
																								 ELSE '''+'PD'+'''
																							END WORK_STATUS
																						FROM TB_WORK_ORDER A, TB_WORK_ORDER_PRCSS B
																						WHERE 1=1
																						AND A.WORK_ORD_NO = B.WORK_ORD_NO
																						GROUP BY
																							A.WORK_ORD_NO,
																							A.ITEM_CD,
																							B.MIDDLE_PRCSS_CD,
																							B.MINOR_PRCSS_CD,
																							A.WORK_ORD_QTY) TB
										ON 1=1
										AND TA.WORK_ORD_NO = TB.WORK_ORD_NO
										AND TA.ITEM_CD = TB.ITEM_CD
										AND TA.MIDDLE_PRCSS_CD = TB.MIDDLE_PRCSS_CD
										AND TA.MINOR_PRCSS_CD = TB.MINOR_PRCSS_CD
									WHERE 1=1
									GROUP BY
										TA.WORK_ORD_NO,
										TA.ITEM_CD,
										TA.PRCSS_SEQ,
										TA.MIDDLE_PRCSS_CD,
										TA.LOWER_PRCSS_SEQ,
										TA.MINOR_PRCSS_CD,
										TB.WORK_STATUS) T
							WHERE 1=1
							AND T.LOWER_PRCSS_SEQ != '''+'0'+'''
							GROUP BY
								T.WORK_ORD_NO,
								T.ITEM_CD,
								T.MIDDLE_PRCSS_CD
						) T2
							PIVOT(MAX(WORK_STATUS) FOR MIDDLE_PRCSS_CD IN ('+@Query+')) AS PVT'
									
			EXECUTE (@SQL)
		]]>
	</select>
	
	<!-- 모니터링 - 공정별실적현황(소공정) -->
	<select id="workOrdStatusDtlList" resultMap="WorkOrderPrcssVo">
		SELECT
			T.WORK_ORD_NO,
			T.PRCSS_SEQ,
			T.MIDDLE_PRCSS_CD,
			T.MINOR_PRCSS_CD,
			(SELECT X.PRCSS_NM FROM TB_PRCSS_CODE_ADM X WHERE X.PRCSS_CD = T.MINOR_PRCSS_CD AND X.LOWER_PRCSS_CD = T.MINOR_PRCSS_CD) MINOR_PRCSS_NM,
			T.WORK_STATUS,
			SUM(T.TARGET_QTY) TARGET_QTY,
			SUM(T.OUTPUT_QTY) OUTPUT_QTY,
			SUM(T.FAULTY_QTY) FAULTY_QTY
		FROM (SELECT
					TA.WORK_ORD_NO,
					TA.ITEM_CD,
					TA.PRCSS_SEQ,
					TA.MIDDLE_PRCSS_CD,
					TA.LOWER_PRCSS_SEQ,
					TA.MINOR_PRCSS_CD,
					TB.TARGET_QTY,
					TB.OUTPUT_QTY,
					TB.FAULTY_QTY,
					ISNULL(TB.WORK_STATUS,'EX') WORK_STATUS
				FROM (SELECT
						A.WORK_ORD_NO,
						A.ITEM_CD,
						D.PRCSS_SEQ,
						D.PRCSS_CD MIDDLE_PRCSS_CD,
						CASE WHEN D.PRCSS_CD = E.LOWER_PRCSS_CD THEN '0' ELSE E.PRCSS_SEQ END LOWER_PRCSS_SEQ,
						E.LOWER_PRCSS_CD MINOR_PRCSS_CD
					FROM TB_WORK_ORDER A, TB_ITEM_MOTOR_MBOM B, TB_PRCSS_BOM_ADM C, TB_PRCSS_BOM_DTL D, TB_PRCSS_CODE_ADM E
					WHERE 1=1
					AND A.ITEM_CD = B.ITEM_CD
					AND B.BOM_CD = C.BOM_CD
					AND C.BOM_CD = D.BOM_CD
					AND E.PRCSS_CD = D.PRCSS_CD) TA LEFT OUTER JOIN (SELECT
																		A.WORK_ORD_NO,
																		A.ITEM_CD,
																		B.MIDDLE_PRCSS_CD,
																		B.MINOR_PRCSS_CD,
																		A.WORK_ORD_QTY,
																		CASE WHEN MIN(B.WORK_STATUS) = 'DT' THEN 'DT'
																				WHEN SUM(B.OUTPUT_QTY) = A.WORK_ORD_QTY THEN 'WC'
																				WHEN MAX(B.WORK_STATUS) != 'PD' THEN 'WI'
																				ELSE 'PD'
																		END WORK_STATUS,
																		SUM(B.TARGET_QTY) TARGET_QTY,
																		SUM(B.OUTPUT_QTY) OUTPUT_QTY,
																		SUM(B.FAULTY_QTY) + SUM(B.ETC_QTY) FAULTY_QTY
																	FROM TB_WORK_ORDER A, TB_WORK_ORDER_PRCSS B
																	WHERE 1=1
																	AND A.WORK_ORD_NO = B.WORK_ORD_NO
																	GROUP BY
																		A.WORK_ORD_NO,
																		A.ITEM_CD,
																		B.MIDDLE_PRCSS_CD,
																		B.MINOR_PRCSS_CD,
																		A.WORK_ORD_QTY,
																		B.ETC_QTY) TB
					ON 1=1
					AND TA.WORK_ORD_NO = TB.WORK_ORD_NO
					AND TA.ITEM_CD = TB.ITEM_CD
					AND TA.MIDDLE_PRCSS_CD = TB.MIDDLE_PRCSS_CD
					AND TA.MINOR_PRCSS_CD = TB.MINOR_PRCSS_CD
				WHERE 1=1
				GROUP BY
					TA.WORK_ORD_NO,
					TA.ITEM_CD,
					TA.PRCSS_SEQ,
					TA.MIDDLE_PRCSS_CD,
					TA.LOWER_PRCSS_SEQ,
					TA.MINOR_PRCSS_CD,
					TB.WORK_STATUS,
					TB.TARGET_QTY,
					TB.OUTPUT_QTY,
					TB.FAULTY_QTY) T
		WHERE 1=1
		AND T.LOWER_PRCSS_SEQ != '0'
		AND T.WORK_ORD_NO = #{workOrdNo}
		AND T.MIDDLE_PRCSS_CD = #{middlePrcssCd}
		GROUP BY
			T.WORK_ORD_NO,
			T.PRCSS_SEQ,
			T.MIDDLE_PRCSS_CD,
			T.MINOR_PRCSS_CD,
			T.WORK_STATUS
		ORDER BY
			T.WORK_ORD_NO, T.PRCSS_SEQ
	</select>
	
	<update id="workOrderPrcssQtyUpdate" parameterType="mes.domain.po.WorkOrderPrcssVo">
		UPDATE	TB_WORK_ORDER_PRCSS 
		SET	
			OUTPUT_QTY = #{outputQty}
			, UPD_ID = #{updId}
			, UPD_DATE = getDate()
		WHERE 1=1
		AND WORK_ORD_NO = #{workOrdNo}
		AND	WORK_ORD_SEQ = #{workOrdSeq}
		AND	MINOR_PRCSS_CD = #{minorPrcssCd}
		AND	MIDDLE_PRCSS_CD = #{middlePrcssCd}
	</update>
	
	<!-- 설비관리 - 설비별 작지현황(일자조건) -->
	<select id="equipToWorkOrdList" resultMap="WorkOrderPrcssVo">
		SELECT
			A.WORK_ORD_NO,
			A.WORK_ORD_SEQ,
			A.ITEM_CD,
			(SELECT ITEM_NM FROM TB_ITEM_MOTOR_ADM B WHERE B.ITEM_CD = A.ITEM_CD AND B.ITEM_REV = A.ITEM_REV) ITEM_NM,
			A.ITEM_REV,
			A.WORK_START_TIME,
			A.WORK_END_TIME,
			A.ORD_DATE,
			A.WORK_STATUS,
			A.TARGET_QTY,
			A.OUTPUT_QTY,
			A.WORK_CHARGR,
			(SELECT B.USER_NM FROM TB_USER B WHERE B.USER_NUMBER = A.WORK_CHARGR) WORK_CHARGR_NM
		FROM TB_WORK_ORDER_PRCSS A
		WHERE 1=1
		AND A.EQUIP_CD = #{equipCd}
		AND A.ORD_DATE = #{ordDate}
	</select>
	
	
	<!-- 생산일보(작업지시 공정 전체) 조회 -->
	<select id="workOrderPrcssAllList" resultMap="WorkOrderPrcssVo">
		SELECT
			A.WORK_ORD_NO,
			A.WORK_ORD_SEQ,
			A.ITEM_CD,
			A.MINOR_PRCSS_CD,
			(SELECT B.PRCSS_NM FROM TB_PRCSS_CODE_ADM B WHERE B.PRCSS_CD = A.MINOR_PRCSS_CD AND B.LOWER_PRCSS_CD = A.MINOR_PRCSS_CD) MINOR_PRCSS_NM,
			A.MIDDLE_PRCSS_CD,
			(SELECT B.PRCSS_NM FROM TB_PRCSS_CODE_ADM B WHERE B.PRCSS_CD = A.MIDDLE_PRCSS_CD AND B.LOWER_PRCSS_CD = A.MIDDLE_PRCSS_CD) MIDDLE_PRCSS_NM,
			(SELECT ITEM_NM FROM TB_ITEM_MOTOR_ADM B WHERE B.ITEM_CD = A.ITEM_CD AND B.ITEM_REV = A.ITEM_REV) ITEM_NM,
			A.ITEM_REV,
			A.ORD_DATE,
			A.WORK_STATUS,
			A.TARGET_QTY,
			A.OUTPUT_QTY,
			A.WORK_CHARGR,
			(SELECT B.USER_NM FROM TB_USER B WHERE B.USER_NUMBER = A.WORK_CHARGR) WORK_CHARGR_NM,
			(SELECT B.ITEM_GUBUN FROM TB_ITEM_MOTOR_ADM B WHERE B.ITEM_CD = A.ITEM_CD AND B.ITEM_REV = A.ITEM_REV) ITEM_GUBUN,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM B WHERE B.BASE_GROUP_CD='045' AND B.BASE_CD=(SELECT C.ITEM_GUBUN FROM TB_ITEM_MOTOR_ADM C WHERE C.ITEM_CD = A.ITEM_CD AND B.ITEM_REV = A.ITEM_REV)) ITEM_GUBUN_NM,
			(CASE WORK_STATUS WHEN 'PD' THEN '대기' WHEN 'WI' THEN '시작' WHEN 'WC' THEN '종료' WHEN 'DT' THEN '비가동' END) WORK_STATUS_NM,
			(SELECT B.EQUIP_NM FROM TB_EQUIP_CODE_ADM B WHERE B.EQUIP_CD = A.EQUIP_CD) EQUIP_NM
		FROM TB_WORK_ORDER_PRCSS A
		WHERE 
			ORD_DATE BETWEEN #{startDate} AND #{endDate}
	</select>
	
	<!-- 작지별 소공정 모니터링 조회 -->
	<select id="workOrdPrcssMonitoringList" resultMap="WorkOrderPrcssVo">
		SELECT 
			MINOR_PRCSS_CD,
			(SELECT X.PRCSS_NM 
				 FROM TB_PRCSS_CODE_ADM X 
				 WHERE X.PRCSS_TYPE='001' 
				 AND X.PRCSS_CD=MINOR_PRCSS_CD 
				 AND X.PRCSS_CD=X.LOWER_PRCSS_CD) MINOR_PRCSS_NM,
			WORK_STATUS,
			TARGET_QTY,
			OUTPUT_QTY,
			FAULTY_QTY,
			ORD_DATE
		FROM TB_WORK_ORDER_PRCSS
		WHERE WORK_ORD_NO=#{workOrdNo}
	</select>
	
	<!-- 설비세팅후 설비정보관리의 설비세팅값 수정 -->
	<update id="equipDeviceMultiUpdate">
		UPDATE TB_EQUIP_CODE_ADM		 
		SET	DEVICE_MULTI = #{deviceMulti}
		WHERE EQUIP_CD = #{equipCd}
	</update>
	

	<!-- 생산시간 계산 -->
	<select id="getWorkTime" resultType="String">
		SELECT 
			ISNULL(SUM(CONVERT(INT,NO_TIME)),0) WORK_TIME
		FROM TB_WORK_ORDER_NON_OPERATION A
		WHERE 1=1
		AND WORK_ORD_NO = #{workOrdNo}
	</select>
	
	<!-- 일자별 생산수량 -->
	<select id="workOrdPrcssDayQty" resultType="int">
		SELECT  ISNULL(SUM(OUTPUT_QTY),0) OUTPUT_QTY
		FROM TB_WORK_ORDER_PRCSS 
		WHERE 1=1
		AND WORK_ORD_NO=#{workOrdNo}
		AND WORK_END_TIME  >=  (
									SELECT TOP(1) 
										CONVERT (DATETIME,CONCAT(CONVERT(DATE, NO_START_DATE),' ',NO_START_TIME))
									FROM TB_WORK_ORDER_NON_OPERATION 
									WHERE 1=1
									AND WORK_ORD_NO=#{workOrdNo}
									AND NO_GUBUN = '009' 
									ORDER BY NO_SEQ DESC
								)
	</select>
	
	
	<!-- LOT현황 ////////////////////////////////////////////////////////////////////////////////////////// -->
	
	<!-- 2.생산 LOT NO 정보 목록조회 -->
	<select id="lotTrackList1" resultMap="WorkOrderPrcssVo">
		SELECT
			IIA.ITEM_CD
			, IIA.ITEM_NM
			, IIA.MAIN_GUBUN
			, IIA.ITEM_MODEL
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA.ITEM_MODEL AND X.BASE_GROUP_CD = '099') ITEM_MODEL_NM
			, WOP.WORK_ORD_NO
			, WOP.ORD_LOT_NO
			, WOP.WORK_STATUS
			, WOP.WORK_GUBUN
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = WOP.WORK_GUBUN AND X.BASE_GROUP_CD = '114') WORK_GUBUN_NM
			, WOP.WORK_CHARGR
			, (SELECT X.USER_NM FROM TB_USER X WHERE X.USER_NUMBER = WOP.WORK_CHARGR) WORK_CHARGR_NM
			, WOP.INSPECT_GUBUN
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = WOP.INSPECT_GUBUN AND X.BASE_GROUP_CD = '118') INSPECT_GUBUN_NM
			, WOP.FAIR_QTY
			, WOP.WORK_END_TIME
			, IPCA.INSPECT_DATE
			, ICMA.INSPECT_DATE OUTPUT_INSPECT_DATE
			, IWA.OUT_DATE
			, IWA.OUT_QTY
			, IWA.REMAIN_QTY
			, DOD.PO_CORP_CD
			, (SELECT X.DEAL_CORP_NM FROM TB_DEAL_CORP_ADM X WHERE X.DEAL_CORP_CD = DOD.PO_CORP_CD) PO_CORP_NM
			, DOD.OUTPUT_DATE
			, DOD.OUTPUT_QTY
		FROM TB_WORK_ORDER_PRCSS WOP
		LEFT OUTER JOIN TB_DELIVERY_ORDER_DTL DOD
		ON WOP.ORD_LOT_NO = DOD.LOT_NO
		LEFT OUTER JOIN TB_ITEM_COMPLETE_MASTER_ADM ICMA
		ON DOD.DO_NO = ICMA.DO_NO
		AND DOD.DO_NO_SEV = ICMA.DO_NO_SUB
		LEFT OUTER JOIN TB_ITEM_WHS_ADM IWA
		ON WOP.ORD_LOT_NO = IWA.BARCODE_NO
		LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA
		ON WOP.ITEM_SEQ = IIA.ITEM_SEQ
		LEFT OUTER JOIN TB_ITEM_PRCSS_COMPLETE_ADM IPCA
		ON WOP.WORK_ORD_NO = IPCA.WORK_ORD_NO
		AND CONVERT(CHAR(8), WOP.WORK_END_TIME, 112) = IPCA.WORK_END_TIME
		WHERE 1=1
		<if test='mainGubun != null and !mainGubun.equals("")'>
		AND IIA.MAIN_GUBUN = #{mainGubun}
		</if>
		<if test='lotTrackGubun!=null and (lotTrackGubun.equals("1") or lotTrackGubun.equals("3"))'>
			<if test="ordLotNoList!=null and ordLotNoList.length>0">
			AND WOP.ORD_LOT_NO IN
				<foreach collection="ordLotNoList" item="arr" open="(" separator="," close=")">
				 #{arr}
				</foreach>
			</if>
			<if test="ordLotNo!=null and !ordLotNo.equals('')">
			AND WOP.ORD_LOT_NO = #{ordLotNo}
			</if>
			<if test="workOrdNo!=null and !workOrdNo.equals('')">
			AND WOP.WORK_ORD_NO = #{workOrdNo}
			</if>
		</if>
		<if test='lotTrackGubun!=null and lotTrackGubun.equals("2")'>
		AND WOP.WORK_ORD_NO IN (SELECT X.WORK_ORD_NO FROM TB_WORK_ORDER_MATRL X WHERE X.BARCODE_NO = #{barcodeNo})
		</if>
		AND WOP.WORK_STATUS != '003'
	</select>
	
	<!-- LOT추적 사출 생산LOT정보 -->
	<select id="lotTrackList10" resultMap="WorkOrderPrcssVo">
		SELECT
			IIA.ITEM_CD
			, IIA.ITEM_NM
			, IIA.MAIN_GUBUN
			, IIA.ITEM_MODEL
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA.ITEM_MODEL AND X.BASE_GROUP_CD = '099') ITEM_MODEL_NM
			, WOP.WORK_ORD_NO
			, WOP.ORD_LOT_NO
			, WOP.WORK_STATUS
			, WOP.WORK_GUBUN
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = WOP.WORK_GUBUN AND X.BASE_GROUP_CD = '114') WORK_GUBUN_NM
			, WOP.WORK_CHARGR
			, (SELECT X.USER_NM FROM TB_USER X WHERE X.USER_NUMBER = WOP.WORK_CHARGR) WORK_CHARGR_NM
			, WOP.INSPECT_GUBUN
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = WOP.INSPECT_GUBUN AND X.BASE_GROUP_CD = '118') INSPECT_GUBUN_NM
			, WOP.FAIR_QTY
			, WOP.WORK_END_TIME
			, IPCA.INSPECT_DATE
			, IWA.OUT_DATE
			, IWA.OUT_QTY
			, IWA.REMAIN_QTY
		FROM TB_WORK_ORDER_PRCSS WOP
		LEFT OUTER JOIN TB_ITEM_WHS_ADM IWA
		ON WOP.ORD_LOT_NO = IWA.BARCODE_NO
		LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA
		ON WOP.ITEM_SEQ = IIA.ITEM_SEQ
		LEFT OUTER JOIN TB_ITEM_PRCSS_COMPLETE_ADM IPCA
		ON WOP.WORK_ORD_NO = IPCA.WORK_ORD_NO
		AND CONVERT(CHAR(8), WOP.WORK_END_TIME, 112) = IPCA.WORK_END_TIME
		WHERE 1=1
		<if test='mainGubun != null and !mainGubun.equals("")'>
		AND IIA.MAIN_GUBUN = #{mainGubun}
		</if>
		<if test='lotTrackGubun!=null and (lotTrackGubun.equals("1") or lotTrackGubun.equals("3"))'>
			<if test="ordLotNoList!=null and ordLotNoList.length>0">
			AND WOP.ORD_LOT_NO IN
				<foreach collection="ordLotNoList" item="arr" open="(" separator="," close=")">
				 #{arr}
				</foreach>
			</if>
			<if test="ordLotNo!=null and !ordLotNo.equals('')">
			AND WOP.ORD_LOT_NO = #{ordLotNo}
			</if>
			<if test="workOrdNo!=null and !workOrdNo.equals('')">
			AND WOP.WORK_ORD_NO = #{workOrdNo}
			</if>
		</if>
		<if test='lotTrackGubun!=null and lotTrackGubun.equals("2")'>
		AND WOP.WORK_ORD_NO IN (SELECT X.WORK_ORD_NO FROM TB_WORK_ORDER_MATRL X WHERE X.BARCODE_NO = #{barcodeNo})
		</if>
		AND WOP.WORK_STATUS != '003'
	</select>
	
	<!-- 1. 자재 LOT NO 정보 목록조회 -->
	<select id="lotTrackList2" resultMap="WorkOrderMatrlVo">
		SELECT 
			A.BARCODE_NO
			, A.MAIN_GUBUN
			, A.ITEM_CD
			, A.ITEM_NM
			, A.ITEM_COLOR
			, A.ITEM_MODEL
			, A.ITEM_MODEL_NM
			, A.IN_WHS_DATE
			, A.IN_WHS_QTY
			, A.INSPECT_DATE
		FROM (
			SELECT 
				WOM.BARCODE_NO
				, IIA.MAIN_GUBUN
				, IIA.ITEM_CD
				, IIA.ITEM_NM
				, IIA.ITEM_COLOR
				, IIA.ITEM_MODEL
				, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA.ITEM_MODEL AND X.BASE_GROUP_CD = '099') ITEM_MODEL_NM
				, IOWA.IN_WHS_DATE
				, IOWA.IN_WHS_QTY
				, IIMA.INSPECT_DATE
			FROM TB_WORK_ORDER_MATRL WOM
			LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA
			ON WOM.ITEM_SEQ = IIA.ITEM_SEQ
			LEFT OUTER JOIN TB_IN_OUT_WHS_ADM IOWA
			ON IOWA.BARCODE_NO = WOM.BARCODE_NO
			LEFT OUTER JOIN TB_ITEM_INSPECT_MASTER_ADM IIMA
			ON IOWA.IN_SLIP_NO = IIMA.IN_SLIP_NO
			WHERE 1=1
			<if test='lotTrackGubun != null and lotTrackGubun.equals("1")'>
				<if test='ordLotNo != null and !ordLotNo.equals("")'>
					AND WOM.WORK_ORD_NO = (SELECT X.WORK_ORD_NO FROM TB_WORK_ORDER_PRCSS X WHERE X.ORD_LOT_NO = #{ordLotNo})
				</if>
			</if>
			<if test='lotTrackGubun != null and lotTrackGubun.equals("3")'>
			<if test='ordLotNo != null and !ordLotNo.equals("")'>
					AND WOM.WORK_ORD_NO = (SELECT X.WORK_ORD_NO FROM TB_WORK_ORDER_PRCSS X WHERE X.ORD_LOT_NO = #{ordLotNo})
				</if>
			</if>
		) A
		GROUP BY 
			A.BARCODE_NO
			, A.MAIN_GUBUN
			, A.ITEM_CD
			, A.ITEM_NM
			, A.ITEM_COLOR
			, A.ITEM_MODEL
			, A.ITEM_MODEL_NM
			, A.IN_WHS_DATE
			, A.IN_WHS_QTY
			, A.INSPECT_DATE
		HAVING 1=1
		<if test='mainGubun != null and !mainGubun.equals("")'>
		AND A.MAIN_GUBUN = #{mainGubun}
		</if>
		<if test='lotTrackGubun != null and lotTrackGubun.equals("2")'>
		AND A.BARCODE_NO = #{barcodeNo}
		</if>
	</select>
	
	<!-- 3.불량LOT추적 목록조회 -->
	<select id="lotTrackList3" resultMap="WorkOrderPrcssVo">
		SELECT
			WOP.WORK_ORD_NO,
			WOP.ORD_LOT_NO,
			WOP.WORK_GUBUN,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM WHERE BASE_CD=WORK_GUBUN AND BASE_GROUP_CD='114') WORK_GUBUN_NM,
			WOP.WORK_CHARGR,
			(SELECT USER_NM FROM TB_USER WHERE USER_NUMBER=WORK_CHARGR)WORK_CHARGR_NM,
			WOP.INSPECT_GUBUN,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM WHERE BASE_CD=INSPECT_GUBUN AND BASE_GROUP_CD='118') INSPECT_GUBUN_NM,
			WOP.FAULTY_QTY
		FROM TB_WORK_ORDER_PRCSS WOP
		WHERE 1=1
		<if test='lotTrackGubun!=null and lotTrackGubun.equals("1")'>
		AND WOP.ORD_LOT_NO = #{ordLotNo}
		</if>		
		<if test='lotTrackGubun!=null and lotTrackGubun.equals("2")'>
		AND WOP.WORK_ORD_NO IN (SELECT WORK_ORD_NO FROM TB_WORK_ORDER_MATRL WHERE BARCODE_NO=#{barcodeNo})
		</if>		
		<if test='lotTrackGubun!=null and lotTrackGubun.equals("3")'>
		AND WOP.WORK_ORD_NO = #{workOrdNo}
		</if>		
		AND WOP.WORK_STATUS = '003'
	</select>
	
	<!-- 4.작업지시번호 목록조회 -->
	<select id="lotTrackList4" resultMap="WorkOrderPrcssVo">
		SELECT 
			WO.WORK_ORD_NO,
			IIA.ITEM_GUBUN,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM WHERE BASE_CD=IIA.ITEM_GUBUN AND BASE_GROUP_CD='079') ITEM_GUBUN_NM,
			IIA.ITEM_MODEL,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM WHERE BASE_CD=IIA.ITEM_MODEL AND BASE_GROUP_CD='099') ITEM_MODEL_NM,
			IIA.ITEM_CD,
			IIA.ITEM_NM,
			WO.EQUIP_CD,
			(SELECT EQUIP_NM FROM TB_EQUIP_CODE_ADM WHERE EQUIP_CD=WO.EQUIP_CD) EQUIP_NM,
			WO.OUTPUT_QTY,
			WO.OUTPUT_QTY-WO.FAULTY_QTY FAIR_QTY,
			WO.FAULTY_QTY,
			WO.FUZZ_QTY,
			WO.RUNNER_QTY,
			WOF.FUZZ_CNT TOTAL_FUZZ_QTY,
			ISNULL(DATEDIFF(MINUTE,(
				SELECT 
					WORK_START_TIME
				FROM TB_WORK_ORDER_PRCSS A
				WHERE 1=1
				AND WORK_ORD_NO = WO.WORK_ORD_NO
				AND WORK_ORD_SEQ = (SELECT MIN(X.WORK_ORD_SEQ) FROM TB_WORK_ORDER_PRCSS X WHERE X.WORK_ORD_NO=A.WORK_ORD_NO)),
			(
				SELECT 
					WORK_END_TIME
				FROM TB_WORK_ORDER_PRCSS A
				WHERE 1=1
				AND WORK_ORD_NO = WO.WORK_ORD_NO
				AND WORK_ORD_SEQ = (SELECT MAX(X.WORK_ORD_SEQ) FROM TB_WORK_ORDER_PRCSS X WHERE X.WORK_ORD_NO=A.WORK_ORD_NO)
			)),0) WORK_TIME,
		   (
				SELECT 
					ISNULL(SUM(CONVERT(INT,NO_TIME)),0) WORK_NON_TIME
				FROM TB_WORK_ORDER_NON_OPERATION A
				WHERE 1=1
				AND WORK_ORD_NO = WO.WORK_ORD_NO
				AND WORK_ORD_SEQ = (SELECT MIN(X.WORK_ORD_SEQ) FROM TB_WORK_ORDER_PRCSS X WHERE X.WORK_ORD_NO=A.WORK_ORD_NO)
			)WORK_NON_TIME
		FROM TB_WORK_ORDER WO
		LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA
		ON WO.ITEM_SEQ=IIA.ITEM_SEQ
		LEFT OUTER JOIN 
		(
			SELECT 
				WOF_TB.WORK_ORD_NO,
				SUM(CONVERT(INT,ISNULL(FUZZ_CNT,0))) FUZZ_CNT
			FROM TB_WORK_ORDER_FUZZ WOF_TB
			WHERE 1=1
			GROUP BY WORK_ORD_NO
		)WOF
		ON WO.WORK_ORD_NO=WOF.WORK_ORD_NO
		WHERE 1=1
		<if test='lotTrackGubun!=null and lotTrackGubun.equals("1")'>
		AND WO.WORK_ORD_NO=(SELECT WORK_ORD_NO FROM TB_WORK_ORDER_PRCSS WHERE ORD_LOT_NO=#{ordLotNo})
		</if>	
		<if test='lotTrackGubun!=null and lotTrackGubun.equals("2")'>
		AND WO.WORK_ORD_NO IN (SELECT WORK_ORD_NO FROM TB_WORK_ORDER_MATRL WHERE BARCODE_NO=#{barcodeNo})
		</if>	
		<if test='lotTrackGubun!=null and lotTrackGubun.equals("3")'>
		AND WO.WORK_ORD_NO = #{workOrdNo}
		</if>	
	
	</select>
	
	<!-- 3.출하 LOT NO 정보 목록조회 -->
	<select id="lotTrackList5" resultMap="WorkOrderPrcssVo">
		SELECT 
			WOP.WORK_ORD_NO
			, WOP.ORD_LOT_NO
			, WOP.WORK_STATUS
			, WOP.WORK_GUBUN
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = WOP.WORK_GUBUN AND X.BASE_GROUP_CD = '114') WORK_GUBUN_NM
			, WOP.WORK_CHARGR
			, (SELECT X.USER_NM FROM TB_USER X WHERE X.USER_NUMBER = WOP.WORK_CHARGR) WORK_CHARGR_NM
			, WOP.INSPECT_GUBUN
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = WOP.INSPECT_GUBUN AND X.BASE_GROUP_CD = '118') INSPECT_GUBUN_NM
			, WOP.FAIR_QTY
			, WOP.WORK_END_TIME
			, ICMA.INSPECT_DATE
			, IWA.OUT_DATE
			, IWA.OUT_QTY
			, IWA.REMAIN_QTY
			, DOD.PO_CORP_CD
			, (SELECT X.DEAL_CORP_NM FROM TB_DEAL_CORP_ADM X WHERE X.DEAL_CORP_CD = DOD.PO_CORP_CD) PO_CORP_NM
			, IIA.ITEM_MODEL
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA.ITEM_MODEL AND X.BASE_GROUP_CD = '099') ITEM_MODEL_NM
			, IIA.ITEM_CD
			, IIA.ITEM_NM
			, ICMA.INSPECT_DATE OUTPUT_INSPECT_DATE
			, DOD.OUTPUT_DATE
			, DOD.OUTPUT_QTY
			, IIA.MAIN_GUBUN
		FROM TB_WORK_ORDER_PRCSS WOP
		LEFT OUTER JOIN TB_DELIVERY_ORDER_DTL DOD
		ON WOP.ORD_LOT_NO = DOD.LOT_NO
		LEFT OUTER JOIN TB_ITEM_COMPLETE_MASTER_ADM ICMA
		ON DOD.DO_NO = ICMA.DO_NO
		AND DOD.DO_NO_SEV = ICMA.DO_NO_SUB
		LEFT OUTER JOIN TB_ITEM_WHS_ADM IWA
		ON WOP.ORD_LOT_NO = IWA.BARCODE_NO
		LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA
		ON WOP.ITEM_SEQ = IIA.ITEM_SEQ
		LEFT OUTER JOIN TB_ITEM_PRCSS_COMPLETE_ADM IPCA
		ON WOP.WORK_ORD_NO = IPCA.WORK_ORD_NO
		AND CONVERT(CHAR(8), WOP.WORK_END_TIME, 112) = IPCA.WORK_END_TIME
		LEFT OUTER JOIN TB_DELIVERY_PROC_DTL DPD
		ON DOD.DO_NO = DPD.DO_NO
		AND DOD.DO_SEQ = DPD.DO_SEQ
		WHERE 1=1
		<if test='mainGubun != null and !mainGubun.equals("")'>
		AND IIA.MAIN_GUBUN = #{mainGubun}
		</if>
		<if test='lotTrackGubun != null and lotTrackGubun.equals("1")'>
		AND WOP.ORD_LOT_NO = #{ordLotNo}
		</if>
		<if test='lotTrackGubun != null and lotTrackGubun.equals("2")'>
		AND WOP.WORK_ORD_NO IN (SELECT X.WORK_ORD_NO FROM TB_WORK_ORDER_MATRL X WHERE X.BARCODE_NO = #{barcodeNo})
		</if>
		<if test='lotTrackGubun != null and lotTrackGubun.equals("3")'>
		AND WOP.WORK_ORD_NO = #{workOrdNo}
		</if>
		AND WOP.WORK_STATUS != '003'
		AND ICMA.INSPECT_DATE IS NOT NULL
	</select>
	
	<!-- 원자재 재고현황 -->
	<select id="lotTrackStockPaymentList2" resultMap="WorkOrderMatrlVo">
		SELECT
			T2.ITEM_SEQ
			, T2.ITEM_CD
			, T2.ITEM_NM
			, T2.ITEM_MODEL
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = T2.ITEM_MODEL AND X.BASE_GROUP_CD = '099') ITEM_MODEL_NM
			, T2.LOCATION_NO
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_GROUP_CD = '073' AND (SELECT LA.LOC_CD FROM TB_LOCATION_ADM LA WHERE LA.LOC_NO = T2.LOCATION_NO) = X.BASE_CD) LOC_CD_NM
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_GROUP_CD = '067' AND (SELECT LA.AREA_CD FROM TB_LOCATION_ADM LA WHERE LA.LOC_NO = T2.LOCATION_NO) = X.BASE_CD) AREA_CD_NM
			, (SELECT LA.FLOOR_NM FROM TB_LOCATION_ADM LA WHERE LA.LOC_NO = T2.LOCATION_NO) FLOOR_NM
			, SUM(T2.SP_QTY) SP_QTY
			, T2.MAIN_GUBUN
		FROM (
			SELECT
				T1.ITEM_SEQ
				, T1.ITEM_CD
				, T1.ITEM_NM
				, T1.ITEM_MODEL
				, (
					CASE WHEN SPA.SP_GUBUN IN ('001','003') 
					THEN SPA.SP_QTY * '1'
					ELSE SPA.SP_QTY * (-1)
					END
				) SP_QTY
				, SPA.LOCATION_NO
				, T1.MAIN_GUBUN
			FROM (
				SELECT
					IIA.ITEM_SEQ
					, IIA.ITEM_CD
					, IIA.ITEM_NM
					, IIA.ITEM_MODEL
					, IIA.MAIN_GUBUN
				FROM TB_WORK_ORDER_MATRL WOM
				LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA
				ON WOM.ITEM_SEQ = IIA.ITEM_SEQ
				WHERE 1=1
				<if test='lotTrackGubun != null and lotTrackGubun.equals("1")'>
					<if test='ordLotNo != null and !ordLotNo.equals("")'>
						AND WOM.WORK_ORD_NO = (SELECT X.WORK_ORD_NO FROM TB_WORK_ORDER_PRCSS X WHERE X.ORD_LOT_NO = #{ordLotNo})
					</if>
				</if>	
				<if test='lotTrackGubun != null and lotTrackGubun.equals("2")'>
				AND WOM.WORK_ORD_NO IN (SELECT X.WORK_ORD_NO FROM TB_WORK_ORDER_MATRL X WHERE X.BARCODE_NO = #{barcodeNo})
				</if>	
				<if test='lotTrackGubun != null and lotTrackGubun.equals("3")'>
				AND WOM.WORK_ORD_NO = #{workOrdNo}
				</if>
					
				GROUP BY IIA.ITEM_SEQ, IIA.ITEM_CD, IIA.ITEM_NM, IIA.ITEM_MODEL, IIA.MAIN_GUBUN
			) T1
			LEFT OUTER JOIN ( 
				SELECT 
					SP_CD, 
					SP_GUBUN,
					SP_QTY,
					LOCATION_NO 
				FROM TB_STOCK_PAYMENT_ADM
				WHERE 1=1
				AND SP_DATE BETWEEN LEFT(#{tmMon},4)+'0101' AND #{tmMon} + '31'
				UNION ALL
				SELECT SP_CD, 
					SP_GUBUN,
					SP_QTY,
					LOCATION_NO 
				FROM TB_STOCK_CLOSING_ADM
				WHERE 1=1
				AND CLOSE_DATE = CONVERT(VARCHAR(4), DATEADD(YYYY, -1, #{tmMon} + '01'), 112)
			)SPA
			ON T1.ITEM_SEQ = SPA.SP_CD
		) T2
		GROUP BY T2.ITEM_SEQ, T2.ITEM_CD, T2.ITEM_NM, T2.ITEM_MODEL, T2.LOCATION_NO, T2.MAIN_GUBUN
		HAVING 1=1
		AND SUM(T2.SP_QTY) > 0
		<if test='mainGubun != null and !mainGubun.equals("")'>
		AND T2.MAIN_GUBUN = #{mainGubun}
		</if>
		
	</select>
	
	<!-- 제품 재고현황 -->
	<select id="lotTrackStockPaymentList1" resultMap="WorkOrderMatrlVo">
		SELECT
			T2.ITEM_SEQ
			, T2.ITEM_CD
			, T2.ITEM_NM
			, T2.ITEM_MODEL
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = T2.ITEM_MODEL AND X.BASE_GROUP_CD = '099') ITEM_MODEL_NM
			, T2.LOCATION_CD
			, T2.LOCATION_NO
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_GROUP_CD = '073' AND T2.LOCATION_CD = X.BASE_CD) LOC_CD_NM
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_GROUP_CD = '067' AND (SELECT LA.AREA_CD FROM TB_LOCATION_ADM LA WHERE LA.LOC_NO = T2.LOCATION_NO) = X.BASE_CD) AREA_CD_NM
			, (SELECT LA.FLOOR_NM FROM TB_LOCATION_ADM LA WHERE LA.LOC_NO = T2.LOCATION_NO) FLOOR_NM
			, SUM(T2.SP_QTY) SP_QTY
			, T2.MAIN_GUBUN
		FROM (
			SELECT
				T1.ITEM_SEQ
				, T1.ITEM_CD
				, T1.ITEM_NM
				, T1.ITEM_MODEL
				, (
					CASE WHEN SPA.SP_GUBUN IN ('001', '003')
					THEN SPA.SP_QTY * '1'
					ELSE SPA.SP_QTY * (-1)
					END
				) SP_QTY
				, SPA.LOCATION_CD
				, SPA.LOCATION_NO
				, T1.MAIN_GUBUN
			FROM (
				SELECT
					IIA.ITEM_SEQ
					, IIA.ITEM_CD
					, IIA.ITEM_NM
					, IIA.ITEM_MODEL
					, IIA.MAIN_GUBUN
				FROM TB_WORK_ORDER_PRCSS WOP
				LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA
				ON WOP.ITEM_SEQ = IIA.ITEM_SEQ
				WHERE 1=1
				<if test='lotTrackGubun != null and lotTrackGubun.equals("1")'>
					<if test='ordLotNo != null and !ordLotNo.equals("")'>
						AND WOP.WORK_ORD_NO = (SELECT X.WORK_ORD_NO FROM TB_WORK_ORDER_PRCSS X WHERE X.ORD_LOT_NO = #{ordLotNo})
					</if>
				</if>	
				<if test='lotTrackGubun != null and lotTrackGubun.equals("2")'>
				AND WOP.WORK_ORD_NO IN (SELECT X.WORK_ORD_NO FROM TB_WORK_ORDER_MATRL X WHERE X.BARCODE_NO = #{barcodeNo})
				</if>
				<if test='lotTrackGubun != null and lotTrackGubun.equals("3")'>
				AND WOP.WORK_ORD_NO = #{workOrdNo}
				</if>
				GROUP BY IIA.ITEM_SEQ, IIA.ITEM_CD, IIA.ITEM_NM, IIA.ITEM_MODEL, IIA.MAIN_GUBUN
			) T1
			LEFT OUTER JOIN ( 
				SELECT 
					SP_CD, 
					SP_GUBUN,
					SP_QTY,
					LOCATION_CD,
					LOCATION_NO 
				FROM TB_STOCK_PAYMENT_ADM
				WHERE 1=1
				AND SP_DATE BETWEEN LEFT(#{tmMon},4)+'0101' AND #{tmMon} + '31'
				UNION ALL
				SELECT SP_CD, 
					SP_GUBUN,
					SP_QTY,
					LOCATION_CD,
					LOCATION_NO 
				FROM TB_STOCK_CLOSING_ADM
				WHERE 1=1
				AND CLOSE_DATE = CONVERT(VARCHAR(4), DATEADD(YYYY, -1, #{tmMon} + '01'), 112)
			) SPA
			ON T1.ITEM_SEQ = SPA.SP_CD
		) T2
		GROUP BY T2.ITEM_SEQ, T2.ITEM_CD, T2.ITEM_NM, T2.ITEM_MODEL,T2.LOCATION_CD, T2.LOCATION_NO, T2.MAIN_GUBUN
		HAVING 1=1
		<if test='mainGubun != null and !mainGubun.equals("")'>
		AND T2.MAIN_GUBUN = #{mainGubun}
		</if>
		AND SUM(T2.SP_QTY) > 0
		AND (
			T2.LOCATION_NO = '' OR
			(SELECT LA.LOC_CD FROM TB_LOCATION_ADM LA WHERE LA.LOC_NO = T2.LOCATION_NO) != '005'
		)

	</select>
	
	<!--생산실적삭제 -->
	<delete id="workOrderPrcssDelete">
		DELETE TB_WORK_ORDER_PRCSS 
		WHERE WORK_ORD_NO = #{workOrdNo}
		AND WORK_ORD_SEQ = #{workOrdSeq}
		<if test="middlePrcssCd != null and !middlePrcssCd.equals('')">
		AND MIDDLE_PRCSS_CD = #{middlePrcssCd}
		</if>
		<if test="minorPrcssCd != null and !minorPrcssCd.equals('')">
		AND MINOR_PRCSS_CD = #{minorPrcssCd}
		</if>
		<if test="workGubun!=null and !workGubun.equals('')">
		AND WORK_GUBUN = #{workGubun}
		</if>
	</delete>
	
	<!-- 생산실적 초/중/종물 실적등록 조회 -->
	<select id="workOrdInspectDone" resultType="int">
		SELECT COUNT(*) FROM TB_WORK_ORDER_PRCSS 
		WHERE 1=1
		<if test="workOrdNo != null and !workOrdNo.equals('')">
		AND WORK_ORD_NO = #{workOrdNo}
		</if>
		<if test="middlePrcssCd != null and !middlePrcssCd.equals('')">
		AND MIDDLE_PRCSS_CD = #{middlePrcssCd}
		</if>
		AND INSPECT_GUBUN = #{inspectGubun}
	</select>
	
	
	<!-- LOT현황 ////////////////////////////////////////////////////////////////////////////////////////// -->
	
		
	<!-- LOT 존재 확인 -->
	<select id="workOrderPrcssExist" resultType="int">
		SELECT
			COUNT(*)
		FROM TB_WORK_ORDER_PRCSS A
		WHERE 1=1
		AND ORD_LOT_NO = #{ordLotNo}
	</select>
	
	<!-- LOT 데이터 조회 -->
	<select id="workOrderPrcssRead" resultMap="WorkOrderPrcssVo">
		SELECT
			A.ORD_LOT_NO,
			B.ITEM_CD,
			B.ITEM_SEQ,
			A.FAIR_QTY,
			A.WORK_STATUS,
			B.ITEM_GUBUN,
			B.SAVELOC_CD LOC_CD,
			B.ITEM_CUS
		FROM TB_WORK_ORDER_PRCSS A, TB_ITEM_INFO_ADM B
		WHERE 1=1
		AND ORD_LOT_NO = #{ordLotNo}
		AND A.ITEM_SEQ = B.ITEM_SEQ
	</select>
		
	<!-- 제조리드타임 ////////////////////////////////////////////////////////////////////////////////////////// -->
	<select id="leadTimeList" resultMap="WorkOrderPrcssVo">
		SELECT
			IA.ITEM_WORKPLACE,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=IA.ITEM_MODEL AND X.BASE_GROUP_CD='099') ITEM_MODEL,
			IA.ITEM_CD,
			IA.ITEM_NM,
			IA.ITEM_DESC,
			Z.ITEM_SEQ,
			Z.ORD_LOT_NO,
			Z.REG_DATE,
			Z.WORK_START_TIME,
			Z.WORK_END_TIME,
			DAY_TIME*24+((SECOND_TIME-(SECOND_TIME/86400)*86400)/3600) HOUR_TIME,
			((SECOND_TIME-(SECOND_TIME/3600)*3600)/60) MIN_TIME,
			((SECOND_TIME-(SECOND_TIME/60)*60)) SEC_TIME
		FROM
		(

			SELECT 
				WO.ITEM_SEQ,
				WP.ORD_LOT_NO,
				WO.REG_DATE,
				WP.WORK_START_TIME,
				WP.WORK_END_TIME,
				DATEDIFF(DAY,WO.REG_DATE,WP.WORK_START_TIME) DAY_TIME,
				DATEDIFF(SECOND,WO.REG_DATE,WP.WORK_START_TIME) SECOND_TIME
			FROM TB_WORK_ORDER_PRCSS WP
			LEFT OUTER JOIN TB_WORK_ORDER WO
			ON WP.WORK_ORD_NO=WO.WORK_ORD_NO
			WHERE 1=1
			AND WP.WORK_STATUS = '002'
			<if test="regDateFrom!=null and !regDateFrom.equals('')">
			AND CONVERT(CHAR(8), WO.REG_DATE, 112) BETWEEN #{regDateFrom} AND #{regDateTo}
			</if>
		)Z 
		LEFT OUTER JOIN TB_ITEM_INFO_ADM IA
		ON Z.ITEM_SEQ=IA.ITEM_SEQ
		ORDER BY REG_DATE ASC, WORK_START_TIME ASC, WORK_END_TIME ASC
	</select>
	
	<select id="leadTimeSubTotalList" resultMap="WorkOrderPrcssVo">
		SELECT
			A.LEAD_COUNT,
			CONCAT(A.HOUR_TIME,':',A.MIN_TIME,':',A.SEC_TIME) TOTAL_LEAD_TIME,
			CONCAT(A.HOUR_TIME_AVG,':',A.MIN_TIME_AVG,':',A.SEC_TIME_AVG) AVG_LEAD_TIME
			
		FROM
		(
		SELECT
			COUNT(*) LEAD_COUNT,
			SUM(DAY_TIME)*24+((SUM(SECOND_TIME)-(SUM(SECOND_TIME)/86400)*86400)/3600) HOUR_TIME,
			((SUM(SECOND_TIME)-(SUM(SECOND_TIME)/3600)*3600)/60) MIN_TIME,
			((SUM(SECOND_TIME)-(SUM(SECOND_TIME)/60)*60)) SEC_TIME,
			SUM(DAY_TIME)*24+(((SUM(SECOND_TIME)/COUNT(*))-(SUM(SECOND_TIME)/COUNT(*)/86400)*86400)/3600) HOUR_TIME_AVG,
			(((SUM(SECOND_TIME)/COUNT(*))-(SUM(SECOND_TIME)/COUNT(*)/3600)*3600)/60) MIN_TIME_AVG,
			(((SUM(SECOND_TIME)/COUNT(*))-(SUM(SECOND_TIME)/COUNT(*)/60)*60)) SEC_TIME_AVG
		FROM
		(
			SELECT 
				DATEDIFF(DAY,WO.REG_DATE,WP.WORK_START_TIME) DAY_TIME,
				DATEDIFF(SECOND,WO.REG_DATE,WP.WORK_START_TIME) SECOND_TIME
			FROM TB_WORK_ORDER_PRCSS WP
			LEFT OUTER JOIN TB_WORK_ORDER WO
			ON WP.WORK_ORD_NO=WO.WORK_ORD_NO
			WHERE 1=1
			AND WP.WORK_STATUS = '002'
			
			<if test="regDateFrom!=null and !regDateFrom.equals('')">
			AND CONVERT(CHAR(8), WO.REG_DATE, 112) BETWEEN #{regDateFrom} AND #{regDateTo}
			</if>
			
			)Z 
		)A
	</select>
	
	<!-- 제조리드타임(봉제) ////////////////////////////////////////////////////////////////////////////////////////// -->
	<select id="leadTimeSewingList" resultMap="WorkOrderPrcssVo">
		SELECT
			Z.WORK_ORD_NO,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=IA.ITEM_MODEL AND X.BASE_GROUP_CD='099') ITEM_MODEL,
			IA.ITEM_CD,
			IA.ITEM_NM,
			Z.REG_DATE,
			Z.WORK_START_TIME,
			DAY_TIME * 24 + ((SECOND_TIME - (SECOND_TIME / 86400) * 86400) / 3600) HOUR_TIME,
			((SECOND_TIME - (SECOND_TIME / 3600) * 3600) / 60) MIN_TIME,
			((SECOND_TIME - (SECOND_TIME / 60) * 60)) SEC_TIME,
			Z.WORK_END_TIME,
			IA.ITEM_WORKPLACE,
			IA.ITEM_DESC,
			Z.ITEM_SEQ
		FROM
		(
			SELECT
				WO.ITEM_SEQ,
				WP.WORK_ORD_NO,
				WO.REG_DATE,
				WP.WORK_START_TIME,
				WP.WORK_END_TIME,
				DATEDIFF(DAY, WO.REG_DATE, WP.WORK_START_TIME) DAY_TIME,
				DATEDIFF(SECOND, WO.REG_DATE, WP.WORK_START_TIME) SECOND_TIME
			FROM TB_WORK_ORDER_PRCSS WP
			LEFT OUTER JOIN TB_WORK_ORDER WO
			ON WP.WORK_ORD_NO = WO.WORK_ORD_NO
			INNER JOIN (
				SELECT 
					WP.WORK_ORD_NO
					, MIN(WP.WORK_ORD_SEQ) WORK_ORD_SEQ
				FROM TB_WORK_ORDER_PRCSS WP
				GROUP BY WP.WORK_ORD_NO
			) M
			ON WP.WORK_ORD_NO = M.WORK_ORD_NO
			WHERE 1=1
			AND WP.WORK_STATUS = '002'
			AND WP.WORK_ORD_SEQ = M.WORK_ORD_SEQ
			<if test="regDateFrom!=null and !regDateFrom.equals('')">
			AND CONVERT(CHAR(8), WO.REG_DATE, 112) BETWEEN #{regDateFrom} AND #{regDateTo}
			</if>
		)Z 
		LEFT OUTER JOIN TB_ITEM_INFO_ADM IA
		ON Z.ITEM_SEQ = IA.ITEM_SEQ
		ORDER BY REG_DATE ASC, WORK_START_TIME ASC, WORK_END_TIME ASC
	</select>
	
	<!-- 생산 공정 불량율 현황////////////////////////////////////////////////////////////////////////////////////////// -->
	<select id="workPrcssFaultyRateList" resultMap="WorkOrderPrcssVo">
		DECLARE @COLUMNS NVARCHAR(MAX)
		DECLARE @SQL NVARCHAR(MAX)
		DECLARE @FAULTY_TYPE_CD NVARCHAR(MAX)
		DECLARE @BASE_INFO_TYPE NVARCHAR(MAX)
		DECLARE @BASE_INFO_GUBUN NVARCHAR(MAX)
		DECLARE @WORK_DATE NVARCHAR(MAX)
	
		SET @COLUMNS = '';
		SET @FAULTY_TYPE_CD = '000001';
		SET @BASE_INFO_TYPE = 'FT';
		SET @BASE_INFO_GUBUN = '003';
		SET @WORK_DATE = #{workStartTime}
	
		SELECT @COLUMNS = @COLUMNS + '[' +'F'+BASE_INFO_CD + '],'
		FROM (
				SELECT *
				FROM TB_BASE_INFO_ADM 
				WHERE BASE_INFO_TYPE='FT' 
				AND BASE_INFO_GUBUN='003' 
			) AS BASE_INFO_CD
	
	
		SET @COLUMNS = LEFT(@COLUMNS, LEN(@COLUMNS)-1)
	
		SET @SQL = '

			SELECT
				*
			FROM
			(
				SELECT 
					(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_GROUP_CD=''112'' AND X.BASE_CD=IA.MAIN_GUBUN) MAIN_GUBUN,
					WO.ITEM_SEQ,
					WO.WORK_ORD_NO,
					IA.ITEM_CD,
					(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_GROUP_CD=''079'' AND X.BASE_CD=IA.ITEM_GUBUN) ITEM_GUBUN,
					IA.ITEM_COLOR,
					ISNULL(SUM(WP.OUTPUT_QTY),0) OUTPUT_QTY,
					ISNULL(SUM(WP.OUTPUT_QTY),0)-ISNULL(SUM(WP.FAULTY_QTY),0) FAIR_QTY,
					ISNULL(SUM(WP.FAULTY_QTY),0) FAULTY_QTY,
					CONCAT(''F'',FT.FAULTY_TYPE_CD) FAULTY_TYPE_CD,
					FT.FAULTY_TYPE_QTY,
					CONVERT(NUMERIC(10,2),ROUND((ISNULL(SUM(WP.FAULTY_QTY),0)/(CASE WHEN ISNULL(SUM(WP.OUTPUT_QTY),0)=0 THEN 1 ELSE ISNULL(SUM(WP.OUTPUT_QTY),0) END))*100,2)) FAULTY_RATE
		
				FROM TB_WORK_ORDER WO
				LEFT OUTER JOIN TB_WORK_ORDER_PRCSS WP
				ON WO.WORK_ORD_NO=WP.WORK_ORD_NO
				LEFT OUTER JOIN
				(
					SELECT
						ITEM_SEQ,
						WO.WORK_ORD_NO,
						FAULTY_TYPE_CD,
						SUM(FAULTY_TYPE_QTY) FAULTY_TYPE_QTY
	
					FROM TB_WORK_ORDER WO
					LEFT OUTER JOIN TB_WORK_ORDER_FAULTY_TYPE FT
					ON WO.WORK_ORD_NO=FT.WORK_ORD_NO
					
					<if test="workStartTime!=null and !workStartTime.equals('')">
					WHERE SUBSTRING(FT.FAULTY_TYPE_DATE,0,7) = '''+@WORK_DATE+'''
					</if>
				
					GROUP BY ITEM_SEQ,WO.WORK_ORD_NO,FAULTY_TYPE_CD
					
				) FT
				ON WO.WORK_ORD_NO=FT.WORK_ORD_NO
				LEFT OUTER JOIN TB_ITEM_INFO_ADM IA
				ON WO.ITEM_SEQ=IA.ITEM_SEQ
				<if test="workStartTime!=null and !workStartTime.equals('')">
				WHERE SUBSTRING(CONVERT(varchar,WP.WORK_START_TIME,112),0,7)= '''+@WORK_DATE+'''
				</if>
				
				GROUP BY IA.MAIN_GUBUN,WO.ITEM_SEQ,WO.WORK_ORD_NO,IA.ITEM_CD,IA.ITEM_GUBUN,IA.ITEM_COLOR,FAULTY_TYPE_CD,FAULTY_TYPE_QTY
				HAVING IA.MAIN_GUBUN = ''001''
				)AS result
				PIVOT(
					SUM(FAULTY_TYPE_QTY) FOR FAULTY_TYPE_CD IN ('+@COLUMNS+')
				)AS pivot_result
		
			'
		EXEC(@SQL)
	
	</select>
	
	<!-- 생산실적(봉제)************************ -->
	<select id="workOrderPrcssCdList" resultMap="WorkOrderPrcssVo">
		SELECT 
			IIA.ITEM_SEQ,
			IIA.ITEM_CD,
			IIA.ITEM_NM,
			PRCSS_CD MIDDLE_PRCSS_CD,
			(SELECT PRCSS_NM FROM TB_PRCSS_CODE_ADM X WHERE X.PRCSS_CD=MPC.PRCSS_CD AND X.PRCSS_CD=X.LOWER_PRCSS_CD AND PRCSS_TYPE='001') MIDDLE_PRCSS_NM,
			MPC.LOWER_PRCSS_CD PRCSS_CD,
			(SELECT PRCSS_NM FROM TB_PRCSS_CODE_ADM X WHERE X.PRCSS_CD=MPC.LOWER_PRCSS_CD AND X.PRCSS_CD=X.LOWER_PRCSS_CD AND PRCSS_TYPE='002') MINOR_PRCSS_NM,
			LEAD(MPC.LOWER_PRCSS_CD) OVER(ORDER BY PRCSS_CD,PRCSS_SEQ) NEXT_PRCSS_CD,
			PRCSS_SEQ
		FROM TB_PRCSS_CODE_ADM MPC
		LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA
		ON MPC.PRCSS_CD=IIA.ITEM_WORKPLACE
		WHERE 1=1
		AND MPC.PRCSS_CD!=MPC.LOWER_PRCSS_CD
		AND IIA.ITEM_SEQ=#{itemSeq}
	</select>
	
	<!-- 자재 수불 리스트 등록 -->
	<insert id="matrlStockPaymentCreate" parameterType="java.util.List">
		DECLARE @idx int
		DECLARE @totalSanSangQty float
		DECLARE @consumpt float
		DECLARE @remainQty float
		DECLARE @totalMatrlQty float
		DECLARE @barcodeNo varchar(100)
		DECLARE @spCd varchar(100)
		DECLARE @spType varchar(100)
		DECLARE @spNo varchar(100)
		DECLARE @countVal varchar(100)
		DECLARE @itemSeq varchar(100)
		
		SELECT @spNo = CONCAT(CONVERT(varchar(50), GETDATE(), 112), '_', ISNULL(RIGHT('000000' + CAST(MAX(RIGHT(SP_NO, 6))+1 AS NVARCHAR), 6), '000001'))
		FROM TB_STOCK_PAYMENT_ADM
		WHERE SUBSTRING(SP_NO, 0, 9) = CONVERT(varchar(50), GETDATE(), 112)
		
		<foreach collection="list" item="item">
			SET @idx = 1
			SELECT @countVal = COUNT(ITEM_SEQ)
			FROM TB_ITEM_MOTOR_EBOM
			WHERE UPPER_ITEM_SEQ = #{item.itemSeq}
			
			WHILE(@idx <![CDATA[<=]]> @countVal)
			BEGIN
				SET @totalSanSangQty = #{item.outputQty}
				SELECT @consumpt = A.ITEM_CONSUMPT, @itemSeq = A.ITEM_SEQ
				FROM (
					SELECT ROW_NUMBER() OVER (ORDER BY ITEM_SEQ) ROW_NUM, ITEM_SEQ, ITEM_CONSUMPT
					FROM TB_ITEM_MOTOR_EBOM
					WHERE UPPER_ITEM_SEQ = #{item.itemSeq}
				) A
				WHERE ROW_NUM = @idx
				SET @remainQty = @totalSanSangQty * @consumpt
		
				WHILE( @remainQty > 0 )
				BEGIN
					SELECT TOP(1)
						@spCd = WOM_TB.ITEM_SEQ, @spType = IIA_TB.ITEM_GUBUN, @totalMatrlQty = X.TM_QTY, @barcodeNo = WOM_TB.BARCODE_NO
					FROM TB_WORK_ORDER_MATRL WOM_TB
					INNER JOIN TB_ITEM_INFO_ADM IIA_TB
					ON WOM_TB.ITEM_SEQ = IIA_TB.ITEM_SEQ
					LEFT OUTER JOIN (
						SELECT S.BARCODE_NO, ISNULL(A.QTY,0)-ISNULL(B.QTY,0) TM_QTY
						FROM TB_STOCK_PAYMENT_ADM S
						LEFT OUTER JOIN (
							SELECT BARCODE_NO, SUM(SP_QTY) QTY
							FROM TB_STOCK_PAYMENT_ADM
							WHERE SP_GUBUN = '001'
							AND LOCATION_CD = #{item.inLoc}
							GROUP BY BARCODE_NO
						) A
						ON S.BARCODE_NO = A.BARCODE_NO
						LEFT OUTER JOIN (
							SELECT BARCODE_NO, SUM(SP_QTY) QTY
							FROM TB_STOCK_PAYMENT_ADM
							WHERE SP_GUBUN = '002'
							AND LOCATION_CD = #{item.inLoc}
							GROUP BY BARCODE_NO
						) B
						ON S.BARCODE_NO = B.BARCODE_NO
						GROUP BY S.BARCODE_NO, A.QTY, B.QTY
					) X
					ON WOM_TB.BARCODE_NO = X.BARCODE_NO
					WHERE 1=1
					AND WOM_TB.WORK_ORD_NO = #{item.workOrdNo}
					AND WOM_TB.MIDDLE_PRCSS_CD = #{item.middlePrcssCd}
					AND WOM_TB.ITEM_SEQ = @itemSeq
					AND X.TM_QTY <![CDATA[>]]> 0
					ORDER BY WOM_TB.REG_DATE
					
					IF ( @totalMatrlQty <![CDATA[<]]> @remainQty )
					BEGIN
						INSERT INTO TB_STOCK_PAYMENT_ADM (
							 SP_NO,
							 SP_SEQ,
							 SP_TYPE,
							 SP_CD,
							 SP_GUBUN,
							 SP_SUB_GUBUN,
							 SP_DATE,
							 SP_QTY,
							 BARCODE_NO,
							 SOURCE_NO,
							 LOCATION_CD,
							 LOCATION_NO,
							 REG_ID,
							 REG_DATE
						)
						VALUES     (
							@spNo
							, (
								SELECT ISNULL(MAX(SP_SEQ)+1, 0)
								FROM TB_STOCK_PAYMENT_ADM
								WHERE SP_NO = @spNo
							)
							, @spType
							, @spCd
							, '002'
							, '자재투입'
							, CONVERT(varchar(50), GETDATE(), 112)
							, @totalMatrlQty
							, @barcodeNo
							, #{item.ordLotNo}
							, #{item.inLoc}
							, #{item.locationNo}
							, #{item.regId}
							, GETDATE()
						)
						SET @remainQty = @remainQty - @totalMatrlQty
					END
					ELSE
					BEGIN
						INSERT INTO TB_STOCK_PAYMENT_ADM (
							 SP_NO,
							 SP_SEQ,
							 SP_TYPE,
							 SP_CD,
							 SP_GUBUN,
							 SP_SUB_GUBUN,
							 SP_DATE,
							 SP_QTY,
							 BARCODE_NO,
							 SOURCE_NO,
							 LOCATION_CD,
							 LOCATION_NO,
							 REG_ID,
							 REG_DATE
						)
						VALUES (
							@spNo
							, (
								SELECT ISNULL(MAX(SP_SEQ)+1, 0)
								FROM TB_STOCK_PAYMENT_ADM
								WHERE SP_NO = @spNo
							)
							, @spType
							, @spCd
							, '002'
							, '자재투입'
							, CONVERT(varchar(50), GETDATE(), 112)
							, @remainQty
							, @barcodeNo
							, #{item.ordLotNo}
							, #{item.inLoc}
							, #{item.locationNo}
							, #{item.regId}
							, GETDATE()
						)
						SET @remainQty = 0
					END
				END
				
				SET @idx = @idx + 1
			END
		</foreach>
	</insert>
	
	<!-- 자재 수불 리스트 등록 -->
	<insert id="matrlStockPaymentCreate2">
		DECLARE @idx int
		DECLARE @totalSanSangQty float
		DECLARE @consumpt float
		DECLARE @remainQty float
		DECLARE @totalMatrlQty float
		DECLARE @barcodeNo varchar(100)
		DECLARE @spCd varchar(100)
		DECLARE @spType varchar(100)
		DECLARE @spNo varchar(100)
		DECLARE @countVal varchar(100)
		DECLARE @itemSeq varchar(100)
		DECLARE @LIST_COUNT INT
		
		SELECT @spNo = CONCAT(CONVERT(varchar(50), GETDATE(), 112), '_', ISNULL(RIGHT('000000' + CAST(MAX(RIGHT(SP_NO, 6))+1 AS NVARCHAR), 6), '000001'))
		FROM TB_STOCK_PAYMENT_ADM
		WHERE SUBSTRING(SP_NO, 0, 9) = CONVERT(varchar(50), GETDATE(), 112)
		
		SET @idx = 1
		
		SELECT @countVal = COUNT(ITEM_SEQ)
		FROM TB_ITEM_MOTOR_EBOM
		WHERE UPPER_ITEM_SEQ = #{itemSeq}
		
		WHILE(@idx <![CDATA[<=]]> @countVal)
		BEGIN
			SET @totalSanSangQty = #{useQty}
			
			SELECT @consumpt = A.ITEM_CONSUMPT, @itemSeq = A.ITEM_SEQ
			FROM (
				SELECT ROW_NUMBER() OVER (ORDER BY ITEM_SEQ) ROW_NUM, ITEM_SEQ, ITEM_CONSUMPT
				FROM TB_ITEM_MOTOR_EBOM
				WHERE UPPER_ITEM_SEQ = #{itemSeq}
			) A
			WHERE ROW_NUM = @idx
			SET @remainQty = @totalSanSangQty * @consumpt
	
			WHILE( @remainQty > 0 )
			BEGIN
				SELECT  
					@LIST_COUNT=COUNT(*), @spCd = X.ITEM_SEQ, @spType = X.ITEM_GUBUN, @totalMatrlQty = X.TM_QTY, @barcodeNo = X.BARCODE_NO
				FROM (
					SELECT TOP(1)
						WOM_TB.ITEM_SEQ, IIA_TB.ITEM_GUBUN, X.TM_QTY, WOM_TB.BARCODE_NO
					FROM TB_WORK_ORDER_MATRL WOM_TB
					INNER JOIN TB_ITEM_INFO_ADM IIA_TB
					ON WOM_TB.ITEM_SEQ = IIA_TB.ITEM_SEQ
					LEFT OUTER JOIN (
						SELECT S.BARCODE_NO, ISNULL(A.QTY,0)-ISNULL(B.QTY,0) TM_QTY
						FROM TB_STOCK_PAYMENT_ADM S
						LEFT OUTER JOIN (
							SELECT BARCODE_NO, SUM(SP_QTY) QTY
							FROM TB_STOCK_PAYMENT_ADM
							WHERE SP_GUBUN = '001'
							AND LOCATION_CD = #{inLoc}
							GROUP BY BARCODE_NO
						) A
						ON S.BARCODE_NO = A.BARCODE_NO
						LEFT OUTER JOIN (
							SELECT BARCODE_NO, SUM(SP_QTY) QTY
							FROM TB_STOCK_PAYMENT_ADM
							WHERE SP_GUBUN = '002'
							AND LOCATION_CD = #{inLoc}
							GROUP BY BARCODE_NO
						) B
						ON S.BARCODE_NO = B.BARCODE_NO
						GROUP BY S.BARCODE_NO, A.QTY, B.QTY
					) X
					ON WOM_TB.BARCODE_NO = X.BARCODE_NO
					WHERE 1=1
					AND WOM_TB.WORK_ORD_NO = #{workOrdNo}
					AND WOM_TB.MIDDLE_PRCSS_CD = #{middlePrcssCd}
					AND WOM_TB.ITEM_SEQ = @itemSeq
					AND X.TM_QTY <![CDATA[>]]> 0
					ORDER BY WOM_TB.REG_DATE
				)X
				GROUP BY X.ITEM_SEQ, X.ITEM_GUBUN, X.TM_QTY, X.BARCODE_NO
				
				IF ( @LIST_COUNT <![CDATA[>]]> 0)
				BEGIN
					IF ( @totalMatrlQty <![CDATA[<]]> @remainQty )
					BEGIN
						INSERT INTO TB_STOCK_PAYMENT_ADM (
							 SP_NO,
							 SP_SEQ,
							 SP_TYPE,
							 SP_CD,
							 SP_GUBUN,
							 SP_SUB_GUBUN,
							 SP_DATE,
							 SP_QTY,
							 BARCODE_NO,
							 SOURCE_NO,
							 LOCATION_CD,
							 LOCATION_NO,
							 REG_ID,
							 REG_DATE
						)
						VALUES     (
							@spNo
							, (
								SELECT ISNULL(MAX(SP_SEQ)+1, 0)
								FROM TB_STOCK_PAYMENT_ADM
								WHERE SP_NO = @spNo
							)
							, @spType
							, @spCd
							, '002'
							, '자재투입'
							, CONVERT(varchar(50), GETDATE(), 112)
							, @totalMatrlQty
							, @barcodeNo
							, #{middlePrcssCd}
							, #{inLoc}
							, #{locationNo}
							, #{regId}
							, GETDATE()
						)
						SET @remainQty = @remainQty - @totalMatrlQty
					END
					ELSE
					BEGIN
						INSERT INTO TB_STOCK_PAYMENT_ADM (
							 SP_NO,
							 SP_SEQ,
							 SP_TYPE,
							 SP_CD,
							 SP_GUBUN,
							 SP_SUB_GUBUN,
							 SP_DATE,
							 SP_QTY,
							 BARCODE_NO,
							 SOURCE_NO,
							 LOCATION_CD,
							 LOCATION_NO,
							 REG_ID,
							 REG_DATE
						)
						VALUES (
							@spNo
							, (
								SELECT ISNULL(MAX(SP_SEQ)+1, 0)
								FROM TB_STOCK_PAYMENT_ADM
								WHERE SP_NO = @spNo
							)
							, @spType
							, @spCd
							, '002'
							, '자재투입'
							, CONVERT(varchar(50), GETDATE(), 112)
							, @remainQty
							, @barcodeNo
							, #{middlePrcssCd}
							, #{inLoc}
							, #{locationNo}
							, #{regId}
							, GETDATE()
						)
						SET @remainQty = 0
					END
				END
				ELSE
				BEGIN
					SET @remainQty = 0
				END
			END
			SET @idx = @idx + 1
		END
	</insert>
	
	<!-- 자재 수불 리스트 등록 -->
	<insert id="matrlStockMatrlCreate" parameterType="java.util.List">
		DECLARE @idx int
		DECLARE @totalSanSangQty float
		DECLARE @consumpt float
		DECLARE @remainQty float
		DECLARE @totalMatrlQty float
		DECLARE @barcodeNo varchar(100)
		DECLARE @smCd varchar(100)
		DECLARE @smType varchar(100)
		DECLARE @smNo varchar(100)
		DECLARE @countVal varchar(100)
		DECLARE @itemSeq varchar(100)
		
		SELECT @smNo = CONCAT(CONVERT(varchar(50), GETDATE(), 112), '_', ISNULL(RIGHT('000000' + CAST(MAX(RIGHT(SM_NO, 6))+1 AS NVARCHAR), 6), '000001'))
		FROM TB_STOCK_MATRL_ADM
		WHERE SUBSTRING(SM_NO, 0, 9) = CONVERT(varchar(50), GETDATE(), 112)
		
		<foreach collection="list" item="item">
			SET @idx = 1
			
			SELECT @countVal = COUNT(ITEM_SEQ)
			FROM TB_ITEM_MOTOR_EBOM
			WHERE UPPER_ITEM_SEQ = #{item.itemSeq}
				
			WHILE(@idx <![CDATA[<=]]> @countVal)	
			BEGIN
				SET @totalSanSangQty = #{item.outputQty}
				
				SELECT @consumpt = A.ITEM_CONSUMPT, @itemSeq = A.ITEM_SEQ
				FROM (
					SELECT ROW_NUMBER() OVER (ORDER BY ITEM_SEQ) ROW_NUM, ITEM_SEQ, ITEM_CONSUMPT
					FROM TB_ITEM_MOTOR_EBOM
					WHERE UPPER_ITEM_SEQ = #{item.itemSeq}
				) A
				WHERE ROW_NUM = @idx
	
				SET @remainQty = @totalSanSangQty * @consumpt
			
				WHILE( @remainQty > 0 )
				BEGIN
					SELECT TOP(1)
						@smCd = WOM_TB.ITEM_SEQ, @smType = IIA_TB.ITEM_GUBUN, @totalMatrlQty = X.TM_QTY, @barcodeNo = WOM_TB.BARCODE_NO
					FROM TB_WORK_ORDER_MATRL WOM_TB
					INNER JOIN TB_ITEM_INFO_ADM IIA_TB
					ON WOM_TB.ITEM_SEQ = IIA_TB.ITEM_SEQ
					LEFT OUTER JOIN (
						SELECT S.BARCODE_NO, ISNULL(A.QTY,0)-ISNULL(B.QTY,0) TM_QTY
						FROM TB_STOCK_PAYMENT_ADM S
						LEFT OUTER JOIN (
							SELECT BARCODE_NO, SUM(SP_QTY) QTY
							FROM TB_STOCK_PAYMENT_ADM
							WHERE SP_GUBUN = '001'
							AND (WORK_DEL_YN IS NULL OR WORK_DEL_YN != 'Y')
							AND LOCATION_CD = #{item.inLoc}
							GROUP BY BARCODE_NO
						) A
						ON S.BARCODE_NO = A.BARCODE_NO
						LEFT OUTER JOIN (
							SELECT BARCODE_NO, SUM(SM_QTY) QTY
							FROM TB_STOCK_MATRL_ADM
							WHERE SM_GUBUN = '002'
							AND LOCATION_CD = #{item.inLoc}
							GROUP BY BARCODE_NO
						) B
						ON S.BARCODE_NO = B.BARCODE_NO
						GROUP BY S.BARCODE_NO, A.QTY, B.QTY
					) X
					ON WOM_TB.BARCODE_NO = X.BARCODE_NO
					WHERE 1=1
					AND WOM_TB.WORK_ORD_NO = #{item.workOrdNo}
					AND WOM_TB.MIDDLE_PRCSS_CD = #{item.middlePrcssCd}
					AND WOM_TB.ITEM_SEQ = @itemSeq
					AND X.TM_QTY > 0
					ORDER BY WOM_TB.REG_DATE
					
					IF ( @totalMatrlQty <![CDATA[<]]> @remainQty )
					BEGIN
						INSERT INTO TB_STOCK_MATRL_ADM (
							 SM_NO,
							 SM_SEQ,
							 SM_TYPE,
							 SM_CD,
							 SM_GUBUN,
							 SM_SUB_GUBUN,
							 SM_DATE,
							 SM_QTY,
							 BARCODE_NO,
							 SOURCE_NO,
							 LOCATION_CD,
							 LOCATION_NO,
							 REG_ID,
							 REG_DATE
						)
						VALUES     (
							@smNo
							, (
								SELECT ISNULL(MAX(SM_SEQ)+1, 0)
								FROM TB_STOCK_MATRL_ADM
								WHERE SM_NO = @smNo
							)
							, @smType
							, @smCd
							, '002'
							, '자재투입'
							, CONVERT(varchar(50), GETDATE(), 112)
							, @totalMatrlQty
							, @barcodeNo
							, #{item.ordLotNo}
							, #{item.inLoc}
							, #{item.locationNo}
							, #{item.regId}
							, GETDATE()
						)
						SET @remainQty = @remainQty - @totalMatrlQty
					END
					ELSE
					BEGIN
						INSERT INTO TB_STOCK_MATRL_ADM (
							 SM_NO,
							 SM_SEQ,
							 SM_TYPE,
							 SM_CD,
							 SM_GUBUN,
							 SM_SUB_GUBUN,
							 SM_DATE,
							 SM_QTY,
							 BARCODE_NO,
							 SOURCE_NO,
							 LOCATION_CD,
							 LOCATION_NO,
							 REG_ID,
							 REG_DATE
						)
						VALUES (
							@smNo
							, (
								SELECT ISNULL(MAX(SM_SEQ)+1, 0)
								FROM TB_STOCK_MATRL_ADM
								WHERE SM_NO = @smNo
							)
							, @smType
							, @smCd
							, '002'
							, '자재투입'
							, CONVERT(varchar(50), GETDATE(), 112)
							, @remainQty
							, @barcodeNo
							, #{item.ordLotNo}
							, #{item.inLoc}
							, #{item.locationNo}
							, #{item.regId}
							, GETDATE()
						)
						SET @remainQty = 0
					END
				END
				
				SET @idx = @idx + 1
			END
		</foreach>
	</insert>
	

	<!-- LOT추적(봉제) 생산LOTNO 목록조회 -->
	<select id="lotTrackList6" resultMap="WorkOrderPrcssVo">
		SELECT 
			CONVERT(VARCHAR,WORK_START_TIME,112) WORK_START_TIME
			,IIA.ITEM_MODEL
			,(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=IIA.ITEM_MODEL AND X.BASE_GROUP_CD='099') ITEM_MODEL_NM
			,IIA.ITEM_CD
			,IIA.ITEM_NM
			,IIA.ITEM_CUS
			,(SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM X WHERE X.DEAL_CORP_CD=IIA.ITEM_CUS) ITEM_CUS_NM
			,WOP.WORK_ORD_NO
			,WOP.ORD_LOT_NO
			,ISNULL(WOP.OUTPUT_QTY,0) OUTPUT_QTY
		FROM TB_WORK_ORDER_PRCSS WOP
		LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA
		ON WOP.ITEM_SEQ=IIA.ITEM_SEQ
		WHERE 1=1
		AND IIA.MAIN_GUBUN=#{mainGubun}
		<if test="startDate!=null and !startDate.equals('')">
		AND CONVERT(VARCHAR,WORK_START_TIME,112) BETWEEN #{startDate} AND #{endDate}
		</if>
		<if test="itemCd!=null and !itemCd.equals('')">
		AND IIA.ITEM_CD=#{itemCd}
		</if>
		<if test="itemCus!=null and !itemCus.equals('')">
		AND IIA.ITEM_CUS=#{itemCus}
		</if>
	</select>
	
	<!-- LOT추적(봉제) 자재LOTNO 정보 조회 -->
	<select id="lotTrackList7" resultMap="WorkOrderPrcssVo">
		SELECT 
			BARCODE_NO,
			ITEM_MODEL,
			ITEM_MODEL_NM,
			ITEM_CD,
			ITEM_NM,
			IN_WHS_DATE,
			SUM(IN_QTY) IN_QTY,
			OUT_WHS_DATE,
			SUM(OUT_QTY) OUT_QTY
		FROM (
			SELECT 
				SMA.BARCODE_NO
				,IIA.ITEM_MODEL
				,(SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA.ITEM_MODEL AND X.BASE_GROUP_CD = '099') ITEM_MODEL_NM
				,IIA.ITEM_CD
				,IIA.ITEM_NM
				,(
					CASE WHEN CONVERT(VARCHAR,WOP.WORK_START_TIME,112) IS NULL 
					THEN (SELECT SP_DATE FROM TB_STOCK_PAYMENT_ADM WHERE BARCODE_NO=SMA.BARCODE_NO AND SP_GUBUN='001' AND SP_SUB_GUBUN IN ('초기재고','자재입고')) 
					ELSE CONVERT(VARCHAR,WOP.WORK_START_TIME,112) 
					END
				)  IN_WHS_DATE
				,(
					CASE WHEN WOP.OUTPUT_QTY IS NULL 
					THEN (SELECT SP_QTY FROM TB_STOCK_PAYMENT_ADM WHERE BARCODE_NO=SMA.BARCODE_NO AND SP_GUBUN='001' AND SP_SUB_GUBUN IN ('초기재고','자재입고')) 
					ELSE WOP.OUTPUT_QTY
					END
				)  IN_QTY
				,SMA.SM_DATE OUT_WHS_DATE
				,SMA.SM_QTY OUT_QTY
			FROM TB_STOCK_MATRL_ADM SMA
			INNER JOIN TB_ITEM_INFO_ADM IIA
			ON SMA.SM_CD=IIA.ITEM_SEQ
			LEFT OUTER JOIN TB_IN_OUT_WHS_ADM IOWA
			ON IOWA.BARCODE_NO = SMA.BARCODE_NO
			LEFT OUTER JOIN TB_WORK_ORDER_PRCSS WOP
			ON WOP.ORD_LOT_NO=SMA.BARCODE_NO
			WHERE 1=1
			AND SM_SUB_GUBUN='자재투입' 
			<if test='lotTrackGubun != null and lotTrackGubun.equals("1")'>
				<if test="ordLotNoList!=null and ordLotNoList.length>0">
					AND SMA.SOURCE_NO IN
					<foreach collection="ordLotNoList" item="arr" open="(" separator="," close=")">
					 #{arr}
					</foreach>
				</if>
				<if test="workOrdNo!=null and !workOrdNo.equals('')">
				AND SMA.SOURCE_NO=#{workOrdNo}
				</if>
			</if>
			<if test='lotTrackGubun != null and lotTrackGubun.equals("2")'>
				AND SMA.BARCODE_NO=#{barcodeNo}
			</if>
		)X 
		GROUP BY BARCODE_NO,ITEM_MODEL,ITEM_MODEL_NM,ITEM_CD,ITEM_NM,IN_WHS_DATE,OUT_WHS_DATE
	</select>
	
	<!-- LOT추적(봉제) 생산LOTNO 정보 조회 -->
	<select id="lotTrackList8" resultMap="WorkOrderPrcssVo">
		SELECT 
			SMA.BARCODE_NO
			,SMA.SOURCE_NO ORD_LOT_NO
			,IIA.ITEM_MODEL
			,(SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA.ITEM_MODEL AND X.BASE_GROUP_CD = '099') ITEM_MODEL_NM
			,IIA.ITEM_CD
			,IIA.ITEM_NM
			,CONVERT(VARCHAR,WOP.WORK_START_TIME,112) WORK_END_TIME
			,WOP.OUTPUT_QTY FAIR_QTY
			,IPCA.INSPECT_DATE
			,ICMA.INSPECT_DATE OUTPUT_INSPECT_DATE
			, DOD.OUTPUT_DATE
			, DOD.OUTPUT_QTY
		FROM TB_STOCK_MATRL_ADM SMA
		LEFT OUTER JOIN TB_WORK_ORDER_PRCSS WOP
		ON WOP.ORD_LOT_NO=SMA.SOURCE_NO
		LEFT OUTER JOIN TB_DELIVERY_ORDER_DTL DOD
		ON WOP.ORD_LOT_NO = DOD.LOT_NO
		LEFT OUTER JOIN TB_ITEM_COMPLETE_MASTER_ADM ICMA
		ON DOD.DO_NO = ICMA.DO_NO
		AND DOD.DO_NO_SEV = ICMA.DO_NO_SUB
		LEFT OUTER JOIN TB_ITEM_PRCSS_COMPLETE_ADM IPCA
		ON WOP.WORK_ORD_NO = IPCA.WORK_ORD_NO
		AND CONVERT(CHAR(8), WOP.WORK_END_TIME, 112) = IPCA.WORK_END_TIME
		LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA
		ON WOP.ITEM_SEQ=IIA.ITEM_SEQ
		WHERE 1=1
		AND SM_SUB_GUBUN='자재투입'  
		<if test='lotTrackGubun != null and lotTrackGubun.equals("2")'>
			AND SMA.BARCODE_NO=#{barcodeNo}
		</if>
	</select>
	
	<!-- LOT추적(봉제) 출하LOTNO 정보 조회 -->
	<select id="lotTrackList9" resultMap="WorkOrderPrcssVo">
		SELECT 
			SPA.BARCODE_NO
			,SPA.SOURCE_NO ORD_LOT_NO
			,IIA.ITEM_MODEL
			,(SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA.ITEM_MODEL AND X.BASE_GROUP_CD = '099') ITEM_MODEL_NM
			,IIA.ITEM_CD
			,IIA.ITEM_NM
			,DOD.OUTPUT_QTY
			,DOD.OUTPUT_DATE
			,ICMA.INSPECT_DATE OUTPUT_INSPECT_DATE
		FROM TB_STOCK_PAYMENT_ADM SPA
		LEFT OUTER JOIN TB_DELIVERY_ORDER_DTL DOD
		ON SPA.SOURCE_NO = DOD.LOT_NO
		LEFT OUTER JOIN TB_ITEM_COMPLETE_MASTER_ADM ICMA
		ON DOD.DO_NO = ICMA.DO_NO
		AND DOD.DO_NO_SEV = ICMA.DO_NO_SUB
		LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA
		ON DOD.ITEM_SEQ=IIA.ITEM_SEQ
		WHERE 1=1
		AND SP_SUB_GUBUN='자재투입' 
		<if test='lotTrackGubun != null and lotTrackGubun.equals("2")'>
			AND SPA.BARCODE_NO=#{barcodeNo}
		</if>
	</select>
	
</mapper>
