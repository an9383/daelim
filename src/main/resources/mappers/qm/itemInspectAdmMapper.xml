<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  	
<mapper namespace="mes.mappers.qm.itemInspectAdmMapper">

	<resultMap id="ItemInspectAdmVo" type="mes.domain.qm.ItemInspectAdmVo">
		<result property="poNo"					column="PO_NO"				/>
		<result property="poSeq"		   		column="PO_SEQ"				/>
		<result property="inSeq"		    	column="IN_SEQ"				/>
		<result property="itemSeq"		        column="ITEM_SEQ"			/>
		<result property="itemCd"				column="ITEM_CD"			/>				
		<result property="itemNm"				column="ITEM_NM"			/>			
		<result property="itemModel"			column="ITEM_MODEL"			/>			
		<result property="itemUnit"				column="ITEM_UNIT"			/>				
		<result property="itemGubun"			column="ITEM_GUBUN"			/>				
		<result property="partCd"		        column="PART_CD"			/>
		<result property="partRev"				column="PART_REV"			/>				
		<result property="inspectLvl"			column="INSPECT_LVL"		/>
		<result property="inspectCnt"			column="INSPECT_CNT"		/>
		<result property="pairCnt"				column="PAIR_CNT"			/>
		<result property="faultyCnt"			column="FAULTY_CNT"			/>	
		<result property="outputCnt"			column="OUTPUT_CNT"			/>
		<result property="outputDate"			column="OUTPUT_DATE"			/>
		<result property="inspectDate"			column="INSPECT_DATE"		/>			
		<result property="inspectChargr"		column="INSPECT_CHARGR"		/>
		<result property="inspectChargrNm"		column="INSPECT_CHARGR_NM"	/>
		<result property="qaEval"				column="QA_EVAL"			/>
		<result property="inspectDesc"			column="INSPECT_DESC"		/>
		<result property="matrlFileNm"			column="MATRL_FILE_NM"		/>
		<result property="surfaceFileNm"		column="SURFACE_FILE_NM"	/>
		<result property="heatFileNm"			column="HEAT_FILE_NM"		/>
		<result property="productFileNm"		column="PRODUCT_FILE_NM"	/>
		
		<result property="inspectYn"			column="INSPECT_YN"			/>
		<result property="preInWhsDate"			column="PRE_IN_WHS_DATE"	/>
		<result property="dealCorpNm"			column="DEAL_CORP_NM"		/>				
		<result property="partNm"				column="PART_NM"			/>
		<result property="partSpec"				column="PART_SPEC"			/>		
		<result property="preInWhsQty"			column="PRE_IN_WHS_QTY"		/>
		<result property="partUnit"				column="PART_UNIT"			/>	
		<result property="partGubun"			column="PART_GUBUN"			/>	
		<result property="receiptGubun"			column="RECEIPT_GUBUN"		/>
		<result property="statusCd"				column="STATUS_CD"			/>	
		<result property="approvalCd"			column="APPROVAL_CD"		/>
		<result property="approvalYn"			column="APPROVAL_YN"		/>
		
		<result property="mainGubun"			column="MAIN_GUBUN"			/>
			
		<result property="value"				column="VALUE"				/>
		
		<result property="faultyRate"			column="FAULTY_RATE"		/>		
		<result property="targetRate"			column="TARGET_RATE"		/>	
		<result property="achvRate"				column="ACHV_RATE"			/>
		
		<result property="faultyTypeCd"			column="FAULTY_TYPE_CD"		/>	
		<result property="faultyTypeSeq"		column="FAULTY_TYPE_SEQ"	/>	
		<result property="faultyTypeNm"			column="FAULTY_TYPE_NM"		/>		
		<result property="faultyTypeQty"		column="FAULTY_TYPE_QTY"	/>	
		<result property="faultyTypeDate"		column="FAULTY_TYPE_DATE"	/>	
		<result property="faultyTypeDesc"		column="FAULTY_TYPE_DESC"	/>	
		<result property="faultyTypeTotal"		column="FAULTY_TYPE_TOTAL"	/>	
		<result property="etc1"					column="ETC1"				/>	
		<result property="faultyTypeRate"		column="FAULTY_TYPE_RATE"	/>		
		<result property="reportsFileNm"		column="REPORTS_FILE_NM"	/>
		
		<result property="qcObjYear"	 		column="QC_OBJ_YEAR"		/>
		<result property="qcObjGubun"			column="QC_OBJ_GUBUN"		/>
		<result property="qcObjMon"	 			column="QC_OBJ_MON"			/>
		<result property="qcObjValue"	 		column="QC_OBJ_VALUE"		/>
	
		<result property="spplyCorpCd"			column="SPPLY_CORP_CD"		/> 
		<result property="spplyCorpNm"			column="SPPLY_CORP_NM"		/>
		
		<result property="returnQty"			column="RETURN_QTY"			/>
		<result property="returnDate"			column="RETURN_DATE"		/>
		<result property="faultyChargrNm"		column="FAULTY_CHARGR_NM"	/>  
		<result property="barcodeNo"			column="BARCODE_NO"			/> 
		<result property="cavityCnt"			column="CAVITY_CNT"			/> 
		<result property="defectLotNo"			column="DEFECT_LOT_NO"		/>
		
		<result property="imageFile1"			column="IMAGE_FILE1"		/>
		<result property="imageFile2"			column="IMAGE_FILE2"		/>
		<result property="imageFile3"			column="IMAGE_FILE3"		/>
		<result property="imageFile4"			column="IMAGE_FILE4"		/>
		<result property="imageFile1Nm"			column="IMAGE_FILE1_NM"		/>
		<result property="imageFile2Nm"			column="IMAGE_FILE2_NM"		/>
		<result property="imageFile3Nm"			column="IMAGE_FILE3_NM"		/>
		<result property="imageFile4Nm"			column="IMAGE_FILE4_NM"		/>
		
		<result property="startDate"			column="START_DATE"			/>		
		<result property="endDate"				column="END_DATE"			/>	
		<result property="regId"				column="REG_ID"				/>
		<result property="regDate"				column="REG_DATE"			/>
		<result property="updId"				column="UPD_ID"				/>				
		<result property="updDate"				column="UPD_DATE"			/>
		
	</resultMap>

	<!--수입검사 목록조회 -->
	<select id="itemInspectAdmList" resultMap="ItemInspectAdmVo">
		SELECT 
			A.PO_NO
			, A.PO_SEQ
			, A.IN_SEQ
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=Z.ITEM_GUBUN AND X.BASE_GROUP_CD='110') ITEM_GUBUN
			, A.PRE_IN_WHS_DATE
			, (SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM X WHERE X.DEAL_CORP_CD=(SELECT DEAL_CORP_CD FROM TB_PURCHASE_ORDER_ADM Y WHERE Y.PO_NO=A.PO_NO))DEAL_CORP_NM
			, A.SPPLY_CORP_CD
			, (SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM X WHERE X.DEAL_CORP_CD=A.SPPLY_CORP_CD)SPPLY_CORP_NM
			, A.BARCODE_NO
			, A.ITEM_SEQ
			, Z.ITEM_CD
			, Z.ITEM_NM
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=Z.ITEM_MODEL AND X.BASE_GROUP_CD='099') ITEM_MODEL
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=(SELECT RECEIPT_GUBUN FROM TB_PURCHASE_ORDER_ADM Y WHERE Y.PO_NO=A.PO_NO ) AND X.BASE_GROUP_CD='051')RECEIPT_GUBUN
			, A.PRE_IN_WHS_QTY
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=Z.ITEM_UNIT AND X.BASE_GROUP_CD='036')ITEM_UNIT
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=B.INSPECT_LVL AND X.BASE_GROUP_CD='054')INSPECT_LVL
			, B.PAIR_CNT
			, B.FAULTY_CNT
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=B.QA_EVAL AND X.BASE_GROUP_CD='053')QA_EVAL
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=B.INSPECT_DESC AND X.BASE_GROUP_CD='052')INSPECT_DESC
			, A.STATUS_CD
			, C.RETURN_QTY
		FROM TB_ITEM_INFO_ADM Z
		INNER JOIN TB_IN_OUT_WHS_ADM A 
		ON A.ITEM_SEQ=Z.ITEM_SEQ
		LEFT OUTER JOIN TB_ITEM_INSPECT_ADM B
		ON A.PO_NO=B.PO_NO
		AND A.PO_SEQ=B.PO_SEQ
		AND A.IN_SEQ=B.IN_SEQ
		LEFT OUTER JOIN TB_ITEM_FAULTY_JDG_ADM C
		ON A.PO_NO=C.PO_NO
		AND A.PO_SEQ=C.PO_SEQ
		AND A.IN_SEQ=C.IN_SEQ
		WHERE 1=1
		AND PRE_IN_WHS_DATE BETWEEN #{startDate} AND #{endDate}
		AND Z.IMPORT_YN = '001'
		ORDER BY PO_NO DESC
	</select>
	
	<!-- 수입검사팝업 목록 조회 -->
	<select id="itemInspectAdmPopUpList" resultMap="ItemInspectAdmVo">
		SELECT
			A.ITEM_SEQ
			, A.INSPECT_YN
			, Z.IMPORT_YN
			, Z.ITEM_CD
			, Z.ITEM_NM
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=Z.ITEM_MODEL AND X.BASE_GROUP_CD='099')ITEM_MODEL
			, B.FAULTY_CNT
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=B.QA_EVAL AND X.BASE_GROUP_CD='053')QA_EVAL
			, A.STATUS_CD
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=Z.ITEM_GUBUN AND X.BASE_GROUP_CD='110') ITEM_GUBUN
			, A.PRE_IN_WHS_DATE
			, (SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM X WHERE X.DEAL_CORP_CD=(SELECT DEAL_CORP_CD FROM TB_PURCHASE_ORDER_ADM Y WHERE Y.PO_NO=A.PO_NO))DEAL_CORP_NM
			, A.PRE_IN_WHS_QTY
			FROM TB_IN_OUT_WHS_ADM A
			LEFT OUTER JOIN TB_ITEM_INSPECT_ADM B
			ON A.PO_NO=B.PO_NO
			AND A.PO_SEQ=B.PO_SEQ
			AND A.IN_SEQ=B.IN_SEQ
			LEFT OUTER JOIN TB_ITEM_INFO_ADM Z
			ON A.ITEM_SEQ=Z.ITEM_SEQ
			WHERE 1=1
			AND FAULTY_CNT > 0
			AND A.ITEM_SEQ = #{itemSeq}
			AND B.INSPECT_DATE BETWEEN 0 AND #{inspectDate}
	</select>
	
	<!-- 수입검사팝업(반품) 목록 조회 -->
	<select id="itemInspectReturnPopUpList" resultMap="ItemInspectAdmVo">
		SELECT 
			A.ITEM_SEQ
			, A.PO_NO
			, A.IN_SEQ
			, C.ITEM_CD
			, C.ITEM_NM
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=C.ITEM_MODEL AND X.BASE_GROUP_CD='099')ITEM_MODEL
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=C.ITEM_GUBUN AND X.BASE_GROUP_CD='110') ITEM_GUBUN
			, B.FAULTY_CHARGR
			, (SELECT USER_NM FROM TB_USER X WHERE X.USER_NUMBER=FAULTY_CHARGR) FAULTY_CHARGR_NM
			, B.PO_NO
			, B.IN_SEQ
			, B.RETURN_QTY
			, B.RETURN_DATE
		FROM TB_ITEM_INSPECT_ADM A
		LEFT OUTER JOIN TB_ITEM_FAULTY_JDG_ADM B
		ON A.PO_NO=B.PO_NO
		AND A.PO_SEQ=B.PO_SEQ
		AND A.IN_SEQ=B.IN_SEQ
		LEFT OUTER JOIN TB_ITEM_INFO_ADM C
		ON A.ITEM_SEQ = C.ITEM_SEQ
		WHERE 1=1
		AND B.RETURN_QTY > 0
		AND A.ITEM_SEQ = #{partCd}
		AND A.INSPECT_DATE BETWEEN 0 AND #{inspectDate}
	</select>
	
	<!--수입검사 수량조회 -->
	<select id="itemInspectQtyRead" resultMap="ItemInspectAdmVo">
		SELECT 
			IN_SLIP_NO,
			ISNULL(SUM(PRE_IN_WHS_QTY),0) PRE_IN_WHS_QTY,
			CONVERT(FLOAT,ISNULL(SUM(PRE_IN_WHS_QTY),0)) - CONVERT(FLOAT,ISNULL(SUM(FAULTY_QTY),0))  PAIR_CNT,
			ISNULL(SUM(FAULTY_QTY),0) FAULTY_CNT
		FROM TB_IN_OUT_WHS_ADM 
		GROUP BY IN_SLIP_NO
		HAVING 1=1
		AND IN_SLIP_NO = #{inSlipNo}

	</select>
	
	
	<!--수입검사 상세조회 -->
	<select id="itemInspectAdmRead" resultMap="ItemInspectAdmVo">
		SELECT 
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=ITEM_GUBUN AND X.BASE_GROUP_CD='110') ITEM_GUBUN
			, PRE_IN_WHS_DATE
			, (SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM X WHERE X.DEAL_CORP_CD=(SELECT DEAL_CORP_CD FROM TB_PURCHASE_ORDER_ADM Y WHERE Y.PO_NO=A.PO_NO))DEAL_CORP_NM
			, A.SPPLY_CORP_CD
			, (SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM X WHERE X.DEAL_CORP_CD=A.SPPLY_CORP_CD)SPPLY_CORP_NM
			, A.ITEM_SEQ
			, C.ITEM_CD
			, C.ITEM_NM
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=C.ITEM_MODEL AND X.BASE_GROUP_CD='099') ITEM_MODEL
			, A.PO_NO
			, A.PO_SEQ
			, A.IN_SEQ
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=(SELECT RECEIPT_GUBUN FROM TB_PURCHASE_ORDER_ADM Y WHERE Y.PO_NO=A.PO_NO) AND X.BASE_GROUP_CD='051')RECEIPT_GUBUN
			, A.PRE_IN_WHS_QTY
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=C.ITEM_UNIT AND X.BASE_GROUP_CD='036')ITEM_UNIT
			, B.PAIR_CNT
			, B.FAULTY_CNT
			, B.QA_EVAL
<!-- 			, B.MATRL_FILE_NM -->
<!-- 			, B.SURFACE_FILE_NM -->
<!-- 			, B.HEAT_FILE_NM -->
<!-- 			, B.PRODUCT_FILE_NM -->
<!-- 			, B.REPORTS_FILE_NM -->
		FROM TB_IN_OUT_WHS_ADM A 
		LEFT OUTER JOIN TB_ITEM_INSPECT_ADM B
		ON A.PO_NO=B.PO_NO
		AND A.PO_SEQ=B.PO_SEQ
		AND A.IN_SEQ=B.IN_SEQ
		LEFT OUTER JOIN TB_ITEM_INFO_ADM C
		ON A.ITEM_SEQ=C.ITEM_SEQ
		WHERE A.PO_NO = #{poNo}
		AND A.PO_SEQ = #{poSeq}
		AND A.IN_SEQ = #{inSeq}
	</select>
	
	
	<!-- 수입검사 등록 -->
	<insert id="itemInspectAdmCreate">
		INSERT INTO TB_ITEM_INSPECT_ADM		(
		    IN_SLIP_NO,
		    IN_SLIP_SEQ,
			ITEM_SEQ,
			PAIR_CNT,
			FAULTY_CNT,
			QA_EVAL,
			DEFECT_LOT_NO,
			REG_ID,
			REG_DATE
		) 
		VALUES(
			#{inSlipNo},
			#{inSlipSeq},
			#{itemSeq},
			#{pairCnt},
			#{faultyCnt},
			#{qaEval},
			#{defectLotNo},
			#{regId},
			getDate()
		)
	</insert>
	
	<!-- 수입검사 다중등록 -->
	<insert id="itemInspectAdmListCreate" parameterType="java.util.List">
		INSERT INTO TB_ITEM_INSPECT_ADM		(
		    IN_SLIP_NO,
		    IN_SLIP_SEQ,
			ITEM_SEQ,
			PAIR_CNT,
			FAULTY_CNT,
			QA_EVAL,
			DEFECT_LOT_NO,
			REG_ID,
			REG_DATE
		) 
		VALUES
		<foreach collection="list" item="item" separator="," >
		(
			#{item.inSlipNo},
			#{item.inSlipSeq},
			#{item.itemSeq},
			#{item.pairCnt},
			#{item.faultyCnt},
			#{item.qaEval},
			#{item.defectLotNo},
			#{item.regId},
			getDate()
		)
		</foreach>
		
	</insert>
	
	<!-- 수입검사 수정 -->
	<update id="itemInspectAdmUpdate">
		UPDATE	TB_ITEM_INSPECT_ADM		 
		SET	
			PAIR_CNT = #{pairCnt},
			FAULTY_CNT = #{faultyCnt},
			QA_EVAL = #{qaEval},
			<if test="defectLotNo!=null and !defectLotNo.equals('') ">
			DEFECT_LOT_NO = #{defectLotNo},
			</if>
			<if test="matrlFileNm!=null and !matrlFileNm.equals('') ">
			MATRL_FILE_NM = #{matrlFileNm},
			</if>
			<if test="surfaceFileNm!=null and !surfaceFileNm.equals('') ">
			SURFACE_FILE_NM = #{surfaceFileNm},
			</if>
			<if test="heatFileNm!=null and !heatFileNm.equals('') ">
			HEAT_FILE_NM = #{heatFileNm},
			</if>
			<if test="productFileNm!=null and !productFileNm.equals('') ">
			PRODUCT_FILE_NM = #{productFileNm},
			</if>
			<if test="reportsFileNm!=null and !reportsFileNm.equals('') ">
			REPORTS_FILE_NM = #{reportsFileNm},
			</if>
			UPD_ID = #{updId},
			UPD_DATE = getDate()
		WHERE	IN_SLIP_NO = #{inSlipNo}
		AND	IN_SLIP_SEQ = #{inSlipSeq}
	</update>
	
	<!--수입검사 마스터 등록-->
	<insert id="itemInspectMasterCreate">
		INSERT INTO TB_ITEM_INSPECT_MASTER_ADM(
			IN_SLIP_NO,
			ITEM_SEQ,
			INSPECT_CNT,
			INSPECT_DATE,
			INSPECT_CHARGR,
			QA_EVAL,
			APPROVAL_YN,
			CAVITY_CNT,
			INSPECT_DESC,
			REG_ID,
			REG_DATE
		) 
		VALUES(
			#{inSlipNo},
			#{itemSeq},
			#{inspectCnt},
			#{inspectDate},
			#{inspectChargr},
			#{qaEval},
			#{approvalYn},
			#{cavityCnt},
			#{inspectDesc},
			#{regId},
			GETDATE()
		)
	</insert>
	
	<!-- 수입검사 삭제 -->
	<delete id="itemInspectAdmDelete">
		DELETE FROM TB_ITEM_INSPECT_ADM
		WHERE 1=1
		AND IN_SLIP_NO= #{inSlipNo}
		<if test="inSlipSeq!=null and !inSlipSeq.equals('')">
		AND IN_SLIP_SEQ = #{inSlipSeq} 
		</if>
	</delete>
	
	<!-- 수입검사 삭제 -->
	<delete id="itemInspectMasterAdmDelete">
		DELETE FROM TB_ITEM_INSPECT_MASTER_ADM
		WHERE 1=1
		AND IN_SLIP_NO= #{inSlipNo}
	</delete>
	
	<!--수입검사 마스터 수정 -->
	<update id="itemInspectMasterUpdate">
		UPDATE	TB_ITEM_INSPECT_MASTER_ADM 
		<set>
			<if test="inspectCnt!=null and !inspectCnt.equals('') ">
			INSPECT_CNT = #{inspectCnt},
			</if>
			<if test="inspectDate!=null and !inspectDate.equals('') ">
			INSPECT_DATE = #{inspectDate},
			</if>
			<if test="inspectChargr!=null and !inspectChargr.equals('') ">
			INSPECT_CHARGR = #{inspectChargr},
			</if>
			QA_EVAL = #{qaEval},
			<if test="approvalYn!=null and !approvalYn.equals('') ">
			APPROVAL_YN = #{approvalYn},
			</if>
			<if test="inspectDesc!=null and !inspectDesc.equals('') ">
			INSPECT_DESC = #{inspectDesc},
			</if>
			<if test="cavityCnt!=null and !cavityCnt.equals('') ">
			CAVITY_CNT = #{cavityCnt},
			</if>
			UPD_ID = #{updId},
			UPD_DATE = GETDATE()
		</set>
		WHERE 1=1
		AND IN_SLIP_NO = #{inSlipNo}
	</update>

	<!-- 수입검사 성적서 삭제 -->
	<update id="inspectFileDelete"  >
		UPDATE TB_ITEM_INSPECT_ADM SET PO_NO=#{poNo}
		<if test="value == 1">
			, MATRL_FILE_NM = ''  
		</if>
		<if test="value == 2">
			, SURFACE_FILE_NM = ''  
		</if>
		<if test="value == 3">
			, HEAT_FILE_NM = ''  
		</if>
		<if test="value == 4">
			, PRODUCT_FILE_NM = ''  
		</if>
		<if test="value == 5">
			, REPORTS_FILE_NM = ''  
		</if>
		
		WHERE PO_NO=#{poNo} 
		AND PO_SEQ=#{poSeq} 
		AND IN_SEQ=#{inSeq}
	</update>
	
	<!-- 수입검사 성적서 파일명 가져오기 -->
	<select id="getInspectFileNm" resultMap="ItemInspectAdmVo">
		SELECT MATRL_FILE_NM,
			   SURFACE_FILE_NM,
			   HEAT_FILE_NM,
			   REPORTS_FILE_NM,
			   PRODUCT_FILE_NM
		FROM TB_ITEM_INSPECT_ADM 
		WHERE PO_NO=#{poNo} 
		AND PO_SEQ=#{poSeq} 
		AND IN_SEQ=#{inSeq}
	</select>
	
		
	<!-- 입출고관리 수정 -->
	<update id="inOutWhsAdmUpdate">
		UPDATE TB_IN_OUT_WHS_ADM 
		<set>
			<if test="pairCnt != null and !pairCnt.equals('')">
				FAULTY_QTY = #{faultyCnt},
			</if>
			<if test="statusCd != null and !statusCd.equals('')">
				STATUS_CD = #{statusCd}, 
			</if>
			<if test="approvalCd != null and !approvalCd.equals('')">
				APPROVAL_CD = #{approvalCd}, 
			</if>
			<if test="inspectDate != null and !inspectDate.equals('')">
				INSPECT_DATE = #{inspectDate} 
			</if>
		</set>
		WHERE 1=1
		AND IN_SLIP_NO = #{inSlipNo}
		AND	IN_SLIP_SEQ = #{inSlipSeq}
	</update>
	
	
	<!-- 입출고관리 다중수정 -->
	<update id="inOutWhsAdmListUpdate">
		<foreach collection="list" item="item">
			UPDATE TB_IN_OUT_WHS_ADM 
			<set>
				<if test="item.pairCnt != null and !item.pairCnt.equals('')">
					FAULTY_QTY = #{item.faultyCnt},
				</if>
				<if test="item.statusCd != null and !item.statusCd.equals('')">
					STATUS_CD = #{item.statusCd}, 
				</if>
				<if test="item.approvalCd != null and !item.approvalCd.equals('')">
					APPROVAL_CD = #{item.approvalCd}, 
				</if>
				<if test="item.inspectDate != null and !item.inspectDate.equals('')">
					INSPECT_DATE = #{item.inspectDate} 
				</if>
			</set>
			WHERE 1=1
			AND IN_SLIP_NO = #{item.inSlipNo}
			AND	IN_SLIP_SEQ = #{item.inSlipSeq}
		</foreach>
	</update>
	

	<!-- 수입검사 자재상태 확인 -->
	<select id="statusCdCheck" resultType="String">
		SELECT STATUS_CD 
		FROM TB_IN_OUT_WHS_ADM 
		WHERE 1=1
		AND IN_SLIP_NO = #{inSlipNo}
		AND	IN_SLIP_SEQ = #{inSlipSeq}
	</select>
	
	
	
	<!--수입검사 불량유형조회 -->
	<select id="itemInspectFaultyTypeList" resultMap="ItemInspectAdmVo">
		SELECT A.BASE_INFO_CD FAULTY_TYPE_CD,
			   A.BASE_INFO_NM FAULTY_TYPE_NM,
			   A.ETC1,
			   B.FAULTY_TYPE_QTY,
			   B.FAULTY_TYPE_DATE,
			   B.FAULTY_TYPE_DESC
		FROM TB_BASE_INFO_ADM A
		LEFT OUTER JOIN TB_ITEM_INSPECT_FAULTY_TYPE B
		ON A.BASE_INFO_CD=B.FAULTY_TYPE_CD
		AND IN_SLIP_NO=#{inSlipNo}
		AND IN_SLIP_SEQ=#{inSlipSeq}
		WHERE A.BASE_INFO_TYPE = 'FT'
		AND A.BASE_INFO_GUBUN = '001'
		ORDER BY A.ETC1 ASC
	</select>
	
	
	<!--수입검사 불량유형조회 -->
	<select id="itemInspectFaultyTypeRead" resultMap="ItemInspectAdmVo">
		SELECT A.BASE_INFO_CD FAULTY_TYPE_CD,
			   A.BASE_INFO_NM FAULTY_TYPE_NM,
			   A.ETC1,
			   B.FAULTY_TYPE_QTY,
			   B.FAULTY_TYPE_DATE,
			   B.FAULTY_TYPE_DESC
		FROM TB_BASE_INFO_ADM A
		LEFT OUTER JOIN TB_ITEM_INSPECT_FAULTY_TYPE B
		ON A.BASE_INFO_CD=B.FAULTY_TYPE_CD
		AND PO_NO=#{poNo}
		AND PO_SEQ=#{poSeq}
		AND IN_SEQ=#{inSeq}
		WHERE A.BASE_INFO_TYPE='FT'
		AND A.BASE_INFO_GUBUN='001'
		AND FAULTY_TYPE_QTY > 0
		ORDER BY ETC1 ASC
	</select>
	
	<!--수입검사 불량유형등록 -->
	<insert id="itemInspectFaultyTypeCreate">
		INSERT INTO TB_ITEM_INSPECT_FAULTY_TYPE (
			IN_SLIP_NO,
            IN_SLIP_SEQ,
            ITEM_SEQ,
            FAULTY_TYPE_CD,
            FAULTY_TYPE_QTY,
            FAULTY_TYPE_DATE,
            FAULTY_TYPE_DESC,
            REG_ID,
            REG_DATE
        )
		VALUES     (
			#{inSlipNo},
            #{inSlipSeq},
            #{itemSeq},
            #{faultyTypeCd},
            #{faultyTypeQty},
            #{faultyTypeDate},
            #{faultyTypeDesc},
            #{regId},
           	GETDATE()
        ) 
	</insert>
	
	<!--수입검사 불량유형수정 -->
	<update id="itemInspectFaultyTypeUpdate">
		UPDATE TB_ITEM_INSPECT_FAULTY_TYPE	
		SET   
		       FAULTY_TYPE_QTY = #{faultyTypeQty},
		       FAULTY_TYPE_DATE = #{faultyTypeDate},
		       FAULTY_TYPE_DESC = #{faultyTypeDesc},
		       UPD_ID = #{updId},
		       UPD_DATE = GETDATE()
		WHERE  PO_NO = #{poNo}
		       AND PO_SEQ = #{poSeq}
		       AND IN_SEQ =  #{inSeq}
		       FAULTY_TYPE_CD = #{faultyTypeCd}
	</update>
	
	<!-- 수입검사 불량유형삭제 -->
	<delete id="itemInspectFaultyTypeDelete">
		DELETE FROM TB_ITEM_INSPECT_FAULTY_TYPE
		WHERE 1=1
		AND IN_SLIP_NO= #{inSlipNo}
		<if test="inSlipSeq!=null and !inSlipSeq.equals('')">
		AND IN_SLIP_SEQ = #{inSlipSeq} 
		</if>
		
	</delete>
	
		
	<!-- 수입검사 등록여부 -->
	<select id="countInspectAdmList" resultType="int">
		SELECT 
			COUNT(*)
		FROM TB_ITEM_INSPECT_ADM
		WHERE 1=1
		AND IN_SLIP_NO=#{inSlipNo}
		<if test="inSlipSeq!=null and !inSlipSeq.equals('')">
		AND IN_SLIP_SEQ=#{inSlipSeq} 
		</if>
		
	</select>
	
	<!-- ************************************ 모니터링 *********************** -->
	
	<!-- 수입검사 품질경향 분석 목록조회 -->
	<select id="qualityTrendAnlyList" resultMap="ItemInspectAdmVo">
		SELECT	
			QC_OBJ_YEAR,
			QC_OBJ_MON,
			FORMAT(ISNULL(SUM(A.PRE_IN_WHS_QTY),0), '##0.###') PRE_IN_WHS_QTY,
			FORMAT(ISNULL(SUM(B.PAIR_CNT),0), '##0.###') PAIR_CNT,
			FORMAT(ISNULL(SUM(B.FAULTY_CNT),0), '##0.###') FAULTY_CNT,
			CONCAT(ISNULL(ROUND(CONVERT(FLOAT,SUM(B.FAULTY_CNT))/CONVERT(FLOAT,SUM(A.PRE_IN_WHS_QTY))*100,3),0),'%') FAULTY_RATE,
			FORMAT(C.QC_OBJ_VALUE, '##0.###') TARGET_RATE,
			(CASE WHEN CONVERT(FLOAT,SUM(B.FAULTY_CNT))/CONVERT(FLOAT,SUM(A.PRE_IN_WHS_QTY)) <![CDATA[<=]]> C.QC_OBJ_VALUE THEN '100%'
				 ELSE CONCAT(ISNULL(ROUND((C.QC_OBJ_VALUE/(CONVERT(FLOAT,SUM(B.FAULTY_CNT))/CONVERT(FLOAT,SUM(A.PRE_IN_WHS_QTY)))) * 100,3),0),'%')
				 END) ACHV_RATE
		FROM TB_ITEM_INSPECT_ADM B
		LEFT OUTER JOIN TB_IN_OUT_WHS_ADM A
		ON A.IN_SLIP_NO=B.IN_SLIP_NO
		AND A.IN_SLIP_SEQ=B.IN_SLIP_SEQ
		LEFT OUTER JOIN (SELECT QC_OBJ_YEAR,
			QC_OBJ_MON,
			QC_OBJ_VALUE
			FROM TB_QC_OBJECTIVE_ADM
			WHERE QC_OBJ_GUBUN='001'
			GROUP BY QC_OBJ_YEAR, QC_OBJ_MON, QC_OBJ_VALUE
			HAVING  QC_OBJ_YEAR LIKE #{qcObjYear}
		)C
		ON  SUBSTRING(A.PRE_IN_WHS_DATE,0,5)=C.QC_OBJ_YEAR
		AND SUBSTRING(A.PRE_IN_WHS_DATE,5,2)=C.QC_OBJ_MON
		LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA
		ON B.ITEM_SEQ=IIA.ITEM_SEQ
		WHERE 1=1
		AND IIA.MAIN_GUBUN=#{mainGubun}
		GROUP BY QC_OBJ_YEAR ,QC_OBJ_MON ,C.QC_OBJ_VALUE
		HAVING QC_OBJ_YEAR LIKE #{qcObjYear}
	</select>
	
	
	<!-- 수입검사현황(월별) -->
	<!-- <select id="qualityTrendAnlyList11" resultMap="ItemInspectAdmVo">
		SELECT
			QC_OBJ_YEAR,
			QC_OBJ_MON,
			D.PRE_IN_WHS_QTY,
			ISNULL(D.PRE_IN_WHS_QTY, 0) - ISNULL(D.FAULTY_QTY, 0) PAIR_CNT,
			ISNULL(D.FAULTY_QTY, 0) FAULTY_CNT,
			CONCAT(ISNULL(ROUND(CONVERT(FLOAT,SUM(B.FAULTY_CNT))/CONVERT(FLOAT,SUM(A.PRE_IN_WHS_QTY))*100,3),0),'%') FAULTY_RATE,
			C.QC_OBJ_VALUE TARGET_RATE
		FROM
			(SELECT QC_OBJ_YEAR,
					QC_OBJ_MON,
					QC_OBJ_VALUE
					FROM TB_QC_OBJECTIVE_ADM
					WHERE QC_OBJ_GUBUN='001'
					GROUP BY QC_OBJ_YEAR, QC_OBJ_MON, QC_OBJ_VALUE
					HAVING  QC_OBJ_YEAR LIKE #{qcObjYear})C
		LEFT OUTER JOIN TB_IN_OUT_WHS_ADM A
				ON  SUBSTRING(A.PRE_IN_WHS_DATE,0,5)=C.QC_OBJ_YEAR
				AND SUBSTRING(A.PRE_IN_WHS_DATE,5,2)=C.QC_OBJ_MON
		LEFT OUTER JOIN TB_ITEM_INSPECT_ADM B
				ON A.IN_SLIP_NO=B.IN_SLIP_NO
				AND A.IN_SLIP_SEQ=B.IN_SLIP_SEQ
		, TB_IN_OUT_WHS_ADM IN_TB
		LEFT OUTER JOIN(
					SELECT 
						Z.IN_SLIP_NO,
						SUM(PRE_IN_WHS_QTY) PRE_IN_WHS_QTY,
						SUM(IN_WHS_QTY) IN_WHS_QTY,
						SUM(FAULTY_QTY) FAULTY_QTY,
						MAX(PRE_IN_WHS_DATE) PRE_IN_WHS_DATE,
						MAX(IN_WHS_DATE) IN_WHS_DATE,
						CASE WHEN COUNT(*) = (
							SELECT COUNT(*)
							FROM TB_IN_OUT_WHS_ADM 
							GROUP BY IN_SLIP_NO,APPROVAL_CD
							HAVING APPROVAL_CD = '001'
							AND IN_SLIP_NO = Z.IN_SLIP_NO
						) THEN '검사완료' ELSE '진행중' END STATUS_CD
					FROM TB_IN_OUT_WHS_ADM Z
					GROUP BY Z.IN_SLIP_NO
		)D
		ON D.IN_SLIP_NO=IN_TB.IN_SLIP_NO
		GROUP BY QC_OBJ_YEAR ,QC_OBJ_MON ,C.QC_OBJ_VALUE
		HAVING QC_OBJ_YEAR LIKE #{qcObjYear}

	</select> -->
	
	<!-- 원인별 불량누적현황 -->
	<select id="faultyStatusList" resultMap="ItemInspectAdmVo">
		SELECT SUBSTRING(A.FAULTY_TYPE_DATE,0,7) FAULTY_TYPE_DATE,
		FAULTY_TYPE_CD,
		(SELECT BASE_INFO_NM FROM TB_BASE_INFO_ADM X WHERE X.BASE_INFO_CD=FAULTY_TYPE_CD AND X.BASE_INFO_TYPE='FT') FAULTY_TYPE_NM,
		SUM(FAULTY_TYPE_QTY) FAULTY_TYPE_QTY,
		ISNULL(B.FAULTY_TYPE_TOTAL,0) FAULTY_TYPE_TOTAL,
		CONCAT(ROUND((CONVERT(FLOAT,SUM(FAULTY_TYPE_QTY)) / 
		CONVERT(FLOAT,ISNULL(B.FAULTY_TYPE_TOTAL,1)))*100,2),'%') FAULTY_TYPE_RATE,
		(SELECT ETC2 FROM TB_BASE_INFO_ADM X WHERE X.BASE_INFO_CD=FAULTY_TYPE_CD AND X.BASE_INFO_TYPE='FT') FAULTY_TYPE_SEQ
		FROM TB_ITEM_INSPECT_FAULTY_TYPE A
		LEFT OUTER JOIN (
			SELECT 
				SUBSTRING(X.FAULTY_TYPE_DATE,0,7) FAULTY_TYPE_DATE , 
				SUM(X.FAULTY_TYPE_QTY) FAULTY_TYPE_TOTAL
			FROM TB_ITEM_INSPECT_FAULTY_TYPE X
			WHERE X.FAULTY_TYPE_QTY != '0'
			GROUP BY SUBSTRING(X.FAULTY_TYPE_DATE,0,7)
		) B
		ON SUBSTRING(A.FAULTY_TYPE_DATE,0,7) = B.FAULTY_TYPE_DATE
		GROUP BY SUBSTRING(A.FAULTY_TYPE_DATE,0,7), FAULTY_TYPE_CD , FAULTY_TYPE_TOTAL
		HAVING SUBSTRING(SUBSTRING(A.FAULTY_TYPE_DATE,0,7),0,5) LIKE #{faultyTypeDate}
		
	</select>
	
	<!-- 불량유형 개수 -->
	<select id="faultyTypeCount" resultType="int">
		SELECT count(*)
		FROM TB_BASE_INFO_ADM A
		WHERE A.BASE_INFO_TYPE='FT'
		AND A.BASE_INFO_GUBUN='001'
	</select>
	
	
	<select id="itemInspectMonthList" resultMap="ItemInspectAdmVo">
		SELECT FAULTY_TYPE_CD ,
			(SELECT ETC2 FROM TB_BASE_INFO_ADM X WHERE X.BASE_INFO_CD=FAULTY_TYPE_CD AND X.BASE_INFO_TYPE='FT' AND X.BASE_INFO_GUBUN='001') FAULTY_TYPE_SEQ,
			(SELECT BASE_INFO_NM FROM TB_BASE_INFO_ADM X WHERE X.BASE_INFO_CD=FAULTY_TYPE_CD AND X.BASE_INFO_TYPE='FT' AND X.BASE_INFO_GUBUN='001') FAULTY_TYPE_NM,
			SUM(FAULTY_TYPE_QTY) FAULTY_TYPE_QTY,
			ROUND((CONVERT(FLOAT,SUM(FAULTY_TYPE_QTY)) / CONVERT(FLOAT,(SELECT SUM(FAULTY_TYPE_QTY) FROM TB_ITEM_INSPECT_FAULTY_TYPE)))*100,1) FAULTY_TYPE_RATE,
			SUBSTRING(FAULTY_TYPE_DATE,0,5) FAULTY_TYPE_DATE
			FROM TB_ITEM_INSPECT_FAULTY_TYPE A
			GROUP BY FAULTY_TYPE_CD,SUBSTRING(FAULTY_TYPE_DATE,0,5)
		HAVING SUBSTRING(FAULTY_TYPE_DATE,0,5) LIKE #{faultyTypeDate}
	</select>
	
	<!-- 이미지 업로드 -->
	<update id="itemInspectImageUpload">
		UPDATE TB_ITEM_INSPECT_MASTER_ADM
		SET
		<choose>
			<when test="imageFile1 != null">
				IMAGE_FILE1 = #{imageFile1}
				, IMAGE_FILE1_NM = #{imageFile1Nm}
			</when>
			<when test="imageFile2 != null">
				IMAGE_FILE2 = #{imageFile2}
				, IMAGE_FILE2_NM = #{imageFile2Nm}
			</when>
			<when test="imageFile3 != null">
				IMAGE_FILE3 = #{imageFile3}
				, IMAGE_FILE3_NM = #{imageFile3Nm}
			</when>
			<when test="imageFile4 != null">
				IMAGE_FILE4 = #{imageFile4}
				, IMAGE_FILE4_NM = #{imageFile4Nm}
			</when>
		</choose>
		WHERE IN_SLIP_NO= #{inSlipNo}
	</update>
	
	<!-- 이미지 보여주기 -->
	<select id="itemInspectImgRead" resultMap="ItemInspectAdmVo">
		SELECT
			IN_SLIP_NO
			, IMAGE_FILE1
			, IMAGE_FILE2
			, IMAGE_FILE3
			, IMAGE_FILE4
			, IMAGE_FILE1_NM
			, IMAGE_FILE2_NM
			, IMAGE_FILE3_NM
			, IMAGE_FILE4_NM
		FROM TB_ITEM_INSPECT_MASTER_ADM
		WHERE IN_SLIP_NO = #{inSlipNo}
	</select>
	
	<update id="itemInspectImageDelete">
		UPDATE TB_ITEM_INSPECT_MASTER_ADM
		SET
		<choose>
			<when test="value == 1">
				IMAGE_FILE1 = null
				, IMAGE_FILE1_NM = null
			</when>
			<when test="value == 2">
				IMAGE_FILE2 = null
				, IMAGE_FILE2_NM = null
			</when>
			<when test="value == 3">
				IMAGE_FILE3 = null
				, IMAGE_FILE3_NM = null
			</when>
			<when test="value == 4">
				IMAGE_FILE4 = null
				, IMAGE_FILE4_NM = null
			</when>
		</choose>
		WHERE IN_SLIP_NO= #{inSlipNo}
	</update>
	
	<select id="excepBongjeImportYnDel" resultType="int">
		SELECT COUNT(*)
		FROM TB_IN_OUT_WHS_ADM I
		LEFT OUTER JOIN TB_ITEM_INSPECT_MASTER_ADM INS 
		ON I.IN_SLIP_NO=INS.IN_SLIP_NO
		WHERE 1=1
		AND ISNULL(INS.APPROVAL_YN, '002')='002'
		AND I.ITEM_SEQ=#{itemSeq}
	</select>
	
</mapper>