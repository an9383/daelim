<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mes.mappers.tm.stockAdjustAdmMapper">
    
    <resultMap id="StockAdjustAdmVo" type="mes.domain.tm.StockAdjustAdmVo">
        <result property="saNo"             	  column="SA_NO" 	 		/>
        <result property="saSeq"             	  column="SA_SEQ" 			/>
        <result property="saCd"             	  column="SA_CD" 	 		/>
        <result property="saRev"                  column="SA_REV" 			/>
        <result property="saNm"                   column="SA_NM" 			/>
        <result property="saGubun"                column="SA_GUBUN" 		/>
        <result property="saSpec"                 column="SA_SPEC" 			/>
        <result property="saType"            	  column="SA_TYPE" 			/>
        <result property="saTypeNm"            	  column="SA_TYPE_NM" 		/>
        <result property="cmptStockQty"           column="CMPT_STOCK_QTY"	/>
        <result property="realStockQty"           column="REAL_STOCK_QTY" 	/>
        <result property="diffQty"                column="DIFF_QTY" 		/>
        <result property="barcodeNo"              column="BARCODE_NO" 		/>
        <result property="locationCd"             column="LOCATION_CD" 		/>
        <result property="locationNm"             column="LOCATION_NM" 		/>
        <result property="areaCd"             	  column="AREA_CD" 			/>
        <result property="areaNm"             	  column="AREA_NM" 			/>
        <result property="floorCd"           	  column="FLOOR_CD" 		/>
        <result property="floorNm"           	  column="FLOOR_NM" 		/>
        <result property="locationNo"             column="LOCATION_NO" 		/>
        <result property="approvalYn"             column="APPROVAL_YN" 		/>
        <result property="approvalDate"           column="APPROVAL_DATE" 	/>
        <result property="stockType"           	  column="STOCK_TYPE" 		/>
        <result property="saDesc"           	  column="SA_DESC" 			/>
        <result property="regId"                  column="REG_ID" 			/>
        <result property="regDate"           	  column="REG_DATE" 		/>
        <result property="updId"             	  column="UPD_ID" 			/>
        <result property="updDate"           	  column="UPD_DATE" 		/>
        <result property="date"           	  	  column="DATE" 			/>
        <result property="lotDate"           	  column="LOT_DATE" 		/>
        <result property="inQty"           	 	  column="IN_QTY" 			/>
        <result property="outQty"           	  column="OUT_QTY" 			/>
        <result property="adjInQty"           	  column="ADJ_IN_QTY" 		/>
        <result property="adjOutQty"           	  column="ADJ_OUT_QTY" 		/>
        <result property="tmQty"           	  	  column="TM_QTY" 			/>
        
        <result property="startDate"           	  column="START_DATE" 		/>
        <result property="endDate"           	  column="END_DATE" 		/>
        <result property="totalCount"			  column="TOTAL_COUNT"		/>	
        
         <result property="itemSeq"           	  column="ITEM_SEQ" 		/>
         <result property="itemMaker"             column="ITEM_MAKER" 		/>
         <result property="itemColor"             column="ITEM_COLOR" 		/>
         
         <result property="itemUnit"			  column="ITEM_UNIT"		/>
		 <result property="itemUnitNm"			  column="ITEM_UNIT_NM"		/>
		 <result property="itemCus"			      column="ITEM_CUS"			/>
		 <result property="itemCusNm"			  column="ITEM_CUS_NM"		/>
		 <result property="itemModel"			  column="ITEM_MODEL"		/>
         
         	
        <result property="mainGubun"			  column="MAIN_GUBUN"		/>
		<result property="mainGubunNm"			  column="MAIN_GUBUN_NM"	/>
		
		<result property="adjustBarcodeNo"		  column="ADJUST_BARCODE_NO"/>
    </resultMap>

	<!-- 초기재고관리 -->
	<!-- 자재,제품 목록조회 -->
	<select id="itemAllList" resultMap="StockAdjustAdmVo" >
		SELECT 
				PART_CD SA_CD,
				PART_NM SA_NM,
				PART_REV SA_REV,
				PART_GUBUN,
				(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=PART_GUBUN AND X.BASE_GROUP_CD='035') SA_GUBUN,
				PART_SPEC SA_SPEC,
				'001' SA_TYPE,
				TOTAL_COUNT = COUNT(*) OVER()
		FROM TB_ITEM_PART_ADM
		WHERE 1=1
		<if test="searchVal != '' and searchVal != null"> 
		 AND (PART_CD LIKE '%' + #{searchVal} + '%'  OR PART_NM LIKE '%' + #{searchVal} + '%'
			OR PART_GUBUN LIKE '%' + #{searchVal} + '%' 
			OR PART_REV LIKE '%' + #{searchVal} + '%'  OR PART_SPEC LIKE '%' + #{searchVal} + '%'
			)
		</if>
		
		UNION
		
		SELECT
			ITEM_CD SA_CD,
			ITEM_NM SA_NM,
			ITEM_REV SA_REV,
			ITEM_GUBUN,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=ITEM_GUBUN AND X.BASE_GROUP_CD='037')SA_GUBUN,
			ITEM_SERIES SA_SPEC,
			'002' SA_TYPE,
			TOTAL_COUNT = COUNT(*) OVER()
		FROM TB_ITEM_MOTOR_ADM
		WHERE 1=1
		<if test="searchVal != '' and searchVal != null"> 
		 AND (ITEM_CD LIKE '%' + #{searchVal} + '%'  OR ITEM_NM LIKE '%' + #{searchVal} + '%'
			OR ITEM_GUBUN LIKE '%' + #{searchVal} + '%' 
			OR ITEM_REV LIKE '%' + #{searchVal} + '%'  OR ITEM_SERIES LIKE '%' + #{searchVal} + '%'
			)
		</if>
		
		<if test="ordColumn != '' and ordColumn != null and ordDir != null and ordDir != null"> 
 		ORDER BY ${ordColumn} ${ordDir}
 		</if>  
		OFFSET #{start} ROWS                        
		FETCH NEXT #{length} ROWS ONLY  
		
	</select>
	
	
	<!-- 재고반영 목록조회 -->
	<select id="preStockList" resultMap="StockAdjustAdmVo" >
		SELECT 
			SA_TB.SA_NO
			, SA_TB.SA_SEQ
			, SA_TB.APPROVAL_DATE
			, SA_TB.SA_TYPE
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=SA_TB.SA_TYPE AND X.BASE_GROUP_CD='079') SA_TYPE_NM
			, SA_TB.SA_CD ITEM_SEQ
			, IIA_TB.ITEM_CD SA_CD
			, IIA_TB.ITEM_NM SA_NM
			, SA_TB.SA_REV
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=IIA_TB.ITEM_MODEL AND X.BASE_GROUP_CD='099') ITEM_MODEL
			, IIA_TB.ITEM_MAKER
			, IIA_TB.ITEM_COLOR
			, IIA_TB.ITEM_UNIT
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM WHERE BASE_CD=IIA_TB.ITEM_UNIT AND BASE_GROUP_CD='036') ITEM_UNIT_NM
			, IIA_TB.ITEM_CUS
			, (SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM X WHERE X.DEAL_CORP_CD=IIA_TB.ITEM_CUS) ITEM_CUS_NM
			, SA_TB.CMPT_STOCK_QTY
			, SA_TB.REAL_STOCK_QTY
			, SA_TB.DIFF_QTY
			, SP_TB.BARCODE_NO
			, SA_TB.BARCODE_NO ADJUST_BARCODE_NO
			, SA_TB.LOCATION_NO
			, SA_TB.LOCATION_CD
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=SA_TB.LOCATION_CD AND X.BASE_GROUP_CD='073') LOCATION_NM
			, LOC_TB.AREA_CD AREA_CD
			,(
					SELECT BASE_NM 
					FROM (
					SELECT BASE_CD,BASE_NM FROM TB_COMMON_CODE_ADM WHERE BASE_GROUP_CD='067'
					UNION 
					SELECT DEAL_CORP_CD BASE_CD, DEAL_CORP_NM BASE_NM FROM TB_DEAL_CORP_ADM 
					)T
					WHERE BASE_CD=LOC_TB.AREA_CD
				) AREA_NM
			, LOC_TB.FLOOR_NM FLOOR_CD
			, SA_TB.SA_DESC
			, SA_TB.APPROVAL_YN
			, IIA_TB.MAIN_GUBUN
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=IIA_TB.MAIN_GUBUN AND X.BASE_GROUP_CD='112') MAIN_GUBUN_NM
			, SP_TB.REG_DATE
		FROM TB_STOCK_ADJUST_ADM SA_TB
		LEFT OUTER JOIN TB_STOCK_PAYMENT_ADM SP_TB
		ON SA_TB.SA_NO=SUBSTRING(SP_TB.SOURCE_NO, 0, 13)
		AND CONVERT(VARCHAR,SA_TB.SA_SEQ) = CONVERT(VARCHAR,SUBSTRING(SP_TB.SOURCE_NO, 14, 15))
		LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA_TB
		ON SA_TB.SA_CD = IIA_TB.ITEM_SEQ
		LEFT OUTER JOIN TB_LOCATION_ADM LOC_TB
		ON SA_TB.LOCATION_NO = LOC_TB.LOC_NO
		WHERE 1=1
		AND SA_TB.STOCK_TYPE = #{stockType}
		<if test="approvalYn!=null and !approvalYn.equals('')">
		AND SA_TB.APPROVAL_YN = #{approvalYn}
		</if>
		<if test="approvalDate!=null and !approvalDate.equals('')">
		AND SA_TB.APPROVAL_DATE = #{approvalDate}
		</if>
		<if test="itemGubun!=null and !itemGubun.equals('')">
		AND SA_TB.APPROVAL_YN = #{approvalYn}
		</if>
		<if test="saType!=null and !saType.equals('')">
		AND SA_TB.SA_TYPE = #{saType}
		</if>
		<if test="mainGubun!=null and !mainGubun.equals('')">
		AND IIA_TB.MAIN_GUBUN = #{mainGubun}
		</if>
		ORDER BY SA_TB.SA_NO DESC
	</select>
	
	
	<!-- 초기재고 등록 -->
	<insert id="preStockCreate">
		INSERT INTO TB_STOCK_ADJUST_ADM (
				SA_NO,
	            SA_SEQ,
	            SA_TYPE,
	            SA_CD,
	            SA_REV,
	            CMPT_STOCK_QTY,
	            REAL_STOCK_QTY,
	            DIFF_QTY,
	            STOCK_CHARGR,
	            BARCODE_NO,
	            LOCATION_CD,
	            LOCATION_NO,
	            APPROVAL_DATE,
	            APPROVAL_YN,
	            STOCK_TYPE,
	            SA_DESC,
	            REG_ID,
	            REG_DATE)
		VALUES     (
				#{saNo},
	            #{saSeq},
	            #{saType},
	            #{saCd},
	            #{saRev},
	            #{cmptStockQty},
	            #{realStockQty},
	            #{diffQty},
	            #{stockChargr},
	            #{barcodeNo},
	            #{locationCd},
	            #{locationNo},
	            #{approvalDate},
	            #{approvalYn},
	            #{stockType},
	            #{saDesc},
	            #{regId},
	            GETDATE()
		) 
	</insert>
	
	<!-- 재고반영 수정 -->
	<update id="approvalYnUpdate">
		UPDATE TB_STOCK_ADJUST_ADM 
		SET APPROVAL_YN = #{approvalYn},
			UPD_ID = #{updId},
			UPD_DATE = GETDATE()
		WHERE SA_NO = #{saNo} 
		AND SA_SEQ = #{saSeq}
	</update>
	
	
	<!--전표번호 생성 -->
	<select id="getSaNo" resultType="String">
		SELECT ISNULL(RIGHT('000' + CAST(MAX(RIGHT(SA_NO,3))+1 AS NVARCHAR),3), '001') FROM TB_STOCK_ADJUST_ADM WHERE SUBSTRING(SA_NO,0,9) = #{date}
	</select>
	
	<!--순번 생성 -->
	<select id="getSaSeq" resultType="String">
		SELECT ISNULL(MAX(SA_SEQ)+1,0) FROM TB_STOCK_ADJUST_ADM WHERE SA_NO = #{saNo}
	</select>
	
	<!-- 자재테이블 바코드 여부 -->
	<select id="getSaBarcode" resultType="String">
		SELECT  ISNULL(RIGHT('000' + CAST(MAX(RIGHT(BARCODE_NO,3))+1 AS NVARCHAR),3),0)  FROM TB_STOCK_ADJUST_ADM WHERE SUBSTRING(BARCODE_NO,0,9) = #{lotDate} AND SA_TYPE = #{saType}
	</select>
	
	<!--자재 바코드 생성 -->
	<select id="getPartBarcodeNo" resultType="String">
		SELECT ISNULL(RIGHT('000' + CAST(MAX(RIGHT(BARCODE_NO,3))+1 AS NVARCHAR),3), '001') FROM TB_IN_OUT_WHS_ADM WHERE SUBSTRING(BARCODE_NO,0,9) = #{lotDate}
	</select>
	
	
	<!--제품 바코드 생성 -->
	<select id="getItemBarcodeNo" resultType="String">
		SELECT ISNULL(RIGHT('000' + CAST(MAX(RIGHT(BARCODE_NO,3))+1 AS NVARCHAR),3), '001') FROM TB_ITEM_WHS_ADM WHERE SUBSTRING(BARCODE_NO,2,8) = #{lotDate}
	</select>
	

 	<!-- 원자재 바코드 시퀀스 생성 -->
	<select id="getPartBarcodeSeq"  resultType="String">
<!-- 		SELECT ISNULL(RIGHT('000' + CAST(MAX(RIGHT(BARCODE_NO,3))+1 AS NVARCHAR),3), '001') FROM TB_STOCK_PAYMENT_ADM A WHERE SUBSTRING(BARCODE_NO,0,14)=#{barcodeNo} -->
<!-- 		입고등록 바코드 생성 쿼리랑 초기재고관리 쿼리랑 같아서 두 테이블을 UNION으로 묶어서 시퀀스 생성하는 것으로 변경 - 2023.01.30 -->
		SELECT ISNULL(RIGHT('000' + CAST(MAX(RIGHT(BARCODE_NO,3))+1 AS NVARCHAR),3), '001')
		FROM (
			SELECT BARCODE_NO
			FROM TB_IN_OUT_WHS_ADM
			WHERE SUBSTRING(BARCODE_NO,0,14) = #{barcodeNo}
			
			UNION
			
			SELECT BARCODE_NO
			FROM TB_STOCK_PAYMENT_ADM
			WHERE SUBSTRING(BARCODE_NO,0,14) = #{barcodeNo}
		) A
	</select>	
	
	
	<!-- 재고조정테이블 존재유무확인 -->
	<select id="stockAdjustAdmExistYn" resultType="int">
		SELECT COUNT(*) FROM TB_STOCK_ADJUST_ADM WHERE SA_CD = #{saCd} AND SA_REV = #{saRev}
	</select>
	
	<!--재고조정관리 -->
	<!-- 자재,제품 목록조회 -->
	<select id="itemAllList2" resultMap="StockAdjustAdmVo" >
		SELECT 
			A.BARCODE_NO,
			A.SP_CD SA_CD,
			A.SP_REV SA_REV,
			(CASE WHEN A.SP_TYPE = '001' 
				THEN (SELECT BASE_NM FROM TB_COMMON_CODE_ADM WHERE BASE_CD=(SELECT PART_GUBUN FROM TB_ITEM_PART_ADM X WHERE X.PART_CD=A.SP_CD AND X.PART_REV=A.SP_REV) AND BASE_GROUP_CD='035')
				ELSE (SELECT BASE_NM FROM TB_COMMON_CODE_ADM WHERE BASE_CD=(SELECT ITEM_GUBUN FROM TB_ITEM_MOTOR_ADM X WHERE X.ITEM_CD=A.SP_CD AND X.ITEM_REV=A.SP_REV) AND BASE_GROUP_CD='037')
				END ) SA_GUBUN,
			(CASE WHEN A.SP_TYPE = '001' 
				THEN (SELECT PART_NM FROM TB_ITEM_PART_ADM X WHERE X.PART_CD=A.SP_CD AND X.PART_REV=A.SP_REV)
				ELSE (SELECT ITEM_NM FROM TB_ITEM_MOTOR_ADM X WHERE X.ITEM_CD=A.SP_CD AND X.ITEM_REV=A.SP_REV)
				END ) SA_NM,
			(CASE WHEN A.SP_TYPE = '001' 
				THEN (SELECT PART_SPEC FROM TB_ITEM_PART_ADM X WHERE X.PART_CD=A.SP_CD AND X.PART_REV=A.SP_REV)
				ELSE (SELECT ITEM_CAPA FROM TB_ITEM_MOTOR_ADM X WHERE X.ITEM_CD=A.SP_CD AND X.ITEM_REV=A.SP_REV)
				END ) SA_SPEC,
			(CASE WHEN A.SP_TYPE = '001' 
				THEN (SELECT BASE_NM FROM TB_COMMON_CODE_ADM WHERE BASE_CD=(SELECT PART_UNIT FROM TB_ITEM_PART_ADM X WHERE X.PART_CD=A.SP_CD AND X.PART_REV=A.SP_REV) AND BASE_GROUP_CD='036')
				ELSE  (SELECT ITEM_SERIES FROM TB_ITEM_MOTOR_ADM X WHERE X.ITEM_CD=A.SP_CD AND X.ITEM_REV=A.SP_REV)
				END ) SA_UNIT,
			 ISNULL(B.SP_QTY,0) IN_QTY,
			 ISNULL(C.SP_QTY,0) OUT_QTY,
			 ISNULL(D.SP_QTY,0) ADJ_IN_QTY,
			 ISNULL(E.SP_QTY,0) ADJ_OUT_QTY,
			 ISNULL(F.TM_QTY,0) TM_QTY,
			 (ISNULL(F.TM_QTY,0) + ISNULL(B.SP_QTY,0) + ISNULL(D.SP_QTY,0)) - ISNULL(C.SP_QTY,0) - ISNULL(E.SP_QTY,0) CMPT_STOCK_QTY
		FROM
		(
		SELECT 
			BARCODE_NO,
			SP_CD,
			SP_REV,
			SP_TYPE
		FROM TB_STOCK_PAYMENT_ADM
		WHERE 1=1
		AND SP_TYPE=#{saType}
		GROUP BY BARCODE_NO, SP_CD, SP_REV, SP_TYPE
		) A
		LEFT OUTER JOIN
		(
		SELECT 
			BARCODE_NO,
			SP_CD,
			SP_REV,
			SP_GUBUN,
			SUM(SP_QTY) SP_QTY
		
		FROM TB_STOCK_PAYMENT_ADM
		WHERE 1=1
		AND Substring(sp_date, 0, 7) = #{tmMon}
        AND sp_type = #{saType}
		AND SP_GUBUN='001'
		
		GROUP BY BARCODE_NO, SP_CD, SP_REV, SP_GUBUN
		) B
		ON A.BARCODE_NO=B.BARCODE_NO
		LEFT OUTER JOIN 
		(
		SELECT 
			BARCODE_NO,
			SP_CD,
			SP_REV,
			SP_GUBUN,
			SUM(SP_QTY) SP_QTY
		
		FROM TB_STOCK_PAYMENT_ADM
		WHERE 1=1
	AND Substring(sp_date, 0, 7) = #{tmMon}
        AND sp_type = #{saType}
		AND SP_GUBUN='002'
		
		GROUP BY BARCODE_NO, SP_CD, SP_REV, SP_GUBUN
		) C
		ON A.BARCODE_NO=C.BARCODE_NO
		LEFT OUTER JOIN
		(
		SELECT 
			BARCODE_NO,
			SP_CD,
			SP_REV,
			SP_GUBUN,
			SUM(SP_QTY) SP_QTY
		
		FROM TB_STOCK_PAYMENT_ADM
		WHERE 1=1
		AND Substring(sp_date, 0, 7) = #{tmMon}
        AND sp_type = #{saType}
		AND SP_GUBUN='003'
		
		GROUP BY BARCODE_NO, SP_CD, SP_REV, SP_GUBUN
		) D
		ON A.BARCODE_NO=D.BARCODE_NO
		LEFT OUTER JOIN
		(
		SELECT 
			BARCODE_NO,
			SP_CD,
			SP_REV,
			SP_GUBUN,
			SUM(SP_QTY) SP_QTY
		
		FROM TB_STOCK_PAYMENT_ADM
		WHERE 1=1
		AND Substring(sp_date, 0, 7) = #{tmMon}
        AND sp_type = #{saType}
		AND SP_GUBUN='004'
		
		GROUP BY BARCODE_NO, SP_CD, SP_REV, SP_GUBUN
		) E
		ON A.BARCODE_NO=E.BARCODE_NO
		LEFT OUTER JOIN
		(
			SELECT 
				A.PART_CD, 
				A.PART_REV,
				B.TM_QTY,
				B.TM_MON
			FROM 
			TB_ITEM_PART_ADM A
			LEFT OUTER JOIN  TB_PART_INVENTORY_ADM B ON A.PART_CD = B.PART_CD
			AND A.PART_REV = B.PART_REV
			AND B.TM_MON LIKE SUBSTRING(CONVERT(VARCHAR(14),DATEADD(M,-1,CONVERT(DATETIME,CONCAT(#{tmMon},'10'),120)),112),0,7)
			GROUP BY
			A.PART_CD, A.PART_REV ,B.TM_QTY, B.TM_MON
		) F
		ON A.SP_CD=F.PART_CD
		AND A.SP_REV=F.PART_REV
		
	</select>
	
		
	<!-- 초기재고, 재고조정 삭제 -->
	<delete id="stockAdjustAdmDelete">
		DELETE FROM TB_STOCK_ADJUST_ADM WHERE SA_NO = #{saNo} AND SA_SEQ = #{saSeq}
	</delete>
	
	
	<!-- 재고수불 테이블 삭제 -->
	<delete id="stockPaymentAdmDelete">
		DELETE FROM TB_STOCK_PAYMENT_ADM
		WHERE SOURCE_NO = #{barcodeNo}
		<if test='spSubGubun != null and spSubGubun.equals("초기재고")'>
		AND SP_SUB_GUBUN = '초기재고'
		</if>
		<if test='spSubGubun != null and spSubGubun.equals("재고조정")'>
		AND SP_SUB_GUBUN IN ( '조정입고', '조정출고' )
		</if>
	</delete>
	
	<!-- 자재출고 테이블 삭제 -->
	<delete id="outWhsAdmDelete">
		DELETE FROM TB_OUT_WHS_ADM WHERE BARCODE_NO = #{barcodeNo}
	</delete>
	
	
	
	<!-- 재고위치관리 -->
	<select id="stockLocList" resultMap="StockAdjustAdmVo">

		(SELECT  
			 A.PART_CD SA_CD,
			 A.PART_REV SA_REV,
			 A.BARCODE_NO,
			 (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=A.PART_GUBUN AND X.BASE_GROUP_CD='035')SA_GUBUN,
			 A.PART_NM SA_NM,
			 A.PART_SPEC SA_SPEC,
			 A.IN_QTY SA_IN_QTY,
			 B.OUT_QTY SA_OUT_QTY,
			 (A.IN_QTY-B.OUT_QTY) SA_TM_QTY,
			 D.LOC_NO LOCATION_NO,
			 D.LOC_CD LOCATION_CD,
			 D.LOC_NM LOCATION_NM,
			 D.AREA_CD,
			 D.AREA_NM,
			 D.FLOOR_NM,
			 '001' SA_TYPE
		 FROM 
			(
			  SELECT 
				  B.BARCODE_NO,
				  A.PART_CD, 
				  A.PART_REV,
				  A.PART_GUBUN,
				  A.PART_NM,
				  A.PART_SPEC,
				  B.INSPECT_QTY IN_QTY,
				  B.LOCATION_NO
			  FROM 
			  TB_ITEM_PART_ADM A
			  LEFT OUTER JOIN  TB_IN_OUT_WHS_ADM B ON A.PART_CD = B.PART_CD
			  AND A.PART_REV = B.PART_REV
		    ) A,
			( 
			  SELECT 
			  B.BARCODE_NO,
			  B.PRE_OUT_QTY OUT_QTY
			  FROM 
			  TB_ITEM_PART_ADM A
			  LEFT OUTER JOIN  TB_OUT_WHS_ADM B ON A.PART_CD = B.PART_CD
			  AND A.PART_REV = B.PART_REV
			) B,
			(
			 SELECT 
				LOC_NO,
				LOC_CD,
				(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=LOC_CD AND X.BASE_GROUP_CD='073')LOC_NM,
				AREA_CD,
				(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=AREA_CD AND X.BASE_GROUP_CD='067')AREA_NM,
				FLOOR_NM,
				LOC_DESC
			 FROM TB_LOCATION_ADM
			) D
		  WHERE A.BARCODE_NO = B.BARCODE_NO
		  AND A.LOCATION_NO=D.LOC_NO
		  AND D.LOC_NO IN
		 <foreach collection="array" item="arr"  open="(" close=")" separator=",">
          	#{arr}
    	 </foreach>	
		  )
		  UNION
		  (
		  SELECT  
			 A.ITEM_CD SA_CD,
			 A.ITEM_REV SA_REV,
			 A.BARCODE_NO,
			 (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=A.ITEM_GUBUN AND X.BASE_GROUP_CD='035')SA_GUBUN,
			 A.ITEM_NM SA_NM,
			 A.ITEM_SERIES SA_SPEC,
			 A.IN_QTY SA_IN_QTY,
			 A.OUT_QTY SA_OUT_QTY,
			 (A.IN_QTY-A.OUT_QTY) SA_TM_QTY,
			 B.LOC_NO LOCATION_NO,
			 B.LOC_CD LOCATION_CD,
			 B.LOC_NM LOCATION_NM,
			 B.AREA_CD,
			 B.AREA_NM,
			 B.FLOOR_NM,
			 '002' SA_TYPE
		 FROM 
			(
			  SELECT 
				  B.BARCODE_NO,
				  A.ITEM_CD, 
				  A.ITEM_REV,
				  A.ITEM_GUBUN,
				  A.ITEM_NM,
				  A.ITEM_SERIES,
				  B.IN_QTY,
				  B.OUT_QTY, 
				  B.REMAIN_QTY,
				  B.LOCATION_NO
			  FROM 
			  TB_ITEM_MOTOR_ADM A
			  LEFT OUTER JOIN  TB_ITEM_WHS_ADM B ON A.ITEM_CD = B.ITEM_CD
			  AND A.ITEM_REV = B.ITEM_REV
		    ) A,
			(
			 SELECT 
				LOC_NO,
				LOC_CD,
				(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=LOC_CD AND X.BASE_GROUP_CD='073')LOC_NM,
				AREA_CD,
				(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=AREA_CD AND X.BASE_GROUP_CD='067')AREA_NM,
				FLOOR_NM,
				LOC_DESC
			 FROM TB_LOCATION_ADM
			) B
		  WHERE 1=1
		  AND A.LOCATION_NO=B.LOC_NO
		  AND B.LOC_NO IN
		 <foreach collection="array" item="arr"  open="(" close=")" separator=",">
          	#{arr}
    	 </foreach>	
		  )
	</select>
	

	
	
	

</mapper>  
