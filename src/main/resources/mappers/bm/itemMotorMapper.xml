<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  	
<mapper namespace="mes.mappers.bm.itemMotorMapper">

	<resultMap id="ItemMotorVo" type="mes.domain.bm.ItemMotorVo">
		<result property="itemCd"			column="ITEM_CD"		/>
		<result property="itemNm"			column="ITEM_NM"		/>
		<result property="itemSeq"			column="ITEM_SEQ"		/>
		<result property="itemRev"			column="ITEM_REV"		/>
		<result property="itemGubun"		column="ITEM_GUBUN"		/>
		<result property="itemGubunNm"		column="ITEM_GUBUN_NM"	/>
		<result property="itemSeries"		column="ITEM_SERIES"	/>
		<result property="frameSize"		column="FRAME_SIZE"		/>
		<result property="itemCapa"			column="ITEM_CAPA"		/>
		<result property="itemEncdr"		column="ITEM_ENCDR"		/>
		<result property="itemType"			column="ITEM_TYPE"		/>
		<result property="ipClass"			column="IP_CLASS"		/>
		<result property="serialNo"			column="SERIAL_NO"		/>
		<result property="itemVoltage"		column="ITEM_VOLTAGE"	/>
		<result property="itemOutput"		column="ITEM_OUTPUT"	/>
		<result property="itemSize"			column="ITEM_SIZE"		/>
		<result property="itemCable"		column="ITEM_CABLE"		/>
		<result property="itemGubun2"		column="ITEM_GUBUN2"	/>		
		<result property="totalAmt"			column="TOTAL_AMT"		/>
		<result property="tmQty"			column="TM_QTY" 		/>
		<result property="useYn"			column="USE_YN"			/>
		<result property="itemDesc"			column="ITEM_DESC"		/>
		<result property="imageFile1"		column="IMAGE_FILE1"	/>
		<result property="imageFile2"		column="IMAGE_FILE2"	/>
		<result property="imageFile3"		column="IMAGE_FILE3"	/>
		<result property="imageFile4"		column="IMAGE_FILE4"	/>
		<result property="imageFile1Nm"		column="IMAGE_FILE1_NM"	/>
		<result property="imageFile2Nm"		column="IMAGE_FILE2_NM"	/>
		<result property="imageFile3Nm"		column="IMAGE_FILE3_NM"	/>
		<result property="imageFile4Nm"		column="IMAGE_FILE4_NM"	/>
		<result property="regId"			column="REG_ID"			/>
		<result property="regNm"			column="REG_NM"			/>
		<result property="regDate"			column="REG_DATE"		/>
		<result property="updId"			column="UPD_ID"			/>
		<result property="updDate"			column="UPD_DATE"		/>
		<result property="partCd"			column="PART_CD"		/>
		<result property="partRev"			column="PART_REV"		/>
		<result property="partSeq"			column="PART_SEQ"		/>
		<result property="partConsumpt"		column="PART_CONSUMPT"	/>
		<result property="totalConsumpt"		column="TOTAL_CONSUMPT"	/>
		<result property="ebomDesc"			column="EBOM_DESC"		/>
		<result property="partUnit"			column="PART_UNIT"		/>
		<result property="partUnitNm"		column="PART_UNIT_NM"	/>
		<result property="partSpec"			column="PART_SPEC"		/>
		<result property="partNm"			column="PART_NM"		/>
		<result property="partGubun"		column="PART_GUBUN"		/>
		<result property="partGubunNm"		column="PART_GUBUN_NM"	/>
		<result property="partType"			column="PART_TYPE" 		/>
		<result property="partTypeNm" 		column="PART_TYPE_NM"	/>
		<result property="bomCd"			column="BOM_CD"			/>
		<result property="prcssCd"			column="PRCSS_CD"		/>
		<result property="prcssNm"			column="PRCSS_NM"		/>
		<result property="prcssSeq"			column="PRCSS_SEQ"		/>
		<result property="prcssInitial"		column="PRCSS_INITIAL"	/>
		<result property="equipCd"			column="EQUIP_CD"		/>
		<result property="equipNm"			column="EQUIP_NM"		/>
		<result property="osrcCorpCd"		column="OSRC_CORP_CD"	/>
		<result property="osrcCorpNm"		column="OSRC_CORP_NM"	/>
		<result property="prcssGubun"		column="PRCSS_GUBUN"	/>
		<result property="workStandard"		column="WORK_STANDARD"	/>
		<result property="workStandardNm"	column="WORK_STANDARD_NM"	/>
		<result property="workStandardSeq"	column="WORK_STANDARD_SEQ"	/>
		<result property="value"			column="VALUE"			/>
		<result property="unitCost"			column="UNIT_COST"		/>	
		<result property="preOrdQty"		column="PRE_ORD_QTY"	/>	
		<result property="preOutQty"		column="PRE_OUT_QTY"	/>	
		<result property="floorCd"			column="FLOOR_CD"		/>	
		<result property="workOrdNo"		column="WORK_ORD_NO"	/>	
		
		<result property="fileType"			column="FILE_TYPE"		/>	
		<result property="fileSeq"			column="FILE_SEQ"		/>	
		<result property="fileDate"			column="FILE_DATE"		/>	
		<result property="fileContent"		column="FILE_CONTENT"	/>	
		<result property="fileNm"			column="FILE_NM"		/>	
		
		<!-- 추가 -->
		<result property="itemCd"			column="ITEM_CD_TO"		/>
		<result property="itemRevTo"		column="ITEM_REV_TO"	/>	
	</resultMap>	


	<!-- 품목정보(모터) 전체 목록 -->
	<select id="itemMotorList" resultMap="ItemMotorVo">
		SELECT 
			A.ITEM_CD
			, A.ITEM_REV
			, ITEM_NM
			, ITEM_GUBUN
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=ITEM_GUBUN AND X.BASE_GROUP_CD='037')ITEM_GUBUN_NM
			, ITEM_ENCDR
			, IP_CLASS
			, SERIAL_NO
			, ITEM_VOLTAGE
			, ITEM_OUTPUT
			, ITEM_SIZE
			, ITEM_GUBUN2
			, ITEM_TYPE
			, ITEM_DESC
			, ITEM_SERIES
			, FRAME_SIZE
			, ITEM_CAPA
			, ITEM_CABLE
			, ISNULL(A.UNIT_COST,0) UNIT_COST
			, B.BOM_CD
		FROM TB_ITEM_MOTOR_ADM A
		LEFT OUTER JOIN TB_ITEM_MOTOR_MBOM B
		ON A.ITEM_CD=B.ITEM_CD
		AND A.ITEM_REV=B.ITEM_REV
		WHERE 1=1
		<if test="itemGubun!=null and !itemGubun.equals('')">
		    AND ITEM_GUBUN=#{itemGubun}
		</if>
	    AND USE_YN='001'
	</select>
	
	<!-- 품목정보(모터) 상세 목록 -->
	<select id="itemMotorRead" resultMap="ItemMotorVo">
		<![CDATA[
			SELECT 
			ITEM_CD
			, ITEM_NM
			, ITEM_GUBUN
			, ITEM_SERIES
			, FRAME_SIZE
			, ITEM_CAPA
			, ITEM_ENCDR
			, ITEM_TYPE
			, IP_CLASS
			, SERIAL_NO
			, ITEM_VOLTAGE
			, ITEM_OUTPUT
			, ITEM_SIZE
			, ITEM_GUBUN
			, ITEM_CABLE
			, UNIT_COST
			, ITEM_REV
			, ITEM_DESC
			, USE_YN
			FROM
			TB_ITEM_MOTOR_ADM
			WHERE
			ITEM_CD = #{itemCd}
			AND ITEM_REV = #{itemRev}
		]]>
	</select>

	<!-- 품목정보(모터) 등록 -->
	<insert id="itemMotorCreate">
		<![CDATA[
			INSERT INTO TB_ITEM_MOTOR_ADM 
			(
				ITEM_CD
				, ITEM_REV
				, ITEM_NM
				, ITEM_GUBUN
				, ITEM_SERIES
				, FRAME_SIZE
				, ITEM_CAPA
				, ITEM_ENCDR
				, ITEM_TYPE
				, IP_CLASS
				, SERIAL_NO
				, ITEM_VOLTAGE
				, ITEM_OUTPUT
				, ITEM_SIZE
				, ITEM_GUBUN2
				, ITEM_CABLE
				, UNIT_COST
				, ITEM_DESC
				, USE_YN
				, REG_ID
				, REG_DATE
			) 
			VALUES(
				#{itemCd}
				, #{itemRev}
				, #{itemNm}
				, #{itemGubun}
				, #{itemSeries}
				, #{frameSize}
				, #{itemCapa}
				, #{itemEncdr}
				, #{itemType}
				, #{ipClass}
				, #{serialNo}
				, #{itemVoltage}
				, #{itemOutput}
				, #{itemSize}
				, #{itemGubun2}
				, #{itemCable}
				, #{unitCost}
				, #{itemDesc}
				, #{useYn}
				, #{regId}
				, getdate()			)
		]]>
	</insert>

	<!-- 품목정보(모터) 수정 -->
	<update id="itemMotorUpdate">
		<![CDATA[
			UPDATE TB_ITEM_MOTOR_ADM
			SET	
				ITEM_NM = #{itemNm}
				, ITEM_GUBUN = #{itemGubun}
				, ITEM_SERIES = #{itemSeries}
				, FRAME_SIZE = #{frameSize}
				, ITEM_CAPA = #{itemCapa}
				, ITEM_ENCDR = #{itemEncdr}
				, ITEM_TYPE = #{itemType}
				, IP_CLASS = #{ipClass}
				, SERIAL_NO = #{serialNo}
				, ITEM_VOLTAGE = #{itemVoltage}
				, ITEM_OUTPUT = #{itemOutput}
				, ITEM_SIZE = #{itemSize}
				, ITEM_GUBUN2 = #{itemGubun2}
				, ITEM_CABLE = #{itemCable}
				, UNIT_COST = #{unitCost}
				, ITEM_DESC = #{itemDesc}
				, USE_YN = #{useYn}
				, UPD_ID = #{updId}
				, UPD_DATE = getdate()
			WHERE  
				ITEM_CD = #{itemCd}
				AND ITEM_REV = #{itemRev}
				

		]]>
	</update>
	
	<!-- E-BOM 전체 목록 -->
	<select id="itemMotorEBomList" resultMap="ItemMotorVo">
		SELECT 
			A.ITEM_CD
			, A.ITEM_REV
			, A.PART_CD
			, A.PART_REV
			, B.PART_UNIT
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=B.PART_UNIT AND X.BASE_GROUP_CD='036')PART_UNIT_NM
			, B.PART_SPEC
			, B.PART_NM
			, A.PART_CONSUMPT
			, B.PART_GUBUN
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=B.PART_GUBUN AND X.BASE_GROUP_CD='035')PART_GUBUN_NM
			, PART_TYPE
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM B WHERE BASE_GROUP_CD='077' AND PART_TYPE=B.BASE_CD) PART_TYPE_NM
		FROM TB_ITEM_MOTOR_EBOM A
		LEFT OUTER JOIN TB_ITEM_PART_ADM B
		ON A.PART_CD = B.PART_CD 
		AND A.PART_REV = B.PART_REV 
		WHERE 1=1
		<choose>
			<when test="itemCdArr!=null">
				AND A.ITEM_CD IN
				<foreach collection="itemCdArr" item="arr"  open="(" close=")" separator=",">
			 		#{arr}
	    	 	</foreach>	
			</when>
			<otherwise>
				AND A.ITEM_CD = #{itemCd}
				AND A.ITEM_REV = #{itemRev}
			</otherwise>
		</choose>
		 
		<if test="partType!=null and !partType.equals('')">
		AND B.PART_TYPE NOT IN (#{partType})
		</if>
	</select>
	
		<!-- E-BOM 등록 -->
	<insert id="itemMotorEBomCreate">
		<![CDATA[
			INSERT INTO TB_ITEM_MOTOR_EBOM 
			(
				ITEM_CD
				, ITEM_REV
				, PART_CD
				, PART_REV
				, PART_SEQ
				, PART_CONSUMPT
				, REG_ID
				, REG_DATE
			) 
			VALUES(
				#{itemCd}
				, #{itemRev}
				, #{partCd}
				, #{partRev}
				, #{partSeq}
				, #{partConsumpt}
				, #{regId}
				, getdate()			)
		]]>
	</insert>
	
	<!-- E-BOM 삭제 -->
	<delete id="itemMotorEBomDelete">
		<![CDATA[
			DELETE FROM TB_ITEM_MOTOR_EBOM
			WHERE ITEM_CD = #{itemCd} AND ITEM_REV = #{itemRev}
		]]>
	</delete>
	
	
	<!-- M-BOM 전체 목록 -->
	<select id="itemMotorMBomList" resultMap="ItemMotorVo">
		<![CDATA[
			SELECT 
				ITEM_CD
				, ITEM_REV
				, PRCSS_SEQ
				, PRCSS_CD
				, (SELECT PRCSS_NM FROM TB_PRCSS_CODE_ADM X WHERE X.PRCSS_CD= A.PRCSS_CD) PRCSS_NM
				, (SELECT PRCSS_INITIAL FROM TB_PRCSS_CODE_ADM X WHERE X.PRCSS_CD= A.PRCSS_CD) PRCSS_INITIAL
				, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=(SELECT PRCSS_GUBUN FROM TB_PRCSS_CODE_ADM X WHERE X.PRCSS_CD= A.PRCSS_CD) AND BASE_GROUP_CD='039') PRCSS_GUBUN
				, EQUIP_CD
				, (SELECT EQUIP_NM FROM TB_EQUIP_CODE_ADM X WHERE X.EQUIP_CD=A.EQUIP_CD)EQUIP_NM
				, OSRC_CORP_CD
				, (SELECT DEAL_CORP_NM FROM TB_DEAL_CORP_ADM X WHERE X.DEAL_CORP_CD=A.OSRC_CORP_CD)OSRC_CORP_NM
			FROM TB_ITEM_MOTOR_MBOM A
			WHERE A.ITEM_CD = #{itemCd} AND A.ITEM_REV = #{itemRev}
			
		]]>
	</select>
	
	<!-- M-BOM 등록 -->
	<insert id="itemMotorMBomCreate">
		<![CDATA[
			INSERT INTO TB_ITEM_MOTOR_MBOM		(
				ITEM_CD,
				ITEM_REV,
				BOM_CD,
				REG_ID,
				REG_DATE
			) 
			VALUES(
				#{itemCd},
				#{itemRev},
				#{bomCd},
				#{regId},
				GETDATE()
			)
		]]>
	</insert>
	
		
	<!-- M-BOM 수정 -->
	<update id="itemMotorMBomUpdate">
		<![CDATA[
			UPDATE	TB_ITEM_MOTOR_MBOM		 
			SET	
				BOM_CD = #{bomCd},
				UPD_ID = #{updId},
				UPD_DATE = GETDATE()
			WHERE	ITEM_CD = #{itemCd}
			AND	ITEM_REV = #{itemRev}
		]]>
	</update>
	
	<!-- M-BOM 삭제 -->
	<delete id="itemMotorMBomDelete">
		<![CDATA[
			DELETE FROM TB_ITEM_MOTOR_MBOM
			WHERE ITEM_CD = #{itemCd} AND ITEM_REV = #{itemRev}
		]]>
	</delete>
	
	<!-- 설비관리 이미지 경로조회 -->
	<select id="itemMotorImgRead" resultMap="ItemMotorVo">
			SELECT
				ITEM_CD
				, ITEM_REV
				, IMAGE_FILE1
				, IMAGE_FILE2
				, IMAGE_FILE3
				, IMAGE_FILE4
				, IMAGE_FILE1_NM
				, IMAGE_FILE2_NM
				, IMAGE_FILE3_NM
				, IMAGE_FILE4_NM
			FROM TB_ITEM_MOTOR_ADM
		WHERE ITEM_CD = #{itemCd}
		AND ITEM_REV = #{itemRev}
	</select>
	
	<update id="itemMotorImgUpload">
		UPDATE TB_ITEM_MOTOR_ADM
		SET
		<choose>
			<when test="imageFile1 != null">
				IMAGE_FILE1 = #{imageFile1}
				, IMAGE_FILE1_NM = #{imageFile1Nm}
			</when>
			<when test="imageFile2 != null">
				IMAGE_FILE2 = #{imageFile2}
				, IMAGE_FILE2_NM = #{imageFile2Nm}
			</when>
			<when test="imageFile3 != null">
				IMAGE_FILE3 = #{imageFile3}
				, IMAGE_FILE3_NM = #{imageFile3Nm}
			</when>
			<when test="imageFile4 != null">
				IMAGE_FILE4 = #{imageFile4}
				, IMAGE_FILE4_NM = #{imageFile4Nm}
			</when>
		</choose>
		WHERE ITEM_CD = #{itemCd}
		AND ITEM_REV = #{itemRev}
	</update>
	
	<!--불러오기 이미지 등록 -->
	<update id="itemMotorImgCallUpload">
		UPDATE TB_ITEM_MOTOR_ADM
		SET
			IMAGE_FILE1 = (SELECT IMAGE_FILE1 FROM TB_ITEM_MOTOR_ADM WHERE ITEM_CD = #{itemCdTo} AND ITEM_REV = #{itemRevTo})
			, IMAGE_FILE1_NM = (SELECT IMAGE_FILE1_NM FROM TB_ITEM_MOTOR_ADM WHERE ITEM_CD = #{itemCdTo} AND ITEM_REV = #{itemRevTo})
			, IMAGE_FILE2 = (SELECT IMAGE_FILE2 FROM TB_ITEM_MOTOR_ADM WHERE ITEM_CD = #{itemCdTo} AND ITEM_REV = #{itemRevTo})
			, IMAGE_FILE2_NM = (SELECT IMAGE_FILE2_NM FROM TB_ITEM_MOTOR_ADM WHERE ITEM_CD = #{itemCdTo} AND ITEM_REV = #{itemRevTo})
			, IMAGE_FILE3 = (SELECT IMAGE_FILE3 FROM TB_ITEM_MOTOR_ADM WHERE ITEM_CD = #{itemCdTo} AND ITEM_REV = #{itemRevTo})
			, IMAGE_FILE3_NM = (SELECT IMAGE_FILE3_NM FROM TB_ITEM_MOTOR_ADM WHERE ITEM_CD = #{itemCdTo} AND ITEM_REV = #{itemRevTo})
			, IMAGE_FILE4 = (SELECT IMAGE_FILE4 FROM TB_ITEM_MOTOR_ADM WHERE ITEM_CD = #{itemCdTo} AND ITEM_REV = #{itemRevTo})
			, IMAGE_FILE4_NM = (SELECT IMAGE_FILE4_NM FROM TB_ITEM_MOTOR_ADM WHERE ITEM_CD = #{itemCdTo} AND ITEM_REV = #{itemRevTo})
			, REG_ID = #{regId}
		WHERE ITEM_CD = #{itemCd}
		AND ITEM_REV = #{itemRev}
	</update>
	
	<update id="itemMotorImgDelete">
		UPDATE TB_ITEM_MOTOR_ADM
		SET
		<choose>
			<when test="value == 1">
				IMAGE_FILE1 = null
				, IMAGE_FILE1_NM = null
			</when>
			<when test="value == 2">
				IMAGE_FILE2 = null
				, IMAGE_FILE2_NM = null
			</when>
			<when test="value == 3">
				IMAGE_FILE3 = null
				, IMAGE_FILE3_NM = null
			</when>
			<when test="value == 4">
				IMAGE_FILE4 = null
				, IMAGE_FILE4_NM = null
			</when>
		</choose>
		WHERE ITEM_CD = #{itemCd}
		AND ITEM_REV = #{itemRev}
	</update>
	
	<!-- 시퀀스 값 조회 -->
	
	<select id="itemMotorSeq" resultType="String">
		<![CDATA[
			SELECT ISNULL(CAST(MAX(ITEM_CD)+1 AS NVARCHAR), '100001') FROM TB_ITEM_MOTOR_ADM 			
		]]>
	</select>
	
	
	<!-- Revision시퀀스 값 조회 -->
	<select id="itemMotorRevSeq" resultType="String">
		SELECT REPLICATE('0',2-LEN(MAX(ITEM_REV)+1))+CAST(MAX(ITEM_REV)+1 AS VARCHAR) FROM TB_ITEM_MOTOR_ADM WHERE ITEM_CD = #{itemCd} 			
	</select>
	
	<!-- BOM-MAT 목록 -->
	<select id="itemBomMapRead" resultMap="ItemMotorVo">
		<![CDATA[
			SELECT	ITEM_CD
				, ITEM_REV
				, PRCSS_CD
				, PART_CD
				, PART_REV
				, (SELECT PART_NM FROM TB_ITEM_PART_ADM X WHERE X.PART_CD=A.PART_CD AND X.PART_REV=A.PART_REV )PART_NM
				, (SELECT PART_SPEC FROM TB_ITEM_PART_ADM X WHERE X.PART_CD=A.PART_CD AND X.PART_REV=A.PART_REV )PART_SPEC
			FROM TB_ITEM_BOM_MAP A					 
			WHERE ITEM_CD = #{itemCd}
			AND	ITEM_REV = #{itemRev}
			AND	PRCSS_CD = #{prcssCd}
		]]>
	</select>
	
	<!-- BOM-MAT 목록 -->
	<select id="itemBomMapList" resultMap="ItemMotorVo">
		<![CDATA[
			SELECT	A.ITEM_CD
				, A.ITEM_REV
				, A.PRCSS_CD
				, A.PART_CD
				, A.PART_REV
				, (SELECT PART_NM FROM TB_ITEM_PART_ADM X WHERE X.PART_CD=A.PART_CD AND X.PART_REV=A.PART_REV )PART_NM
				, (SELECT PART_SPEC FROM TB_ITEM_PART_ADM X WHERE X.PART_CD=A.PART_CD AND X.PART_REV=A.PART_REV )PART_SPEC
				, (SELECT PART_SPEC FROM TB_ITEM_PART_ADM X WHERE X.PART_CD=A.PART_CD AND X.PART_REV=A.PART_REV )PART_SPEC
				
			FROM TB_ITEM_BOM_MAP A					 
			WHERE PRCSS_CD = #{prcssCd}
		]]>
	</select>
	
	<!-- BOM-MAT 등록 -->
	<insert id="itemBomMapCreate" >
		<![CDATA[
			INSERT INTO TB_ITEM_BOM_MAP			(
				ITEM_CD,
				ITEM_REV,
				PRCSS_CD,
				PART_CD,
				PART_REV,
				REG_ID,
				REG_DATE
			) 
			VALUES(
				#{itemCd},
				#{itemRev},
				#{prcssCd},
				#{partCd},
				#{partRev},
				#{regId},
				getDate()
			)
		]]>
	</insert>
	
		
	<!-- BOM-MAT 수정 -->
	<update id="itemBomMapUpdate">
		<![CDATA[
			UPDATE	TB_ITEM_BOM_MAP			 
			SET
				PART_CD = #{partCd},
				PART_REV = #{partRev},
				UPD_ID = #{updId},
				UPD_DATE = getDate()
			WHERE	ITEM_CD = #{itemCd}
			AND	ITEM_REV = #{itemRev}
			AND	PRCSS_CD = #{prcssCd}
		]]>
	</update>
	
	<!-- BOM-MAT 삭제 -->
	<delete id="itemBomMapDelete">
		<![CDATA[
			DELETE FROM TB_ITEM_BOM_MAP			 
			WHERE	ITEM_CD = #{itemCd}
			AND	ITEM_REV = #{itemRev}
			AND	PRCSS_CD = #{prcssCd}
		]]>
	</delete>
	
	<!-- BOM-MAT 부품 중복검사 -->
	<select id="overlapPartCd" resultType="Integer">
		<![CDATA[
			SELECT COUNT(*) FROM TB_ITEM_BOM_MAP WHERE ITEM_CD = #{itemCd} AND ITEM_REV = #{itemRev} AND PRCSS_CD = #{prcssCd} AND PART_CD = #{partCd} AND PART_REV = #{partRev}
		]]>
	</select>
	
	
	
	<!-- 작업표준서 목록조회 -->
	<select id="itemWorkStandardList" resultMap="ItemMotorVo">
		SELECT ITEM_SEQ
				,WORK_STANDARD_SEQ
				,PRCSS_CD
				,WORK_STANDARD
				,WORK_STANDARD_NM
				,REG_ID
				,REG_DATE
				,UPD_ID
				,UPD_DATE
		FROM TB_ITEM_WORK_STANDARD
		WHERE 1=1
		AND ITEM_SEQ = #{itemSeq}
		
	</select>
	
	<!-- 작업표준서 상세조회 -->
	<select id="itemWorkStandardRead" resultMap="ItemMotorVo">
		SELECT 
				ITEM_SEQ
				,WORK_STANDARD_SEQ
				,PRCSS_CD
				,WORK_STANDARD
				,WORK_STANDARD_NM
				,REG_ID
				,REG_DATE
				,UPD_ID
				,UPD_DATE
		FROM TB_ITEM_WORK_STANDARD X 
		WHERE X.ITEM_SEQ =#{itemSeq}
		AND X.WORK_STANDARD_SEQ = #{workStandardSeq}
		
	</select>
	
	<!-- 작업표준서 미리보기 -->
	<select id="itemWorkStandardPreView" resultMap="ItemMotorVo">
		SELECT 
				ITEM_SEQ
				,WORK_STANDARD_SEQ
				,PRCSS_CD
				,WORK_STANDARD
				,WORK_STANDARD_NM
				,REG_ID
				,REG_DATE
				,UPD_ID
				,UPD_DATE
		FROM TB_ITEM_WORK_STANDARD X 
		WHERE X.ITEM_SEQ =#{itemSeq}
		AND X.WORK_STANDARD_SEQ = (SELECT ISNULL(MAX(WORK_STANDARD_SEQ),1) WORK_STANDARD_SEQ FROM TB_ITEM_WORK_STANDARD WHERE ITEM_SEQ = #{itemSeq} )
		
	</select>
	
	<!-- 작업표준서 시퀀스 가져오기 -->
	<select id="workStandardSeq" resultType="String">
		SELECT ISNULL(MAX(WORK_STANDARD_SEQ + 1),1) WORK_STANDARD_SEQ FROM TB_ITEM_WORK_STANDARD WHERE ITEM_SEQ = #{itemSeq}	
	</select>
	
	
	<!-- 작업표준서 등록 -->
	<insert id="itemWorkStandardCreate">
		INSERT INTO TB_ITEM_WORK_STANDARD	(
			 ITEM_SEQ,
             WORK_STANDARD_SEQ,
             PRCSS_CD,
             WORK_STANDARD,
             WORK_STANDARD_NM,
             REG_ID,
             REG_DATE
        )
		VALUES(
			#{itemSeq},
            #{workStandardSeq},
            #{prcssCd},
            #{workStandard},
            #{workStandardNm},
            #{regId},
            getDate()
        ) 
	</insert>
	
	<!-- 불러오기 작업표준서 등록 -->
	<insert id="itemWorkStandardCallCreate">
		INSERT INTO TB_ITEM_WORK_STANDARD	(
			 ITEM_CD
             , ITEM_REV
             , PRCSS_CD
             , WORK_STANDARD
             , WORK_STANDARD_NM
             , REG_ID
             , REG_DATE
        )
		VALUES(
			#{itemCd}
            , #{itemRev}
            , #{prcssCd}
<!--             , #{workStandard} -->
            , (SELECT WORK_STANDARD FROM TB_ITEM_WORK_STANDARD X WHERE X.ITEM_CD = #{itemCdTo} AND X.ITEM_REV = #{itemRevTo} AND X.PRCSS_CD = #{prcssCd})
            , #{workStandardNm}
			
<!--             , (SELECT WORK_STANDARD_NM FROM TB_ITEM_WORK_STANDARD X WHERE X.ITEM_CD = #{itemCdTo} AND X.ITEM_REV = #{itemRev} AND X.PRCSS_CD = #{prcssCd}) -->
            , #{regId}
            , getDate()
        ) 
	</insert>
	
	
	<!-- 작업표준서 삭제 -->
	<delete id="itemWorkStandardDelete">
	   DELETE FROM TB_ITEM_WORK_STANDARD
	   WHERE  ITEM_SEQ = #{itemSeq}
       AND WORK_STANDARD_SEQ = #{workStandardSeq}

	</delete>
	
	
	<!-- 구매자재관리(발주관리) 부품정보 팝업모달 -->
	<select id="itemPartAllList" resultMap="ItemMotorVo">
		SELECT 
			DISTINCT(A.PART_CD)
			, A.PART_REV
			, A.PART_SEQ
			, B.PART_GUBUN
			,(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=B.PART_GUBUN AND X.BASE_GROUP_CD='035') PART_GUBUN_NM
			, B.PART_NM
			, B.PART_SPEC
			, B.PART_UNIT
			, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=B.PART_UNIT AND X.BASE_GROUP_CD='036') PART_UNIT_NM
			, A.PART_CONSUMPT
			, A.ITEM_CD
			, B.TM_QTY
			, B.UNIT_COST
			, (SELECT 
				SUM(X.PART_QTY) -  SUM(ISNULL(Y.PRE_IN_WHS_QTY,0)) PRE_ORD_QTY
				FROM TB_PURCHASE_ORDER_DTL X 
				LEFT OUTER JOIN TB_IN_OUT_WHS_ADM Y
				ON X.PO_NO=Y.PO_NO
				AND X.PO_SEQ=Y.PO_SEQ
				GROUP BY X.PART_CD , X.PART_REV
			    HAVING X.PART_CD=A.PART_CD
			    AND X.PART_REV=A.PART_REV) PRE_ORD_QTY
		FROM TB_ITEM_MOTOR_EBOM A, TB_ITEM_PART_ADM B 
		WHERE A.PART_CD=B.PART_CD 
		AND A.PART_REV=B.PART_REV
		<if test="itemCd!=null and !itemCd.equals('')">
		AND ITEM_CD = #{itemCd}
		</if>
	</select>
	
	
	<!-- 작업지시선택 - 자재투입내역 리스트 조회 -->
	<select id="workOrderMatrlRead" resultMap="ItemMotorVo">
		<![CDATA[
			SELECT 
				A.ITEM_CD
				, A.ITEM_REV
				, A.PART_CD
				, A.PART_REV
				, B.PART_UNIT
				, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=B.PART_UNIT AND X.BASE_GROUP_CD='036')PART_UNIT_NM
				, B.PART_SPEC
				, B.PART_NM
				, A.PART_CONSUMPT
				, B.PART_GUBUN
				, (SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=B.PART_UNIT AND X.BASE_GROUP_CD='035')PART_GUBUN_NM
			FROM
			TB_ITEM_MOTOR_EBOM A, TB_ITEM_PART_ADM B, TB_ITEM_BOM_MAP C
			WHERE 
				A.ITEM_CD = #{itemCd} 
				AND A.ITEM_REV = #{itemRev} 
				AND A.PART_CD = B.PART_CD 
				AND A.PART_REV = B.PART_REV
				AND A.ITEM_CD = C.ITEM_CD
				AND A.ITEM_REV = C.ITEM_REV
				AND C.PRCSS_CD = #{prcssCd}		
				AND A.PART_REV = C.PART_REV	 
				AND A.PART_CD = C.PART_CD
		]]>
	</select>
	
	<select id="overlapItemCd" resultType="int">
		SELECT COUNT(*) FROM TB_ITEM_MOTOR_ADM WHERE ITEM_CD=#{itemCd} AND ITEM_REV=#{itemRev}
	</select>
	
	<!-- 자재출고 BOM조회 -->
	<select id="itemMotorEBomOutList" resultMap="ItemMotorVo">
		SELECT 
			B.PART_CD,
			B.PART_REV,
			D.PART_NM,
			D.PART_SPEC,
			D.PART_UNIT,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=D.PART_UNIT AND X.BASE_GROUP_CD='036') PART_UNIT_NM,
			A.WORK_ORD_NO,
			C.PART_CD,
			C.PART_REV,
			ISNULL(C.PRE_OUT_QTY,0) PRE_OUT_QTY,
			C.LOCATION_CD,
			C.LOCATION_NM,
			C.AREA_CD,
			C.AREA_NM,
			C.FLOOR_CD,
			B.PART_CONSUMPT,
			A.DTL_ORD_QTY * B.PART_CONSUMPT TOTAL_CONSUMPT,
			ISNULL(D.TM_QTY,0) TM_QTY
		FROM TB_WORK_ORDER A
		LEFT OUTER JOIN TB_ITEM_MOTOR_EBOM B
		ON A.ITEM_CD=B.ITEM_CD
		AND A.ITEM_REV=B.ITEM_REV
		LEFT OUTER JOIN (
			SELECT PART_CD,
					PART_REV,
					SUM(PRE_OUT_QTY) PRE_OUT_QTY,
					MIN(LOCATION_CD) LOCATION_CD,
					(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD= MIN(LOCATION_CD) AND X.BASE_GROUP_CD='073') LOCATION_NM,
					MIN(AREA_CD) AREA_CD,
					(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=MIN(AREA_CD) AND X.BASE_GROUP_CD='067') AREA_NM,
					MIN(FLOOR_CD) FLOOR_CD
			FROM TB_OUT_WHS_ADM
			WHERE 1=1
			AND OUT_CASE = '001' 
			AND WORK_ORD_NO=#{workOrdNo}
			GROUP BY PART_CD,PART_REV
		) C
		ON B.PART_CD=C.PART_CD
		AND B.PART_REV=C.PART_REV
		LEFT OUTER JOIN TB_ITEM_PART_ADM D
		ON B.PART_CD=D.PART_CD
		AND B.PART_REV=D.PART_REV
		WHERE 1=1
		AND A.WORK_ORD_NO=#{workOrdNo}
	</select>
	
	
	<!-- 특주,사양서 목록조회-->
	<select id="itemMotorFileList" resultMap="ItemMotorVo">
		SELECT 
			ITEM_CD,
			ITEM_REV,
			FILE_TYPE,
			FILE_SEQ,
			FILE_DATE,
			FILE_CONTENT,
			FILE_NM,
			(SELECT USER_NM FROM TB_USER WHERE USER_ID=A.REG_ID) REG_NM
		FROM TB_ITEM_MOTOR_FILE A
		WHERE 1=1
		AND ITEM_CD = #{itemCd}
		AND ITEM_REV = #{itemRev}
		AND FILE_TYPE = #{fileType}
		ORDER BY FILE_DATE DESC
		
	</select>
	
	<!-- 특주,사양서 목록조회-->
	<select id="itemMotorFileRead" resultMap="ItemMotorVo">
		SELECT 
			ITEM_CD,
			ITEM_REV,
			FILE_TYPE,
			FILE_SEQ,
			FILE_DATE,
			FILE_CONTENT,
			FILE_NM,
			(SELECT USER_NM FROM TB_USER WHERE USER_ID=A.REG_ID) REG_NM
		FROM TB_ITEM_MOTOR_FILE A
		WHERE 1=1
		AND ITEM_CD = #{itemCd}
		AND ITEM_REV = #{itemRev}
		AND FILE_TYPE = #{fileType}
		AND FILE_SEQ = #{fileSeq}
		
	</select>
	
	<!--  특주,사양서 등록 -->
	<insert id="itemMotorFileCreate">
		INSERT INTO TB_ITEM_MOTOR_FILE	(
        	ITEM_CD,
        	ITEM_REV,
        	FILE_TYPE,
        	FILE_SEQ, 
        	FILE_DATE, 
        	FILE_CONTENT, 
        	FILE_NM, 
        	REG_ID, 
        	REG_DATE
        )
        VALUES  (
            #{itemCd}, 
            #{itemRev}, 
            #{fileType},
            #{fileSeq}, 
            #{fileDate}, 
            #{fileContent}, 
            #{fileNm}, 
            #{regId}, 
            GETDATE()
        )
	</insert>
	
	<!--  특주,사양서 삭제-->
	<delete id="itemMotorFileDelete">
		DELETE FROM TB_ITEM_MOTOR_FILE 
		WHERE 1=1
		AND ITEM_CD =  #{itemCd} 
		AND	ITEM_REV =  #{itemRev} 
		AND	FILE_TYPE = #{fileType}
		AND FILE_SEQ = #{fileSeq}
	</delete>
	
	<!-- 특주,사양서 시퀀스 -->
	<select id="itemMotorFileSeq" resultType="String" >
		SELECT ISNULL(MAX(FILE_SEQ)+1,0) 
		FROM TB_ITEM_MOTOR_FILE 
		WHERE 1=1
		AND ITEM_CD =  #{itemCd} 
		AND	ITEM_REV =  #{itemRev} 
		AND	FILE_TYPE = #{fileType}
	</select>
	
	<!-- 제품명 검색(조건 : 작지번호) -->
	<select id="getItemNm" resultType="String">
		SELECT B.ITEM_NM
		FROM TB_WORK_ORDER A
		INNER JOIN TB_ITEM_MOTOR_ADM B
		ON A.ITEM_CD=B.ITEM_CD
		AND A.ITEM_REV=B.ITEM_REV
		WHERE 1=1
		AND A.WORK_ORD_NO=#{workOrdNo}
	</select>
</mapper>