<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mes.mappers.qm.itemCompleteAdmMapper">

	<resultMap id="ItemCompleteAdmVo" type="mes.domain.qm.ItemCompleteAdmVo">
	
		<result property="doNo"                       		column="DO_NO"				/> 
		<result property="doNoSub"                      	column="DO_NO_SUB"			/> 
		<result property="doNoSev"                      	column="DO_NO_SEV"			/> 
		<result property="doSeq"                      		column="DO_SEQ"				/> 
		<result property="doStatus"                      	column="DO_STAUTS"			/> 
		
		<result property="lotNo"                      		column="LOT_NO"				/> 
		<result property="doDate"                      		column="DO_DATE"			/> 
		<result property="targetQty"                     	column="TARGET_QTY"			/> 
		<result property="workOrdNo"                       	column="WORK_ORD_NO"		/> 
		<result property="barcodeNo"                       	column="BARCODE_NO"			/> 
		<result property="itemSeq"	 						column="ITEM_SEQ"			/>
		<result property="itemCd"                          	column="ITEM_CD"			/> 
		<result property="itemRev"                         	column="ITEM_REV"			/> 
		<result property="itemNm"                          	column="ITEM_NM"			/> 
		<result property="mainGubun"                       	column="MAIN_GUBUN"			/> 
		<result property="itemGubun"                       	column="ITEM_GUBUN"			/> 
		<result property="itemGubunNm"                     	column="ITEM_GUBUN_NM"		/> 
		<result property="itemModel"	 					column="ITEM_MODEL"			/>
		<result property="itemModelNm"	 					column="ITEM_MODEL_NM"		/>
		<result property="inspectCnt"                     	column="INSPECT_CNT"		/> 
		<result property="inspectDate"                     	column="INSPECT_DATE"		/> 
		<result property="inspectChargr"                   	column="INSPECT_CHARGR"		/> 
		<result property="inspectChargrNm"                 	column="INSPECT_CHARGR_NM"	/> 
		<result property="inspectDesc"                 		column="INSPECT_DESC"		/> 
		<result property="qaEval"                 			column="QA_EVAL"			/> 
		<result property="qaEvalNm"                 		column="QA_EVAL_NM"			/> 
		<result property="approvalYn"                 		column="APPROVAL_YN"		/> 
		<result property="approvalYnNm"                 	column="APPROVAL_YN_NM"		/>
		<result property="outputCnt"                       column="OUTPUT_CNT"			/> 
		<result property="inspectQty"                      column="INSPECT_QTY"			/> 
		<result property="pairQty"                         column="PAIR_QTY"			/> 
		<result property="pairCnt"                         column="PAIR_CNT"			/>
		<result property="faultyQty"                       column="FAULTY_QTY"			/> 
		<result property="faultyCnt"                       column="FAULTY_CNT"			/>
		<result property="judgment"                        column="JUDGMENT"			/> 
		<result property="judgmentNm"                      column="JUDGMENT_NM"			/> 
		<result property="lineRes"                         column="LINE_RES"			/> 
		<result property="lineInd"                         column="LINE_IND"			/> 
		<result property="backEmf"                         column="BACK_EMF"			/> 
		<result property="phaseCurr"                       column="PHASE_CURR"			/> 
		<result property="completeDesc"                    column="COMPLETE_DESC"		/> 
		<result property="specialDesc"                     column="SPECIAL_DESC"		/> 
		<result property="shipReport"                      column="SHIP_REPORT"			/> 
		<result property="completeStatusCd"                column="COMPLETE_STATUS_CD"	/> 
		<result property="completeStatusNm"                column="COMPLETE_STATUS_NM"	/> 
		<result property="regId"                           column="REG_ID"				/> 
		<result property="regDate"                         column="REG_DATE"			/> 
		<result property="updId"                           column="UPD_ID"				/> 
		<result property="updDate"                         column="UPD_DATE"			/> 
		<result property="contDtlNo"                       column="CONT_DTL_NO"			/> 
		<result property="middleClass"                     column="MIDDLE_CLASS"		/> 
		<result property="minorClass"                      column="MINOR_CLASS"			/> 
		<result property="middleClassNm"                   column="MIDDLE_CLASS_NM"		/> 
		<result property="minorClassNm"                    column="MINOR_CLASS_NM"		/> 
		
		<result property="itemSeries"                      column="ITEM_SERIES"			/> 
		<result property="itemEncdr"                       column="ITEM_ENCDR"			/> 
		<result property="itemCapa"                        column="ITEM_CAPA"			/> 
		<result property="frameSize"                       column="FRAME_SIZE"			/> 
		<result property="serialNo"                        column="SERIAL_NO"			/> 
		<result property="faultyType"                      column="FAULTY_TYPE"			/> 
		
		<result property="lineResModal"                    column="LINE_RES_MODAL"		/> 
		<result property="directVolt"                      column="DIRECT_VOLT"			/> 
		<result property="concenticity"                    column="CONCENTICITY"		/> 
		<result property="encoder"                         column="ENCODER"				/> 
		<result property="phaseCurrModal"                  column="PHASE_CURR_MODAL"	/> 
		<result property="workFaulty"                      column="WORK_FAULTY"			/> 
		<result property="exteriorFaulty"                  column="EXTERIOR_FAULTY"		/> 
		<result property="vibeFaulty"                      column="VIBE_FAULTY"			/> 
		<result property="specApplyFaulty"                 column="SPEC_APPLY_FAULTY"	/> 
		<result property="faultyQtyModal"                  column="FAULTY_QTY_MODAL"	/> 
		<result property="brake"                       	   column="BRAKE"				/> 
		
		<result property="faultyRate"			column="FAULTY_RATE"		/>		
		<result property="targetRate"			column="TARGET_RATE"		/>	
		<result property="achvRate"				column="ACHV_RATE"			/>
		
		<result property="faultyTypeCd"			column="FAULTY_TYPE_CD"		/>	
		<result property="faultyTypeSeq"		column="FAULTY_TYPE_SEQ"	/>	
		<result property="faultyTypeNm"			column="FAULTY_TYPE_NM"		/>		
		<result property="faultyTypeQty"		column="FAULTY_TYPE_QTY"	/>	
		<result property="faultyTypeDate"		column="FAULTY_TYPE_DATE"	/>	
		<result property="faultyTypeDesc"		column="FAULTY_TYPE_DESC"	/>	
		<result property="faultyTypeTotal"		column="FAULTY_TYPE_TOTAL"	/>	
		<result property="etc1"					column="ETC1"				/>		
		<result property="faultyTypeRate"		column="FAULTY_TYPE_RATE"	/>	
		
		<result property="qcObjYear"	 		column="QC_OBJ_YEAR"		/>
		<result property="qcObjGubun"			column="QC_OBJ_GUBUN"		/>
		<result property="qcObjMon"	 			column="QC_OBJ_MON"			/>
		<result property="qcObjValue"	 		column="QC_OBJ_VALUE"		/>
		
<!-- 		작업지시선택 테이블 -->
		<result property="upperWorkOrdNo"	 	column="UPPER_WORK_ORD_NO"	/>
		<result property="preWorkOrdNo"	 		column="PRE_WORK_ORD_NO"	/>
		<result property="workOrdDate"	 		column="WORK_ORD_DATE"		/>
		<result property="workEmerYn"	 		column="WORK_EMER_YN"		/>
		<result property="ordLotNo"	 			column="ORD_LOT_NO"			/>
		<result property="dtlOrdCnt"	 		column="DTL_ORD_CNT"		/>
		
		<result property="equipCd"	 			column="EQUIP_CD"			/>
		<result property="ordDate"	 			column="ORD_DATE"			/>
		<result property="workStatusCd"	 		column="WORK_STATUS_CD"		/>
		<result property="dtlOrdQty"	 		column="DTL_ORD_QTY"		/>
		<result property="workOrdQty"	 		column="WORK_ORD_QTY"		/>
		<result property="outputDate"	 		column="OUTPUT_DATE"		/>
		<result property="dlvDate"	 			column="DLV_DATE"			/>
		<result property="lastYn"	 			column="LAST_YN"			/>
		<result property="reworkYn"	 			column="REWORK_YN"			/>
		<result property="reworkPrcssCd"	 	column="REWORK_PRCSS_CD"	/>
		<result property="groupPrcssCd"	 		column="GROUP_PRCSS_CD"		/>
		<result property="ordDesc"	 			column="ORD_DESC"			/>
		
<!-- 		추가사항 -->
		
		<result property="workEndTime"	 		column="WORK_END_TIME"		/>
		<result property="fairQty"	 			column="FAIR_QTY"			/>
		
		
		<result property="itemGrade"           column="ITEM_GRADE"				/>
		<result property="inspResultGubun"     column="INSP_RESULT_GUBUN"		/>
		<result property="inspResultGubunNm"   column="INSP_RESULT_GUBUN_NM"	/>
		<result property="equipCavity"         column="EQUIP_CAVITY"			/>
		<result property="equipNo"             column="EQUIP_NO"				/>
		<result property="moldNm"              column="MOLD_NM"					/>
		<result property="moldCd"              column="MOLD_CD"					/>
	    <result property="matrlNm"             column="MATRL_NM"				/>
	    <result property="inspectGubun"        column="INSPECT_GUBUN"			/>
	    <result property="inspectGubunNm"      column="INSPECT_GUBUN_NM"		/>
	    <result property="inspSeq"             column="INSP_SEQ"				/>
	    <result property="inspResult"          column="INSP_RESULT"				/>
	    <result property="inspResultNm"        column="INSP_RESULT_NM"			/>
	    <result property="inspList"            column="INSP_LIST"				/>
	    <result property="inspType"            column="INSP_TYPE"				/>
	    <result property="inspTypeNm"          column="INSP_TYPE_NM"			/>
	    <result property="inspStandUpper"      column="INSP_STAND_UPPER"		/>
	    <result property="inspStandLower"      column="INSP_STAND_LOWER"		/>
	    <result property="inspX1"              column="INSP_X1"					/>
	    <result property="inspX2"              column="INSP_X2"					/>
	    <result property="inspX3"              column="INSP_X3"					/>
	    <result property="inspX4"              column="INSP_X4"					/>
	    <result property="inspX5"              column="INSP_X5"					/>
		<result property="inspX6"              column="INSP_X6"					/>
		<result property="inspCd"		  	   column="INSP_CD"					/>
		<result property="inspCheck"		   column="INSP_CHECK"				/>
		<result property="inspCheckNm"		   column="INSP_CHECK_NM"			/>
		<result property="cavityCnt"           column="CAVITY_CNT"				/> 
		
		<result property="cavityNo1"           column="CAVITY_NO1"				/>
	    <result property="cavityNo2"           column="CAVITY_NO2"				/>
	    <result property="cavityNo3"           column="CAVITY_NO3"				/>
	    <result property="cavityNo4"           column="CAVITY_NO4"				/>
	    <result property="cavityNo5"           column="CAVITY_NO5"				/>
	    <result property="inspSourceNo"        column="INSP_SOURCE_NO"			/>
	    <result property="inspSourceSubNo"	   column="INSP_SOURCE_SUB_NO"		/>
	</resultMap>
	
	<!--완제품관리 목록조회 -->
	<select id="listAll" resultMap="ItemCompleteAdmVo">
		SELECT 
			DOD_TB.DO_NO
			, DOD_TB.DO_NO_SEV DO_NO_SUB
			, DOA_TB.DO_DATE
			, DOD_TB.OUTPUT_DATE
			, DOD_TB.DO_STAUTS
			, ISNULL(SUM(DOD_TB.TARGET_QTY), 0) TARGET_QTY
			, IIA_TB.MAIN_GUBUN
			, IIA_TB.ITEM_SEQ
			, IIA_TB.ITEM_CD
			, IIA_TB.ITEM_NM
			, IIA_TB.ITEM_MODEL
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA_TB.ITEM_MODEL AND X.BASE_GROUP_CD = '099') ITEM_MODEL_NM
			, IIA_TB.ITEM_GUBUN
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA_TB.ITEM_GUBUN AND X.BASE_GROUP_CD = '079') ITEM_GUBUN_NM
			, ICM_TB.APPROVAL_YN
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = ICM_TB.APPROVAL_YN AND X.BASE_GROUP_CD = '062') APPROVAL_YN_NM
			, ICM_TB.QA_EVAL
			, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = ICM_TB.QA_EVAL AND X.BASE_GROUP_CD = '072') QA_EVAL_NM
			, ICM_TB.INSPECT_DATE
			, ICM_TB.INSPECT_CNT
			, ICM_TB.INSPECT_CHARGR
			, (SELECT X.USER_NM FROM TB_USER X WHERE X.USER_NUMBER = ICM_TB.INSPECT_CHARGR) INSPECT_CHARGR_NM
			, ICA_TB.PAIR_QTY
			, ICA_TB.FAULTY_QTY
			, (SELECT X.INSP_CD FROM TB_INSP_ITEM_ADM X WHERE X.ITEM_SEQ = IIA_TB.ITEM_SEQ AND X.INSP_GUBUN = '001') INSP_CD
			, ICM_TB.CAVITY_CNT
		FROM TB_DELIVERY_ORDER_ADM DOA_TB
		LEFT OUTER JOIN (
			SELECT	
				DO_NO
				, DO_NO_SEV
				, ITEM_SEQ
				, OUTPUT_DATE
				, ISNULL(SUM(TARGET_QTY), 0) TARGET_QTY
				, CASE WHEN COUNT(*) = (
					SELECT 
						COUNT(*)
					FROM TB_DELIVERY_ORDER_DTL 
					WHERE 1=1 
					GROUP BY DO_NO, DO_NO_SEV, DO_STATUS
					HAVING 1=1
					AND DO_STATUS = '003'
					AND Z.DO_NO = DO_NO
					AND Z.DO_NO_SEV = DO_NO_SEV
				)
				THEN '출하완료'
				WHEN COUNT(*) = (
					SELECT 
						COUNT(*)
					FROM TB_DELIVERY_ORDER_DTL 
					WHERE 1=1 
					GROUP BY DO_NO, DO_NO_SEV, DO_STATUS
					HAVING 1=1
					AND DO_STATUS = '001'
					AND Z.DO_NO = DO_NO
					AND Z.DO_NO_SEV = DO_NO_SEV
				)
				THEN '출하요청'
				ELSE '검사완료' END DO_STAUTS
			FROM TB_DELIVERY_ORDER_DTL Z
			GROUP BY DO_NO, DO_NO_SEV, ITEM_SEQ, OUTPUT_DATE
		) DOD_TB
		ON DOA_TB.DO_NO = DOD_TB.DO_NO
		LEFT OUTER JOIN TB_ITEM_COMPLETE_MASTER_ADM ICM_TB
		ON ICM_TB.DO_NO = DOD_TB.DO_NO
		AND ICM_TB.DO_NO_SUB = DOD_TB.DO_NO_SEV
		LEFT OUTER JOIN (
			SELECT
				DO_NO
				, DO_NO_SUB
				, ISNULL(SUM(PAIR_QTY), 0) PAIR_QTY
				, ISNULL(SUM(FAULTY_QTY), 0) FAULTY_QTY
			FROM TB_ITEM_COMPLETE_ADM
			GROUP BY DO_NO, DO_NO_SUB
		)ICA_TB
		ON ICM_TB.DO_NO = ICA_TB.DO_NO
		AND ICM_TB.DO_NO_SUB = ICA_TB.DO_NO_SUB
		LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA_TB
		ON DOD_TB.ITEM_SEQ = IIA_TB.ITEM_SEQ
		WHERE 1=1
		<if test="mainGubun != null and !mainGubun.equals('')">
		AND IIA_TB.MAIN_GUBUN = #{mainGubun}
		</if>
		AND (IIA_TB.SUPPLY_TYPE IS NULL OR IIA_TB.SUPPLY_TYPE='001') <!-- 협력사출고건 제외하고 조회 -->
		GROUP BY
			IIA_TB.MAIN_GUBUN
			, DOD_TB.DO_NO
			, DOA_TB.DO_DATE
			, DOD_TB.OUTPUT_DATE
			, DOD_TB.DO_NO_SEV
			, DOD_TB.DO_STAUTS
			, IIA_TB.ITEM_SEQ
			, IIA_TB.ITEM_CD
			, IIA_TB.ITEM_NM
			, IIA_TB.ITEM_MODEL
			, IIA_TB.ITEM_GUBUN
			, ICM_TB.APPROVAL_YN
			, ICM_TB.QA_EVAL
			, ICM_TB.INSPECT_DATE
			, ICM_TB.INSPECT_CNT
			, ICA_TB.PAIR_QTY
			, ICA_TB.FAULTY_QTY
			, ICM_TB.INSPECT_CHARGR
			, ICM_TB.CAVITY_CNT
		HAVING 1=1
		<if test="startDate!=null and !startDate.equals('')">
		AND DOD_TB.OUTPUT_DATE BETWEEN #{startDate} AND #{endDate}
		</if>
		<if test="qaEval!=null and !qaEval.equals('')">
		AND ICM_TB.QA_EVAL = #{qaEval}
		</if>
		<if test="approvalYn!=null and !approvalYn.equals('')">
		AND ICM_TB.APPROVAL_YN = #{approvalYn}
		</if>
		<if test="doStatus!=null and !doStatus.equals('')">
			<if test="doStatus!=null and doStatus.equals('001')">
				AND DOD_TB.DO_STAUTS = '출하요청'
			</if>
			<if test="doStatus!=null and doStatus.equals('002')">
				AND DOD_TB.DO_STAUTS = '검사완료'
			</if>
			<if test="doStatus!=null and doStatus.equals('003')">
				AND DOD_TB.DO_STAUTS = '출하완료'
			</if>
		</if>
		
	</select>
	
	<!--완제품관리 생산lot별 목록조회 -->
	<select id="itemCompleteAdmList" resultMap="ItemCompleteAdmVo">
		SELECT 
			DOD_TB.DO_NO,
			DOD_TB.DO_NO_SEV DO_NO_SUB,
			DOD_TB.LOT_NO,
			DOD_TB.TARGET_QTY,
			DOD_TB.DO_SEQ,
			ICA_TB.PAIR_QTY,
			ICA_TB.FAULTY_QTY,
			ICA_TB.JUDGMENT
		FROM TB_DELIVERY_ORDER_DTL DOD_TB
		LEFT OUTER JOIN
		(
		SELECT 
			DO_NO,
			DO_NO_SUB,
			ICA_SEQ,
			PAIR_QTY,
			FAULTY_QTY,
			JUDGMENT
		FROM TB_ITEM_COMPLETE_ADM 
		GROUP BY 
			DO_NO,
			DO_NO_SUB,
			ICA_SEQ,
			PAIR_QTY,
			FAULTY_QTY,
			JUDGMENT
		)ICA_TB
		ON DOD_TB.DO_NO=ICA_TB.DO_NO
		AND DOD_TB.DO_NO_SEV=ICA_TB.DO_NO_SUB
		AND DOD_TB.DO_SEQ=ICA_TB.ICA_SEQ
		WHERE 1=1	
		AND DOD_TB.DO_NO=#{doNo}
		AND DOD_TB.DO_NO_SEV=#{doNoSub}
	</select>
	
	
	<!--완제품검사 마스터 등록-->
	<insert id="itemCompleteMasterCreate">
		INSERT INTO TB_ITEM_COMPLETE_MASTER_ADM(
			DO_NO,
			DO_NO_SUB,
			ITEM_SEQ,
			INSPECT_CNT,
			INSPECT_DATE,
			INSPECT_CHARGR,
			QA_EVAL,
			APPROVAL_YN,
			CAVITY_CNT,
			INSPECT_DESC,
			REG_ID,
			REG_DATE
		) 
		VALUES(
			#{doNo},
			#{doNoSub},
			#{itemSeq},
			#{inspectCnt},
			#{inspectDate},
			#{inspectChargr},
			#{qaEval},
			#{approvalYn},
			#{cavityCnt},
			#{inspectDesc},
			#{regId},
			GETDATE()
		)
	</insert>
	
	<!--완제품검사 마스터 수정 -->
	<update id="itemCompleteMasterUpdate">
		UPDATE	TB_ITEM_COMPLETE_MASTER_ADM 
		<set>
			<if test="inspectCnt!=null and !inspectCnt.equals('') ">
			INSPECT_CNT = #{inspectCnt},
			</if>
			<if test="inspectDate!=null and !inspectDate.equals('') ">
			INSPECT_DATE = #{inspectDate},
			</if>
			<if test="inspectChargr!=null and !inspectChargr.equals('') ">
			INSPECT_CHARGR = #{inspectChargr},
			</if>
			<if test="qaEval!=null and !qaEval.equals('') ">
			QA_EVAL = #{qaEval},
			</if>
			<if test="approvalYn!=null and !approvalYn.equals('') ">
			APPROVAL_YN = #{approvalYn},
			</if>
			<if test="cavityCnt!=null and !cavityCnt.equals('') ">
			CAVITY_CNT = #{cavityCnt},
			</if>
			<if test="inspectDesc!=null and !inspectDesc.equals('') ">
			INSPECT_DESC = #{inspectDesc},
			</if>
			UPD_ID = #{updId},
			UPD_DATE = GETDATE()
		</set>
		WHERE 1=1
		AND DO_NO = #{doNo}
		AND DO_NO_SUB = #{doNoSub}
	</update>
	
	<!--완제품관리 상세 목록조회 -->
	<select id="read" resultMap="ItemCompleteAdmVo">
		SELECT 
			DOD_TB.DO_NO,
			DOD_TB.DO_NO_SEV DO_NO_SUB,
			DOA_TB.DO_DATE,
			ISNULL(SUM(DOD_TB.TARGET_QTY),0)TARGET_QTY,
			IIA_TB.MAIN_GUBUN,
			IIA_TB.ITEM_SEQ,
			IIA_TB.ITEM_CD,
			IIA_TB.ITEM_NM,
			IIA_TB.ITEM_MODEL,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE BASE_CD=IIA_TB.ITEM_MODEL AND BASE_GROUP_CD='099')ITEM_MODEL_NM,
			IIA_TB.ITEM_GUBUN,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE BASE_CD=IIA_TB.ITEM_GUBUN AND BASE_GROUP_CD='079')ITEM_GUBUN_NM,
			ICM_TB.APPROVAL_YN,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=ICM_TB.APPROVAL_YN AND X.BASE_GROUP_CD='062') APPROVAL_YN_NM,
			ICM_TB.QA_EVAL,
			(SELECT BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD=ICM_TB.QA_EVAL AND X.BASE_GROUP_CD='072') QA_EVAL_NM,
			ICM_TB.INSPECT_DATE,
			ICM_TB.INSPECT_CNT,
			ICA_TB.PAIR_QTY,
			ICA_TB.FAULTY_QTY
		FROM TB_DELIVERY_ORDER_ADM DOA_TB
		LEFT OUTER JOIN (
				SELECT	
						DO_NO,
						DO_NO_SEV,
						ITEM_SEQ,
						ISNULL(SUM(TARGET_QTY),0) TARGET_QTY
				FROM TB_DELIVERY_ORDER_DTL 
				GROUP BY DO_NO, DO_NO_SEV,ITEM_SEQ
			
		)DOD_TB
		ON DOA_TB.DO_NO=DOD_TB.DO_NO
		LEFT OUTER JOIN TB_ITEM_COMPLETE_MASTER_ADM ICM_TB
		ON ICM_TB.DO_NO=DOD_TB.DO_NO
		AND ICM_TB.DO_NO_SUB=DOD_TB.DO_NO_SEV
		LEFT OUTER JOIN (
			SELECT	
				DO_NO,
				DO_NO_SUB,
				ISNULL(SUM(PAIR_QTY),0) PAIR_QTY,
				ISNULL(SUM(FAULTY_QTY),0) FAULTY_QTY
			FROM TB_ITEM_COMPLETE_ADM
			GROUP BY DO_NO, DO_NO_SUB
		)ICA_TB
		ON ICM_TB.DO_NO=ICA_TB.DO_NO
		AND ICM_TB.DO_NO_SUB=ICA_TB.DO_NO_SUB
		
		LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA_TB
		ON DOD_TB.ITEM_SEQ=IIA_TB.ITEM_SEQ
		GROUP BY 
			IIA_TB.MAIN_GUBUN,
			DOD_TB.DO_NO,
			DOA_TB.DO_DATE,
			DOD_TB.DO_NO_SEV,
			IIA_TB.ITEM_SEQ,
			IIA_TB.ITEM_CD,
			IIA_TB.ITEM_NM,
			IIA_TB.ITEM_MODEL,
			IIA_TB.ITEM_GUBUN,
			ICM_TB.APPROVAL_YN,
			ICM_TB.QA_EVAL,
			ICM_TB.INSPECT_DATE,
			ICM_TB.INSPECT_CNT,
			ICA_TB.PAIR_QTY,
			ICA_TB.FAULTY_QTY
		HAVING 1=1
		AND DOD_TB.DO_NO = #{doNo}
		AND DOD_TB.DO_NO_SEV = #{doNoSub}
	</select>
	
	<!-- 완제품 생성 -->
	<insert id="createComplete">
		INSERT INTO TB_ITEM_COMPLETE_ADM(
			DO_NO
			,DO_NO_SUB
			,ICA_SEQ
			,PAIR_QTY
			,FAULTY_QTY
			,JUDGMENT
			,REG_ID
			,REG_DATE					
		)		 
		VALUES(
			#{doNo}
			,#{doNoSub}
			,#{icaSeq}
			,#{pairQty}
			,#{faultyQty}
			,#{judgment}
			,#{regId}
			,GETDATE()			
		)
	</insert>
		
	<!-- 완제품 수정 -->
	<update id="updateComplete">
		UPDATE	TB_ITEM_COMPLETE_ADM
		SET	PAIR_QTY =  #{pairQty}
			,FAULTY_QTY = #{faultyQty}
			,JUDGMENT = #{judgment}
			,UPD_ID = #{updId}
			,UPD_DATE = GETDATE()
		WHERE 1=1
		AND DO_NO = #{doNo}
		AND DO_NO_SUB = #{doNoSub}
		AND ICA_SEQ = #{icaSeq}
	</update>
	
	<!-- 완제품검사 삭제 -->
	<delete id="deleteComplete">
		DELETE FROM TB_ITEM_COMPLETE_ADM
		WHERE 1=1
		AND DO_NO = #{doNo}
		AND DO_NO_SUB = #{doNoSub}
		<if test="icaSeq!=null and !icaSeq.equals('')">
		AND ICA_SEQ=#{icaSeq}
		</if>
	</delete>
	
	<!-- 완제품검사 삭제 -->
	<delete id="deleteMasterComplete">
		DELETE FROM TB_ITEM_COMPLETE_MASTER_ADM
		WHERE 1=1
		AND DO_NO = #{doNo}
		AND DO_NO_SUB = #{doNoSub}
	</delete>
	
	
	<!-- 완제품검사 시퀀스 생성 -->
	<select id="getIcaSeq" resultType="String">
		SELECT ISNULL(MAX(ICA_SEQ)+1,0)
		FROM TB_ITEM_COMPLETE_ADM 
		WHERE 1=1
		AND DO_NO = #{doNo}
		AND DO_NO_SUB = #{doNoSub}
	
	</select>
	
	<!-- 완제품 불량내역 생성 -->
	<insert id="createFaulty">
		INSERT INTO TB_ITEM_FAULTY_CAUSE(
			WORK_ORD_NO
			,ITEM_CD
			,ITEM_REV
			,LINE_RES
			,DIRECT_VOLT
			,CONCENTICITY
			,ENCODER
			,PHASE_CURR
			,WORK_FAULTY
			,EXTERIOR_FAULTY
			,VIBE_FAULTY
			,SPEC_APPLY_FAULTY
			,FAULTY_QTY
			,BRAKE
			,REG_ID
			,REG_DATE
					
		)		 
		VALUES(
			#{workOrdNo}
			,#{itemCd}
			,#{itemRev}
			,#{lineResModal}
			,#{directVolt}
			,#{concenticity}
			,#{encoder}
			,#{phaseCurrModal}
			,#{workFaulty}
			,#{exteriorFaulty}
			,#{vibeFaulty}
			,#{specApplyFaulty}
			,#{faultyQtyModal}
			,#{brake}
			,#{regId}
			,GETDATE()			
		)
	</insert>
	
	<!-- 완제품 불량내역 수정 -->
	<update id="updateFaulty">
		UPDATE	TB_ITEM_FAULTY_CAUSE
		SET	LINE_RES = #{lineResModal}
			,DIRECT_VOLT = #{directVolt}
			,CONCENTICITY =  #{concenticity}
			,ENCODER = #{encoder}
			,PHASE_CURR =  #{phaseCurrModal}
			,WORK_FAULTY =  #{workFaulty}
			,EXTERIOR_FAULTY = #{exteriorFaulty}
			,VIBE_FAULTY = #{vibeFaulty}
			,SPEC_APPLY_FAULTY = #{specApplyFaulty}
			,FAULTY_QTY = #{faultyQtyModal}
			,BRAKE =	 #{brake}
			,UPD_ID = #{updId}   
			,UPD_DATE = GETDATE()
		WHERE	WORK_ORD_NO = #{workOrdNo}
		AND ITEM_SEQ = #{itemSeq}
	</update>
	
	
	<!-- 완제품 불량내역 삭제 -->
	<delete id="deleteFaulty">
			DELETE FROM TB_ITEM_FAULTY_CAUSE 
			WHERE 1=1
			AND WORK_ORD_NO = #{workOrdNo}
			AND ITEM_SEQ = #{itemSeq}
	</delete>
	
	<!-- 완제품관리 마스터 승인수정 -->
	<update id="updateStatus">
		UPDATE	TB_ITEM_COMPLETE_MASTER_ADM
		SET	 
			APPROVAL_YN = #{approvalYn},
			UPD_ID = #{updId},
			UPD_DATE = GETDATE()
		WHERE 1=1
		AND DO_NO = #{doNo}
		AND DO_NO_SUB = #{doNoSub}
	</update>
	
	<!-- 제품 입고 여부확인 -->
	<select id="checkItemWhsYn" resultType="int">
		SELECT COUNT(*)
		FROM TB_ITEM_WHS_ADM
		WHERE 1=1
		AND WORK_ORD_NO = #{workOrdNo}
		AND ITEM_SEQ = #{itemSeq}
	</select>
	
	<!-- 완제품 성적서 삭제 -->
	<update id="completeFileDelete" >
		UPDATE TB_ITEM_COMPLETE_ADM 
		SET SHIP_REPORT = ''  
		WHERE WORK_ORD_NO = #{workOrdNo}	
		AND ITEM_SEQ = #{itemSeq}
	</update>

	<!-- 바코드 유무 확인 -->
	<select id="checkBarcodeNo" resultType="String">
		SELECT BARCODE_NO
		FROM TB_WORK_ORDER A
		WHERE A.WORK_ORD_NO = #{workOrdNo}
	</select>
	
	<!-- 바코드 생성 -->
	<update id="updateBarcodeNo">
		UPDATE TB_WORK_ORDER
		SET BARCODE_NO = #{barcodeNo}
		WHERE 1=1
		AND WORK_ORD_NO = #{workOrdNo}
	</update>
	
	
	
	<!--완제품검사 불량유형조회 -->
	<select id="itemCompleteFaultyTypeList" resultMap="ItemCompleteAdmVo">
		SELECT A.BASE_INFO_CD FAULTY_TYPE_CD,
			   A.BASE_INFO_NM FAULTY_TYPE_NM,
			   A.ETC1,
			   B.FAULTY_TYPE_QTY,
			   B.FAULTY_TYPE_DATE,
			   B.FAULTY_TYPE_DESC
		FROM TB_BASE_INFO_ADM A
		LEFT OUTER JOIN TB_ITEM_COMPLETE_FAULTY_TYPE B
		ON A.BASE_INFO_CD=B.FAULTY_TYPE_CD
		AND WORK_ORD_NO = #{workOrdNo}
		AND ITEM_SEQ = #{itemSeq}
		WHERE A.BASE_INFO_TYPE = 'FT'
		AND A.BASE_INFO_GUBUN='002'
		ORDER BY ETC1 ASC
	</select>
	
	
	<!--완제품검사 불량유형조회 -->
	<select id="itemCompleteFaultyTypeRead" resultMap="ItemCompleteAdmVo">
			SELECT A.BASE_INFO_CD FAULTY_TYPE_CD,
			   A.BASE_INFO_NM FAULTY_TYPE_NM,
			   A.ETC1,
			   B.FAULTY_TYPE_QTY,
			   B.FAULTY_TYPE_DATE,
			   B.FAULTY_TYPE_DESC
		FROM TB_BASE_INFO_ADM A
		LEFT OUTER JOIN TB_ITEM_COMPLETE_FAULTY_TYPE B
		ON A.BASE_INFO_CD=B.FAULTY_TYPE_CD
		AND DO_NO = #{doNo}
		AND DO_NO_SUB = #{doNoSub}
		AND ICA_SEQ = #{icaSeq}
		WHERE A.BASE_INFO_TYPE = 'FT'
		AND A.BASE_INFO_GUBUN = '002'
		ORDER BY A.ETC1 ASC
	</select>
	
	<!--완제품검사 불량유형등록 -->
	<insert id="itemCompleteFaultyTypeCreate">
		INSERT INTO TB_ITEM_COMPLETE_FAULTY_TYPE (
            DO_NO,
            DO_NO_SUB,
            ICA_SEQ,
            FAULTY_TYPE_CD,
            FAULTY_TYPE_QTY,
            FAULTY_TYPE_DATE,
            FAULTY_TYPE_DESC,
            REG_ID,
            REG_DATE
        )
		VALUES     (
			#{doNo},
			#{doNoSub},
            #{icaSeq},
            #{faultyTypeCd},
            #{faultyTypeQty},
            #{faultyTypeDate},
            #{faultyTypeDesc},
            #{regId},
           	GETDATE()
        ) 
	</insert>

	
	<!-- 완제품검사 불량유형삭제 -->
	<delete id="itemCompleteFaultyTypeDelete">
		DELETE FROM TB_ITEM_COMPLETE_FAULTY_TYPE
		WHERE 1=1
		AND DO_NO = #{doNo}
		AND DO_NO_SUB = #{doNoSub}
		<if test="icaSeq!=null and !icaSeq.equals('')">
		AND ICA_SEQ = #{icaSeq}
		</if>
	</delete>
	
	
	<!-- ************************************ 모니터링 *********************** -->
	
	<!-- 완제품검사 품질경향 분석 목록조회 -->
	<select id="qualityTrendAnlyList" resultMap="ItemCompleteAdmVo">
		SELECT	
			C.QC_OBJ_YEAR,
			C.QC_OBJ_MON,
			ISNULL(SUM(A.INSPECT_QTY),0) INSPECT_QTY,
			ISNULL(SUM(A.FAULTY_QTY),0) FAULTY_QTY,
			CONCAT(ISNULL(ROUND(CONVERT(FLOAT,SUM(A.FAULTY_QTY))/CONVERT(FLOAT,SUM(A.INSPECT_QTY))*100,3),0),'%') FAULTY_RATE,
			C.QC_OBJ_VALUE TARGET_RATE,
			(CASE WHEN CONVERT(FLOAT,SUM(A.FAULTY_QTY))/CONVERT(FLOAT,SUM(A.INSPECT_QTY)) <![CDATA[<=]]> C.QC_OBJ_VALUE THEN '100%'
					 ELSE CONCAT(ISNULL(ROUND((C.QC_OBJ_VALUE/CONVERT(FLOAT,SUM(A.FAULTY_QTY))/CONVERT(FLOAT,SUM(A.INSPECT_QTY))) * 100,3),0),'%')
					 END) ACHV_RATE
		FROM 
		(SELECT QC_OBJ_YEAR,
			QC_OBJ_MON,
			QC_OBJ_VALUE
			FROM TB_QC_OBJECTIVE_ADM
			WHERE QC_OBJ_GUBUN='002'
			GROUP BY QC_OBJ_YEAR, QC_OBJ_MON, QC_OBJ_VALUE
			HAVING  QC_OBJ_YEAR LIKE #{inspectDate}) C
			LEFT OUTER JOIN TB_ITEM_COMPLETE_ADM A
			ON  SUBSTRING(A.INSPECT_DATE,0,5)=C.QC_OBJ_YEAR
			AND SUBSTRING(A.INSPECT_DATE,5,2)=C.QC_OBJ_MON
		GROUP BY QC_OBJ_YEAR ,QC_OBJ_MON ,C.QC_OBJ_VALUE
		HAVING QC_OBJ_YEAR LIKE #{inspectDate}
	</select>
	
	<select id="qualityTrendAnlyList11" resultMap="ItemCompleteAdmVo" >
	
	SELECT	
			QC_OBJ_YEAR,
			QC_OBJ_MON,
			FORMAT(ISNULL(SUM(DODO_TB.INSPECT_CNT),0), '##0.###') INSPECT_CNT,
			FORMAT(ISNULL(SUM(DODO_TB.PAIR_CNT),0), '##0.###') PAIR_CNT,
			FORMAT(ISNULL(SUM(DODO_TB.FAULTY_CNT),0), '##0.###') FAULTY_CNT,
			FORMAT(ISNULL(SUM(DODO_TB.OUTPUT_QTY),0), '##0.###') OUTPUT_CNT,
			CONCAT(ISNULL(ROUND(CONVERT(FLOAT,SUM(DODO_TB.FAULTY_CNT))/CONVERT(FLOAT,SUM(DODO_TB.PAIR_CNT)+SUM(DODO_TB.FAULTY_CNT))*100,3),0),'%') FAULTY_RATE,
			FORMAT(QC_OBJ_VALUE, '##0.###') TARGET_RATE,
			(CASE WHEN CONVERT(FLOAT,SUM(DODO_TB.FAULTY_CNT))/CONVERT(FLOAT,SUM(DODO_TB.PAIR_CNT)+SUM(DODO_TB.FAULTY_CNT)) <![CDATA[<=]]> C.QC_OBJ_VALUE THEN '100%'
				 ELSE CONCAT(ISNULL(ROUND((C.QC_OBJ_VALUE/(CONVERT(FLOAT,SUM(DODO_TB.FAULTY_CNT))/CONVERT(FLOAT,SUM(DODO_TB.PAIR_CNT)+SUM(DODO_TB.FAULTY_CNT)))) * 100,3),0),'%')
				 END) ACHV_RATE
		FROM 
		(SELECT QC_OBJ_YEAR,
			QC_OBJ_MON,
			QC_OBJ_VALUE
			FROM TB_QC_OBJECTIVE_ADM
			WHERE QC_OBJ_GUBUN='002'
			GROUP BY QC_OBJ_YEAR, QC_OBJ_MON, QC_OBJ_VALUE
			HAVING  QC_OBJ_YEAR LIKE #{outputDate})C
		LEFT OUTER JOIN (
		SELECT 
			DOD_TB.OUTPUT_DATE,
			ICM_TB.INSPECT_CNT,
			ICA_TB.PAIR_QTY PAIR_CNT,
			ICA_TB.FAULTY_QTY FAULTY_CNT,
			ISNULL(SUM(DOD_TB.OUTPUT_QTY),0)OUTPUT_QTY
		FROM 			
		TB_DELIVERY_ORDER_ADM DOA_TB
		LEFT OUTER JOIN (
				SELECT	
						DO_NO,
						DO_NO_SEV,
						ITEM_SEQ,
						OUTPUT_DATE,
						ISNULL(SUM(OUTPUT_QTY),0) OUTPUT_QTY,
						CASE WHEN COUNT(*) = 
								(
									SELECT 
										COUNT(*)
									FROM TB_DELIVERY_ORDER_DTL 
									WHERE 1=1 
									GROUP BY DO_NO,DO_NO_SEV,DO_STATUS
									HAVING 1=1
									AND DO_STATUS = '003'
									AND Z.DO_NO=DO_NO
									AND Z.DO_NO_SEV=DO_NO_SEV
								)
							THEN '출하완료'
							WHEN COUNT(*) = 
								(
									SELECT 
										COUNT(*)
									FROM TB_DELIVERY_ORDER_DTL 
									WHERE 1=1 
									GROUP BY DO_NO,DO_NO_SEV,DO_STATUS
									HAVING 1=1
									AND DO_STATUS = '001'
									AND Z.DO_NO=DO_NO
									AND Z.DO_NO_SEV=DO_NO_SEV
								)
							THEN '출하요청'
							ELSE '검사완료' END DO_STAUTS
				FROM TB_DELIVERY_ORDER_DTL Z
				GROUP BY DO_NO, DO_NO_SEV,ITEM_SEQ,OUTPUT_DATE
			
		)DOD_TB
		ON DOA_TB.DO_NO=DOD_TB.DO_NO
		LEFT OUTER JOIN TB_ITEM_COMPLETE_MASTER_ADM ICM_TB
		ON ICM_TB.DO_NO=DOD_TB.DO_NO
		AND ICM_TB.DO_NO_SUB=DOD_TB.DO_NO_SEV
		LEFT OUTER JOIN (
			SELECT	
				DO_NO,
				DO_NO_SUB,
				ISNULL(SUM(PAIR_QTY),0) PAIR_QTY,
				ISNULL(SUM(FAULTY_QTY),0) FAULTY_QTY
			FROM TB_ITEM_COMPLETE_ADM
			GROUP BY DO_NO, DO_NO_SUB
		)ICA_TB
		ON ICM_TB.DO_NO=ICA_TB.DO_NO
		AND ICM_TB.DO_NO_SUB=ICA_TB.DO_NO_SUB
		LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA_TB
		ON DOD_TB.ITEM_SEQ=IIA_TB.ITEM_SEQ
		GROUP BY 
			DOD_TB.OUTPUT_DATE,
			ICM_TB.INSPECT_CNT,
			ICA_TB.PAIR_QTY,
			ICA_TB.FAULTY_QTY
		)DODO_TB
		ON  SUBSTRING(DODO_TB.OUTPUT_DATE,0,5)=C.QC_OBJ_YEAR
		AND SUBSTRING(DODO_TB.OUTPUT_DATE,5,2)=C.QC_OBJ_MON
		GROUP BY QC_OBJ_YEAR ,QC_OBJ_MON ,C.QC_OBJ_VALUE
		HAVING QC_OBJ_YEAR LIKE #{outputDate}
	
	
	</select>
	
	
	<!-- 완제품검사 원인별 불량누적현황 목록조회 -->
	<select id="faultyStatusList" resultMap="ItemCompleteAdmVo">
		SELECT
			SUBSTRING(A.FAULTY_TYPE_DATE,0,7) FAULTY_TYPE_DATE,
			FAULTY_TYPE_CD,
			(SELECT BASE_INFO_NM FROM TB_BASE_INFO_ADM X WHERE X.BASE_INFO_CD=FAULTY_TYPE_CD AND X.BASE_INFO_TYPE='FT') FAULTY_TYPE_NM,
			SUM(FAULTY_TYPE_QTY) FAULTY_TYPE_QTY,
			B.FAULTY_TYPE_TOTAL,
			CONCAT(ROUND((CONVERT(FLOAT,SUM(FAULTY_TYPE_QTY)) / 
			CONVERT(FLOAT,B.FAULTY_TYPE_TOTAL))*100,2),'%') FAULTY_TYPE_RATE,
			(SELECT ETC2 FROM TB_BASE_INFO_ADM X WHERE X.BASE_INFO_CD=FAULTY_TYPE_CD AND X.BASE_INFO_TYPE='FT') FAULTY_TYPE_SEQ
		FROM TB_ITEM_COMPLETE_FAULTY_TYPE A
		LEFT OUTER JOIN (
			SELECT 
				SUBSTRING(X.FAULTY_TYPE_DATE,0,7) FAULTY_TYPE_DATE , 
				SUM(X.FAULTY_TYPE_QTY) FAULTY_TYPE_TOTAL
			FROM TB_ITEM_COMPLETE_FAULTY_TYPE X
			GROUP BY SUBSTRING(X.FAULTY_TYPE_DATE,0,7)
		) B
		ON SUBSTRING(A.FAULTY_TYPE_DATE,0,7) = B.FAULTY_TYPE_DATE
		GROUP BY SUBSTRING(A.FAULTY_TYPE_DATE,0,7), FAULTY_TYPE_CD , FAULTY_TYPE_TOTAL
		HAVING SUBSTRING(SUBSTRING(A.FAULTY_TYPE_DATE,0,7),0,5) LIKE #{faultyTypeDate}
		
	</select>
	
	<!--완제품검사 총 수량조회 -->
	<select id="itemInspectQtyRead" resultMap="ItemCompleteAdmVo">
		SELECT 
			DO_NO,
			DO_NO_SUB,
			ISNULL(SUM(PAIR_QTY),0) PAIR_QTY,
			ISNULL(SUM(FAULTY_QTY),0) FAULTY_QTY
		FROM TB_ITEM_COMPLETE_ADM 
		GROUP BY DO_NO, DO_NO_SUB
		HAVING 1=1
		AND DO_NO=#{doNo}
		AND DO_NO_SUB=#{doNoSub}
	</select>
	
	<!-- 불량유형 개수 -->
	<select id="faultyTypeCount" resultType="int">
		SELECT count(*)
		FROM TB_BASE_INFO_ADM A
		WHERE A.BASE_INFO_TYPE='FT'
		AND A.BASE_INFO_GUBUN='003'
	</select>
	
	<select id="itemCompleteMonthList" resultMap="ItemCompleteAdmVo">
		SELECT FAULTY_TYPE_CD ,
			(SELECT ETC2 FROM TB_BASE_INFO_ADM X WHERE X.BASE_INFO_CD=FAULTY_TYPE_CD AND X.BASE_INFO_TYPE='FT' AND X.BASE_INFO_GUBUN='002') FAULTY_TYPE_SEQ,
			(SELECT BASE_INFO_NM FROM TB_BASE_INFO_ADM X WHERE X.BASE_INFO_CD=FAULTY_TYPE_CD AND X.BASE_INFO_TYPE='FT' AND X.BASE_INFO_GUBUN='002') FAULTY_TYPE_NM,
			SUM(FAULTY_TYPE_QTY) FAULTY_TYPE_QTY,
			ROUND((CONVERT(FLOAT,SUM(FAULTY_TYPE_QTY)) / CONVERT(FLOAT,(SELECT SUM(FAULTY_TYPE_QTY) FROM TB_ITEM_INSPECT_FAULTY_TYPE)))*100,3) FAULTY_TYPE_RATE,
			SUBSTRING(FAULTY_TYPE_DATE,0,5) FAULTY_TYPE_DATE
		FROM TB_ITEM_COMPLETE_FAULTY_TYPE
		GROUP BY FAULTY_TYPE_CD,SUBSTRING(FAULTY_TYPE_DATE,0,5)
		HAVING SUBSTRING(FAULTY_TYPE_DATE,0,5) LIKE #{faultyTypeDate}
	</select>
	
	<!-- 기간별 완제품검사결과 목록 조회 -->
	<select id="testResultCompleteList" resultMap="ItemCompleteAdmVo">			
		SELECT   
			AA.ITEM_SEQ
			 , (SELECT X.ITEM_CD FROM TB_ITEM_INFO_ADM X WHERE AA.ITEM_SEQ = X.ITEM_SEQ) ITEM_CD
			 , (SELECT X.ITEM_NM FROM TB_ITEM_INFO_ADM X WHERE AA.ITEM_SEQ = X.ITEM_SEQ) ITEM_NM
			 , (SELECT X.MAIN_GUBUN FROM TB_ITEM_INFO_ADM X WHERE AA.ITEM_SEQ = X.ITEM_SEQ) MAIN_GUBUN
			 , (SELECT X.ITEM_MODEL FROM TB_ITEM_INFO_ADM X WHERE AA.ITEM_SEQ = X.ITEM_SEQ) ITEM_MODEL
			 , (SELECT X.MOLD_CD FROM TB_ITEM_INFO_ADM X WHERE AA.ITEM_SEQ = X.ITEM_SEQ) MOLD_CD
			 , (SELECT X.EQUIP_NM FROM TB_EQUIP_CODE_ADM X WHERE X.EQUIP_CD = (SELECT I.MOLD_CD FROM TB_ITEM_INFO_ADM I WHERE AA.ITEM_SEQ = I.ITEM_SEQ)) MOLD_NM
			 , (SELECT X.EQUIP_NO FROM TB_EQUIP_CODE_ADM X WHERE X.EQUIP_CD = (SELECT I.MOLD_CD FROM TB_ITEM_INFO_ADM I WHERE AA.ITEM_SEQ = I.ITEM_SEQ)) EQUIP_NO
			 , (SELECT X.EQUIP_CAVITY FROM TB_EQUIP_CODE_ADM X WHERE X.EQUIP_CD = (SELECT I.MOLD_CD FROM TB_ITEM_INFO_ADM I WHERE AA.ITEM_SEQ = I.ITEM_SEQ)) EQUIP_CAVITY
			 , (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_GROUP_CD = '099' AND (SELECT I.ITEM_MODEL FROM TB_ITEM_INFO_ADM I WHERE AA.ITEM_SEQ = I.ITEM_SEQ) = X.BASE_CD) ITEM_MODEL_NM
			 , (SELECT X.ITEM_NM FROM TB_ITEM_INFO_ADM X WHERE X.ITEM_SEQ = (SELECT TOP(1) I.ITEM_SEQ FROM TB_ITEM_MOTOR_EBOM I WHERE I.UPPER_ITEM_SEQ = AA.ITEM_SEQ)) MATRL_NM
			 , (SELECT X.ITEM_GRADE FROM TB_ITEM_INFO_ADM X WHERE X.ITEM_SEQ = (SELECT TOP(1) I.ITEM_SEQ FROM TB_ITEM_MOTOR_EBOM I WHERE I.UPPER_ITEM_SEQ = AA.ITEM_SEQ)) ITEM_GRADE
			 , AA.INSPECT_DATE
			 , AA.DO_DATE
			 , AA.OUTPUT_DATE
			 , ISNULL(AA.TARGET_QTY, 0) TARGET_QTY
			 , ISNULL(AA.INSPECT_CNT, 0) INSPECT_CNT
			 , ISNULL(AA.FAULTY_QTY, 0) FAULTY_QTY		 
			 , ISNULL(AA.PAIR_QTY, 0) PAIR_QTY
			 , AA.DO_NO
			 , ISNULL(AA.OUTPUT_QTY, 0) OUTPUT_QTY
			 , CC.INSP_SOURCE_NO
			 , CC.INSP_SOURCE_SUB_NO
			 , CC.INSP_SEQ
			 , AA.QA_EVAL_NM
			 , AA.APPROVAL_YN_NM
			 , CC.INSP_CD
			 , (SELECT X.INSP_LIST FROM TB_INSP_ITEM_DTL X WHERE X.INSP_CD = CC.INSP_CD AND X.INSP_SEQ = CC.INSP_SEQ AND X.INSP_TYPE = CC.INSP_TYPE) INSP_LIST
			 , CC.INSP_RESULT
			 , (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_GROUP_CD = '072' AND X.BASE_CD = CC.INSP_RESULT) INSP_RESULT_NM
			 , CC.INSP_TYPE
			 , (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_GROUP_CD = '126' AND X.BASE_CD = CC.INSP_TYPE) INSP_TYPE_NM
			 , (SELECT X.INSP_STAND_UPPER FROM TB_INSP_ITEM_DTL X WHERE X.INSP_CD = CC.INSP_CD AND X.INSP_SEQ = CC.INSP_SEQ AND X.INSP_TYPE = CC.INSP_TYPE) INSP_STAND_UPPER
			 , (SELECT X.INSP_STAND_LOWER FROM TB_INSP_ITEM_DTL X WHERE X.INSP_CD = CC.INSP_CD AND X.INSP_SEQ = CC.INSP_SEQ AND X.INSP_TYPE = CC.INSP_TYPE) INSP_STAND_LOWER
			 , (SELECT X.INSP_CHECK FROM TB_INSP_ITEM_DTL X WHERE X.INSP_CD = CC.INSP_CD AND X.INSP_SEQ = CC.INSP_SEQ AND X.INSP_TYPE = CC.INSP_TYPE) INSP_CHECK
			 , (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_GROUP_CD = '134' AND (SELECT I.INSP_CHECK FROM TB_INSP_ITEM_DTL I WHERE I.INSP_CD = CC.INSP_CD AND I.INSP_SEQ = CC.INSP_SEQ AND I.INSP_TYPE = CC.INSP_TYPE) = X.BASE_CD) INSP_CHECK_NM
			 , CC.INSP_X1
			 , CC.INSP_X2
			 , CC.INSP_X3
			 , CC.INSP_X4
			 , CC.INSP_X5
			 , CC.INSP_X6
			 , CONCAT('CVT.', CONVERT(INT,IC.CAVITY_NO1)) CAVITY_NO1
			 , CONCAT('CVT.', CONVERT(INT,IC.CAVITY_NO2)) CAVITY_NO2
			 , CONCAT('CVT.', CONVERT(INT,IC.CAVITY_NO3)) CAVITY_NO3
			 , CONCAT('CVT.', CONVERT(INT,IC.CAVITY_NO4)) CAVITY_NO4
			 , CONCAT('CVT.', CONVERT(INT,IC.CAVITY_NO5)) CAVITY_NO5
		FROM (
			SELECT
				DOD_TB.DO_NO
				, DOD_TB.DO_NO_SEV DO_NO_SUB
				, DOA_TB.DO_DATE
				, DOD_TB.OUTPUT_DATE
				, DOD_TB.DO_STAUTS
				, ISNULL(SUM(DOD_TB.TARGET_QTY), 0) TARGET_QTY
				, IIA_TB.MAIN_GUBUN
				, IIA_TB.ITEM_SEQ
				, IIA_TB.ITEM_CD
				, IIA_TB.ITEM_NM
				, IIA_TB.ITEM_MODEL
				, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA_TB.ITEM_MODEL AND X.BASE_GROUP_CD = '099') ITEM_MODEL_NM
				, IIA_TB.ITEM_GUBUN
				, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA_TB.ITEM_GUBUN AND X.BASE_GROUP_CD = '079') ITEM_GUBUN_NM
				, ICM_TB.APPROVAL_YN
				, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = ICM_TB.APPROVAL_YN AND X.BASE_GROUP_CD = '062') APPROVAL_YN_NM
				, ICM_TB.QA_EVAL
				, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = ICM_TB.QA_EVAL AND X.BASE_GROUP_CD = '072') QA_EVAL_NM
				, ICM_TB.INSPECT_DATE
				, ICM_TB.INSPECT_CNT
				, ICM_TB.INSPECT_CHARGR
				, (SELECT X.USER_NM FROM TB_USER X WHERE X.USER_NUMBER = ICM_TB.INSPECT_CHARGR) INSPECT_CHARGR_NM
				, ICA_TB.PAIR_QTY
				, ICA_TB.FAULTY_QTY
				, DOD_TB.OUTPUT_QTY
			FROM TB_DELIVERY_ORDER_ADM DOA_TB
			LEFT OUTER JOIN (
				SELECT
					Z.DO_NO
					, Z.DO_NO_SEV
					, Z.ITEM_SEQ
					, Z.OUTPUT_DATE
					, ISNULL(SUM(Z.TARGET_QTY), 0) TARGET_QTY
					, ISNULL(SUM(Z.OUTPUT_QTY), 0) OUTPUT_QTY
					, CASE WHEN COUNT(*) = (
						SELECT 
							COUNT(*)
						FROM TB_DELIVERY_ORDER_DTL D
						WHERE 1=1
						GROUP BY D.DO_NO, D.DO_NO_SEV, D.DO_STATUS
						HAVING 1=1
						AND D.DO_STATUS = '003'
						AND Z.DO_NO = D.DO_NO
						AND Z.DO_NO_SEV = D.DO_NO_SEV
					)
					THEN '출하완료'
					WHEN COUNT(*) = (
						SELECT
							COUNT(*)
						FROM TB_DELIVERY_ORDER_DTL D
						WHERE 1=1
						GROUP BY D.DO_NO, D.DO_NO_SEV, D.DO_STATUS
						HAVING 1=1
						AND D.DO_STATUS = '001'
						AND Z.DO_NO = D.DO_NO
						AND Z.DO_NO_SEV = D.DO_NO_SEV
					)
					THEN '출하요청'
					ELSE '검사완료' END DO_STAUTS
				FROM TB_DELIVERY_ORDER_DTL Z
				GROUP BY Z.DO_NO, Z.DO_NO_SEV, Z.ITEM_SEQ, Z.OUTPUT_DATE
			) DOD_TB
			ON DOA_TB.DO_NO = DOD_TB.DO_NO
			LEFT OUTER JOIN TB_ITEM_COMPLETE_MASTER_ADM ICM_TB
			ON ICM_TB.DO_NO = DOD_TB.DO_NO
			AND ICM_TB.DO_NO_SUB = DOD_TB.DO_NO_SEV
			LEFT OUTER JOIN (
				SELECT
					I.DO_NO
					, I.DO_NO_SUB
					, ISNULL(SUM(I.PAIR_QTY), 0) PAIR_QTY
					, ISNULL(SUM(I.FAULTY_QTY), 0) FAULTY_QTY
				FROM TB_ITEM_COMPLETE_ADM I
				GROUP BY I.DO_NO, I.DO_NO_SUB
			) ICA_TB
			ON ICM_TB.DO_NO = ICA_TB.DO_NO
			AND ICM_TB.DO_NO_SUB = ICA_TB.DO_NO_SUB
			LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA_TB
			ON DOD_TB.ITEM_SEQ = IIA_TB.ITEM_SEQ
			GROUP BY
				IIA_TB.MAIN_GUBUN
				, DOD_TB.DO_NO
				, DOA_TB.DO_DATE
				, DOD_TB.OUTPUT_DATE
				, DOD_TB.DO_NO_SEV
				, DOD_TB.DO_STAUTS
				, IIA_TB.ITEM_SEQ
				, IIA_TB.ITEM_CD
				, IIA_TB.ITEM_NM
				, IIA_TB.ITEM_MODEL
				, IIA_TB.ITEM_GUBUN
				, ICM_TB.APPROVAL_YN
				, ICM_TB.QA_EVAL
				, ICM_TB.INSPECT_DATE
				, ICM_TB.INSPECT_CNT
				, ICA_TB.PAIR_QTY
				, ICA_TB.FAULTY_QTY
				, DOD_TB.OUTPUT_QTY
				, ICM_TB.INSPECT_CHARGR
			HAVING 1=1
		) AA, TB_INSP_RESULT_ADM CC
		LEFT OUTER JOIN TB_INSP_CAVITY_ADM IC
		ON CC.INSP_SOURCE_NO = IC.INSP_SOURCE_NO
		AND CC.INSP_SOURCE_SUB_NO = IC.INSP_SOURCE_SUB_NO
		AND CC.INSP_TYPE = IC.INSP_TYPE
		WHERE 1=1
		AND CC.INSP_SOURCE_NO = AA.DO_NO
		AND CC.INSP_SOURCE_SUB_NO = AA.DO_NO_SUB
		AND CC.INSP_RESULT_GUBUN = '001'
		AND CC.INSP_RESULT != ''
		<if test="mainGubun != null and !mainGubun.equals('')">
		AND AA.MAIN_GUBUN = #{mainGubun}
		</if>
		<if test="startDate != null and !startDate.equals('')">
		AND AA.OUTPUT_DATE BETWEEN #{startDate} AND #{endDate}
		</if>
		<if test="inspType != null and !inspType.equals('')">
		AND CC.INSP_TYPE = #{inspType}
		</if>
		<if test="itemSeq != null and !itemSeq.equals('')">
		AND AA.ITEM_SEQ = #{itemSeq}
		</if>
		<if test="qaEval != null and !qaEval.equals('')">
		AND AA.QA_EVAL = #{qaEval}
		</if>
		<if test="approvalYn != null and !approvalYn.equals('')">
		AND AA.APPROVAL_YN = #{approvalYn}
		</if>
		<if test="inspSourceNo != null and !inspSourceNo.equals('')">
		AND CC.INSP_SOURCE_NO = #{inspSourceNo}
		</if>
		<if test="inspSourceSubNo != null and !inspSourceSubNo.equals('')">
		AND CC.INSP_SOURCE_SUB_NO = #{inspSourceSubNo}
		</if>
		ORDER BY AA.INSPECT_DATE ASC, AA.DO_NO ASC, CC.INSP_TYPE ASC, CC.INSP_SEQ ASC
	</select>
	
	<!-- 검사항목결과관리 연계번호 조회 -->
	<select id="inspResultAdmList" resultMap="ItemCompleteAdmVo">			
		SELECT DISTINCT
			CC.INSP_SOURCE_NO
			, CC.INSP_SOURCE_SUB_NO
		FROM (
			SELECT
				DOD_TB.DO_NO
				, DOD_TB.DO_NO_SEV DO_NO_SUB
				, DOA_TB.DO_DATE
				, DOD_TB.OUTPUT_DATE
				, DOD_TB.DO_STAUTS
				, ISNULL(SUM(DOD_TB.TARGET_QTY), 0) TARGET_QTY
				, IIA_TB.MAIN_GUBUN
				, IIA_TB.ITEM_SEQ
				, IIA_TB.ITEM_CD
				, IIA_TB.ITEM_NM
				, IIA_TB.ITEM_MODEL
				, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA_TB.ITEM_MODEL AND X.BASE_GROUP_CD = '099') ITEM_MODEL_NM
				, IIA_TB.ITEM_GUBUN
				, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = IIA_TB.ITEM_GUBUN AND X.BASE_GROUP_CD = '079') ITEM_GUBUN_NM
				, ICM_TB.APPROVAL_YN
				, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = ICM_TB.APPROVAL_YN AND X.BASE_GROUP_CD = '062') APPROVAL_YN_NM
				, ICM_TB.QA_EVAL
				, (SELECT X.BASE_NM FROM TB_COMMON_CODE_ADM X WHERE X.BASE_CD = ICM_TB.QA_EVAL AND X.BASE_GROUP_CD = '072') QA_EVAL_NM
				, ICM_TB.INSPECT_DATE
				, ICM_TB.INSPECT_CNT
				, ICM_TB.INSPECT_CHARGR
				, (SELECT X.USER_NM FROM TB_USER X WHERE X.USER_NUMBER = ICM_TB.INSPECT_CHARGR) INSPECT_CHARGR_NM
				, ICA_TB.PAIR_QTY
				, ICA_TB.FAULTY_QTY
				, DOD_TB.OUTPUT_QTY
			FROM TB_DELIVERY_ORDER_ADM DOA_TB
			LEFT OUTER JOIN (
				SELECT
					Z.DO_NO
					, Z.DO_NO_SEV
					, Z.ITEM_SEQ
					, Z.OUTPUT_DATE
					, ISNULL(SUM(Z.TARGET_QTY), 0) TARGET_QTY
					, ISNULL(SUM(Z.OUTPUT_QTY), 0) OUTPUT_QTY
					, CASE WHEN COUNT(*) = (
						SELECT 
							COUNT(*)
						FROM TB_DELIVERY_ORDER_DTL D
						WHERE 1=1
						GROUP BY D.DO_NO, D.DO_NO_SEV, D.DO_STATUS
						HAVING 1=1
						AND D.DO_STATUS = '003'
						AND Z.DO_NO = D.DO_NO
						AND Z.DO_NO_SEV = D.DO_NO_SEV
					)
					THEN '출하완료'
					WHEN COUNT(*) = (
						SELECT
							COUNT(*)
						FROM TB_DELIVERY_ORDER_DTL D
						WHERE 1=1
						GROUP BY D.DO_NO, D.DO_NO_SEV, D.DO_STATUS
						HAVING 1=1
						AND D.DO_STATUS = '001'
						AND Z.DO_NO = D.DO_NO
						AND Z.DO_NO_SEV = D.DO_NO_SEV
					)
					THEN '출하요청'
					ELSE '검사완료' END DO_STAUTS
				FROM TB_DELIVERY_ORDER_DTL Z
				GROUP BY Z.DO_NO, Z.DO_NO_SEV, Z.ITEM_SEQ, Z.OUTPUT_DATE
			) DOD_TB
			ON DOA_TB.DO_NO = DOD_TB.DO_NO
			LEFT OUTER JOIN TB_ITEM_COMPLETE_MASTER_ADM ICM_TB
			ON ICM_TB.DO_NO = DOD_TB.DO_NO
			AND ICM_TB.DO_NO_SUB = DOD_TB.DO_NO_SEV
			LEFT OUTER JOIN (
				SELECT
					I.DO_NO
					, I.DO_NO_SUB
					, ISNULL(SUM(I.PAIR_QTY), 0) PAIR_QTY
					, ISNULL(SUM(I.FAULTY_QTY), 0) FAULTY_QTY
				FROM TB_ITEM_COMPLETE_ADM I
				GROUP BY I.DO_NO, I.DO_NO_SUB
			) ICA_TB
			ON ICM_TB.DO_NO = ICA_TB.DO_NO
			AND ICM_TB.DO_NO_SUB = ICA_TB.DO_NO_SUB
			LEFT OUTER JOIN TB_ITEM_INFO_ADM IIA_TB
			ON DOD_TB.ITEM_SEQ = IIA_TB.ITEM_SEQ
			GROUP BY
				IIA_TB.MAIN_GUBUN
				, DOD_TB.DO_NO
				, DOA_TB.DO_DATE
				, DOD_TB.OUTPUT_DATE
				, DOD_TB.DO_NO_SEV
				, DOD_TB.DO_STAUTS
				, IIA_TB.ITEM_SEQ
				, IIA_TB.ITEM_CD
				, IIA_TB.ITEM_NM
				, IIA_TB.ITEM_MODEL
				, IIA_TB.ITEM_GUBUN
				, ICM_TB.APPROVAL_YN
				, ICM_TB.QA_EVAL
				, ICM_TB.INSPECT_DATE
				, ICM_TB.INSPECT_CNT
				, ICA_TB.PAIR_QTY
				, ICA_TB.FAULTY_QTY
				, DOD_TB.OUTPUT_QTY
				, ICM_TB.INSPECT_CHARGR
			HAVING 1=1
		) AA, TB_INSP_RESULT_ADM CC
		LEFT OUTER JOIN TB_INSP_CAVITY_ADM IC
		ON CC.INSP_SOURCE_NO = IC.INSP_SOURCE_NO
		AND CC.INSP_SOURCE_SUB_NO = IC.INSP_SOURCE_SUB_NO
		AND CC.INSP_TYPE = IC.INSP_TYPE
		WHERE 1=1
		AND CC.INSP_SOURCE_NO = AA.DO_NO
		AND CC.INSP_SOURCE_SUB_NO = AA.DO_NO_SUB
		AND CC.INSP_RESULT_GUBUN = '001'
		AND CC.INSP_RESULT != ''
		<if test="mainGubun != null and !mainGubun.equals('')">
		AND AA.MAIN_GUBUN = #{mainGubun}
		</if>
		<if test="startDate != null and !startDate.equals('')">
		AND AA.OUTPUT_DATE BETWEEN #{startDate} AND #{endDate}
		</if>
		<if test="inspType != null and !inspType.equals('')">
		AND CC.INSP_TYPE = #{inspType}
		</if>	
		<if test="itemSeq != null and !itemSeq.equals('')">
		AND AA.ITEM_SEQ = #{itemSeq}
		</if>
		<if test="qaEval != null and !qaEval.equals('')">
		AND AA.QA_EVAL = #{qaEval}
		</if>
		<if test="approvalYn != null and !approvalYn.equals('')">
		AND AA.APPROVAL_YN = #{approvalYn}
		</if>
	</select>
	
</mapper>