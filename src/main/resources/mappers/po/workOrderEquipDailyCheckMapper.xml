<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  	
<mapper namespace="mes.mappers.po.workOrderEquipDailyCheckMapper">

	<resultMap id="WorkOrderEquipDailyCheckVo" type="mes.domain.po.WorkOrderEquipDailyCheckVo">
		<result property="dcNo"				column="DC_NO"				/>
		<result property="workOrdNo"		column="WORK_ORD_NO"		/>
		<result property="mainGubun"		column="MAIN_GUBUN"			/>
		<result property="equipCd"			column="EQUIP_CD"			/>
		<result property="equipNm"			column="EQUIP_NM"			/>
		<result property="checkSeq"			column="CHECK_SEQ"			/>
		
		<result property="checkList"		column="CHECK_LIST"			/>
		<result property="checkMethod"		column="CHECK_METHOD"		/>
		<result property="checkSpec"		column="CHECK_SPEC"			/>
		<result property="inspInputMethod"	column="INSP_INPUT_METHOD"	/>
		
		<result property="checkPass"		column="CHECK_PASS"			/>
		<result property="checkResult"		column="CHECK_RESULT"		/>
		<result property="checkDate"		column="CHECK_DATE"			/>
		<result property="checkChargr"		column="CHECK_CHARGR"		/>
		
		<result property="allCount"			column="ALL_COUNT"			/>
		<result property="okCount"			column="OK_COUNT"			/>
		<result property="totalPass"		column="TOTAL_PASS"			/>
		
		<result property="startDate"		column="START_DATE"			/>
		<result property="endDate"			column="END_DATE"			/>
		
		<result property="regId"			column="REG_ID"				/>
		<result property="regDate"			column="REG_DATE"			/>
		<result property="updId"			column="UPD_ID"				/>
		<result property="updDate"			column="UPD_DATE"			/>					
	</resultMap>

	<!-- 일상점검 목록조회 -->			
	<select id="listAll" resultMap="WorkOrderEquipDailyCheckVo">
		SELECT 
			E.EQUIP_CD,
			E.CHECK_SEQ,
			E.MAIN_GUBUN,
			E.CHECK_LIST,
			E.CHECK_METHOD,
			E.CHECK_SPEC,
			E.INSP_INPUT_METHOD,
			W.CHECK_PASS,
			W.CHECK_RESULT,
			W.CHECK_DATE,
			W.CHECK_CHARGR
		FROM TB_EQUIP_DAILY_CHECK E
		LEFT OUTER JOIN TB_WORK_ORDER_EQUIP_DAILY_CHECK W
		ON E.EQUIP_CD=W.EQUIP_CD
		AND E.CHECK_SEQ=W.CHECK_SEQ
		AND W.WORK_ORD_NO=#{workOrdNo}
		AND W.MAIN_GUBUN=#{mainGubun}
		WHERE E.EQUIP_CD=#{equipCd}
	</select>
	
	<!-- 일상점검 상세조회 -->			
	<select id="read" resultMap="WorkOrderEquipDailyCheckVo">
		SELECT 
			W.DC_NO,
			W.WORK_ORD_NO,
			W.MAIN_GUBUN,
			W.EQUIP_CD,
			W.CHECK_SEQ,
			E.CHECK_LIST,
			E.CHECK_METHOD,
			E.CHECK_SPEC,
			E.INSP_INPUT_METHOD,
			W.CHECK_PASS,
			W.CHECK_RESULT,
			W.CHECK_DATE,
			W.CHECK_CHARGR
		FROM TB_WORK_ORDER_EQUIP_DAILY_CHECK W
		LEFT OUTER JOIN TB_EQUIP_DAILY_CHECK E 
		ON W.EQUIP_CD=E.EQUIP_CD
		AND W.CHECK_SEQ=E.CHECK_SEQ
		WHERE W.WORK_ORD_NO = #{workOrdNo}
		AND W.MAIN_GUBUN = #{mainGubun}
		AND E.EQUIP_CD = #{equipCd}
		AND E.CHECK_SEQ = #{checkSeq}
	</select>
	
	<!--일상점검 설비별 목록조회  -->
	<select id="workOrderEquipDailyCheckByEquipCd" resultMap="WorkOrderEquipDailyCheckVo">
		SELECT 
			WORK_ORD_NO,
			EQUIP_CD,
			(SELECT EQUIP_NM FROM TB_EQUIP_CODE_ADM E WHERE E.EQUIP_CD=C.EQUIP_CD) EQUIP_NM,
			CHECK_DATE,
			(SELECT USER_NM FROM TB_USER WHERE USER_NUMBER=CHECK_CHARGR) CHECK_CHARGR
		FROM TB_WORK_ORDER_EQUIP_DAILY_CHECK C
		GROUP BY WORK_ORD_NO,EQUIP_CD,CHECK_DATE,CHECK_CHARGR
		HAVING 1=1
		AND EQUIP_CD=#{equipCd}
		AND CHECK_DATE BETWEEN #{startDate} AND #{endDate}
	</select>
	
	<!-- 일상점검 등록 -->			
	<insert id="create">
		INSERT INTO TB_WORK_ORDER_EQUIP_DAILY_CHECK(
			DC_NO,
			WORK_ORD_NO,
			MAIN_GUBUN,
			EQUIP_CD,
			CHECK_SEQ,
			CHECK_PASS,
			CHECK_RESULT,
			CHECK_DATE,
			CHECK_CHARGR,
			REG_ID,
			REG_DATE
		) 
		VALUES(
			#{dcNo},
			#{workOrdNo},
			#{mainGubun},
			#{equipCd},
			#{checkSeq},
			#{checkPass},
			#{checkResult},
			#{checkDate},
			#{checkChargr},
			#{regId},
			GETDATE()
		)
	</insert>
	
	<!-- 일상점검 수정 -->			
	<update id="update">
		UPDATE	TB_WORK_ORDER_EQUIP_DAILY_CHECK 
		<set>
			<if test="checkPass!=null and !checkPass.equals('')">
				CHECK_PASS = #{checkPass},
			</if>
			<if test="checkResult!=null and !checkResult.equals('')">
				CHECK_RESULT = #{checkResult},
			</if>
			<if test="checkDate!=null and !checkDate.equals('')">
				CHECK_DATE = #{checkDate},
			</if>
			<if test="checkChargr!=null and !checkChargr.equals('')">
				CHECK_CHARGR = #{checkChargr},
			</if>
			UPD_ID = #{updId},
			UPD_DATE = GETDATE()
		</set>
		WHERE	DC_NO = #{dcNo}
	
	</update>
				
	<!-- 일상점검 삭제 -->		
	<delete id="delete">
		DELETE FROM TB_WORK_ORDER_EQUIP_DAILY_CHECK 
		WHERE	DC_NO = #{dcNo}
	</delete>
	
	<!-- 일상점검 번호 생성 -->
	<select id="getDcNo" resultType="String">
		SELECT ISNULL(RIGHT('000' + CAST(MAX(RIGHT(DC_NO,3))+1 AS NVARCHAR),3), '001') 
		FROM TB_WORK_ORDER_EQUIP_DAILY_CHECK 
		WHERE SUBSTRING(DC_NO,0,9) = #{today}
	</select>
	
	<select id="getTotalPass" resultMap="WorkOrderEquipDailyCheckVo">
		SELECT 
			TOP(1)
			MAIN_GUBUN,
			CASE WHEN ISNULL(TB.CNT,0) = ISNULL(LEAD(TB.CNT,1,NULL) OVER (ORDER BY MAIN_GUBUN ASC),0) THEN 'OK' ELSE 'NG' END TOTAL_PASS
		FROM
		
		(
		SELECT MAIN_GUBUN, 'ALL' PASS, COUNT(*) CNT
		FROM TB_WORK_ORDER_EQUIP_DAILY_CHECK
		WHERE 1=1
		AND WORK_ORD_NO=#{workOrdNo}
		GROUP BY MAIN_GUBUN
		
		UNION
		
		SELECT MAIN_GUBUN, 'OK' PASS, COUNT(*) CNT
		FROM TB_WORK_ORDER_EQUIP_DAILY_CHECK
		WHERE 1=1
		AND WORK_ORD_NO=#{workOrdNo}
		AND CHECK_PASS='OK'
		GROUP BY MAIN_GUBUN
		)TB
		WHERE MAIN_GUBUN=#{mainGubun}
			
	</select>
</mapper>
